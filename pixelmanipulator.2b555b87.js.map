{"mappings":"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","sources":["<anon>","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/dist/base-component.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/src/base-component.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/dist/dom/data.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/src/dom/data.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/dist/dom/event-handler.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/src/dom/event-handler.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/dist/util/index.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/src/util/index.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/dist/util/config.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/src/util/config.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/dist/dom/manipulator.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/src/dom/manipulator.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/dist/dom/selector-engine.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/src/dom/selector-engine.js","packages/pixelmanipulator-web-demo/src/index.ts","packages/pixelmanipulator/dist/browser.js","packages/pixelmanipulator/dist/packages/pixelmanipulator/src/pixelmanipulator.ts","packages/pixelmanipulator/dist/packages/pixelmanipulator/package.json","packages/pixelmanipulator/dist/packages/pixelmanipulator/src/renderers.ts","packages/pixelmanipulator/dist/packages/pixelmanipulator/src/neighborhoods.ts","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/dist/collapse.js","node_modules/.pnpm/bootstrap@5.3.3_@popperjs+core@2.11.8/node_modules/bootstrap/js/src/collapse.js","node_modules/.pnpm/fps-control@1.0.0/node_modules/fps-control/index.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"ka9Le\", function(module, exports) {\n\n\n\n\n/*!\n  * Bootstrap base-component.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */ (function(global, factory) {\n    module.exports = factory((parcelRequire(\"3DQH2\")), (parcelRequire(\"dfTqR\")), (parcelRequire(\"4o82T\")), (parcelRequire(\"9Dw5O\")));\n})(module.exports, function(Data, EventHandler, Config, index_js) {\n    'use strict';\n    /**\n   * --------------------------------------------------------------------------\n   * Bootstrap base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */ /**\n   * Constants\n   */ const VERSION = '5.3.3';\n    /**\n   * Class definition\n   */ class BaseComponent extends Config {\n        constructor(element, config){\n            super();\n            element = index_js.getElement(element);\n            if (!element) return;\n            this._element = element;\n            this._config = this._getConfig(config);\n            Data.set(this._element, this.constructor.DATA_KEY, this);\n        }\n        // Public\n        dispose() {\n            Data.remove(this._element, this.constructor.DATA_KEY);\n            EventHandler.off(this._element, this.constructor.EVENT_KEY);\n            for (const propertyName of Object.getOwnPropertyNames(this))this[propertyName] = null;\n        }\n        _queueCallback(callback, element, isAnimated = true) {\n            index_js.executeAfterTransition(callback, element, isAnimated);\n        }\n        _getConfig(config) {\n            config = this._mergeConfigObj(config, this._element);\n            config = this._configAfterMerge(config);\n            this._typeCheckConfig(config);\n            return config;\n        }\n        // Static\n        static getInstance(element) {\n            return Data.get(index_js.getElement(element), this.DATA_KEY);\n        }\n        static getOrCreateInstance(element, config = {}) {\n            return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get DATA_KEY() {\n            return `bs.${this.NAME}`;\n        }\n        static get EVENT_KEY() {\n            return `.${this.DATA_KEY}`;\n        }\n        static eventName(name) {\n            return `${name}${this.EVENT_KEY}`;\n        }\n    }\n    return BaseComponent;\n});\n\n});\nparcelRegister(\"3DQH2\", function(module, exports) {\n/*!\n  * Bootstrap data.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */ (function(global, factory) {\n    module.exports = factory();\n})(module.exports, function() {\n    'use strict';\n    /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/data.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */ /**\n   * Constants\n   */ const elementMap = new Map();\n    const data = {\n        set (element, key, instance) {\n            if (!elementMap.has(element)) elementMap.set(element, new Map());\n            const instanceMap = elementMap.get(element);\n            // make it clear we only want one instance per element\n            // can be removed later when multiple key/instances are fine to be used\n            if (!instanceMap.has(key) && instanceMap.size !== 0) {\n                // eslint-disable-next-line no-console\n                console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);\n                return;\n            }\n            instanceMap.set(key, instance);\n        },\n        get (element, key) {\n            if (elementMap.has(element)) return elementMap.get(element).get(key) || null;\n            return null;\n        },\n        remove (element, key) {\n            if (!elementMap.has(element)) return;\n            const instanceMap = elementMap.get(element);\n            instanceMap.delete(key);\n            // free up element references if there are no instances left for an element\n            if (instanceMap.size === 0) elementMap.delete(element);\n        }\n    };\n    return data;\n});\n\n});\n\nparcelRegister(\"dfTqR\", function(module, exports) {\n\n/*!\n  * Bootstrap event-handler.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */ (function(global, factory) {\n    module.exports = factory((parcelRequire(\"9Dw5O\")));\n})(module.exports, function(index_js) {\n    'use strict';\n    /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/event-handler.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */ /**\n   * Constants\n   */ const namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\n    const stripNameRegex = /\\..*/;\n    const stripUidRegex = /::\\d+$/;\n    const eventRegistry = {}; // Events storage\n    let uidEvent = 1;\n    const customEvents = {\n        mouseenter: 'mouseover',\n        mouseleave: 'mouseout'\n    };\n    const nativeEvents = new Set([\n        'click',\n        'dblclick',\n        'mouseup',\n        'mousedown',\n        'contextmenu',\n        'mousewheel',\n        'DOMMouseScroll',\n        'mouseover',\n        'mouseout',\n        'mousemove',\n        'selectstart',\n        'selectend',\n        'keydown',\n        'keypress',\n        'keyup',\n        'orientationchange',\n        'touchstart',\n        'touchmove',\n        'touchend',\n        'touchcancel',\n        'pointerdown',\n        'pointermove',\n        'pointerup',\n        'pointerleave',\n        'pointercancel',\n        'gesturestart',\n        'gesturechange',\n        'gestureend',\n        'focus',\n        'blur',\n        'change',\n        'reset',\n        'select',\n        'submit',\n        'focusin',\n        'focusout',\n        'load',\n        'unload',\n        'beforeunload',\n        'resize',\n        'move',\n        'DOMContentLoaded',\n        'readystatechange',\n        'error',\n        'abort',\n        'scroll'\n    ]);\n    /**\n   * Private methods\n   */ function makeEventUid(element, uid) {\n        return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n    }\n    function getElementEvents(element) {\n        const uid = makeEventUid(element);\n        element.uidEvent = uid;\n        eventRegistry[uid] = eventRegistry[uid] || {};\n        return eventRegistry[uid];\n    }\n    function bootstrapHandler(element, fn) {\n        return function handler(event) {\n            hydrateObj(event, {\n                delegateTarget: element\n            });\n            if (handler.oneOff) EventHandler.off(element, event.type, fn);\n            return fn.apply(element, [\n                event\n            ]);\n        };\n    }\n    function bootstrapDelegationHandler(element, selector, fn) {\n        return function handler(event) {\n            const domElements = element.querySelectorAll(selector);\n            for(let { target: target } = event; target && target !== this; target = target.parentNode)for (const domElement of domElements){\n                if (domElement !== target) continue;\n                hydrateObj(event, {\n                    delegateTarget: target\n                });\n                if (handler.oneOff) EventHandler.off(element, event.type, selector, fn);\n                return fn.apply(target, [\n                    event\n                ]);\n            }\n        };\n    }\n    function findHandler(events, callable, delegationSelector = null) {\n        return Object.values(events).find((event)=>event.callable === callable && event.delegationSelector === delegationSelector);\n    }\n    function normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n        const isDelegated = typeof handler === 'string';\n        // TODO: tooltip passes `false` instead of selector, so we need to check\n        const callable = isDelegated ? delegationFunction : handler || delegationFunction;\n        let typeEvent = getTypeEvent(originalTypeEvent);\n        if (!nativeEvents.has(typeEvent)) typeEvent = originalTypeEvent;\n        return [\n            isDelegated,\n            callable,\n            typeEvent\n        ];\n    }\n    function addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n        if (typeof originalTypeEvent !== 'string' || !element) return;\n        let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n        // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n        // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n        if (originalTypeEvent in customEvents) {\n            const wrapFunction = (fn)=>{\n                return function(event) {\n                    if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) return fn.call(this, event);\n                };\n            };\n            callable = wrapFunction(callable);\n        }\n        const events = getElementEvents(element);\n        const handlers = events[typeEvent] || (events[typeEvent] = {});\n        const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);\n        if (previousFunction) {\n            previousFunction.oneOff = previousFunction.oneOff && oneOff;\n            return;\n        }\n        const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''));\n        const fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);\n        fn.delegationSelector = isDelegated ? handler : null;\n        fn.callable = callable;\n        fn.oneOff = oneOff;\n        fn.uidEvent = uid;\n        handlers[uid] = fn;\n        element.addEventListener(typeEvent, fn, isDelegated);\n    }\n    function removeHandler(element, events, typeEvent, handler, delegationSelector) {\n        const fn = findHandler(events[typeEvent], handler, delegationSelector);\n        if (!fn) return;\n        element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n        delete events[typeEvent][fn.uidEvent];\n    }\n    function removeNamespacedHandlers(element, events, typeEvent, namespace) {\n        const storeElementEvent = events[typeEvent] || {};\n        for (const [handlerKey, event] of Object.entries(storeElementEvent))if (handlerKey.includes(namespace)) removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n    }\n    function getTypeEvent(event) {\n        // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n        event = event.replace(stripNameRegex, '');\n        return customEvents[event] || event;\n    }\n    const EventHandler = {\n        on (element, event, handler, delegationFunction) {\n            addHandler(element, event, handler, delegationFunction, false);\n        },\n        one (element, event, handler, delegationFunction) {\n            addHandler(element, event, handler, delegationFunction, true);\n        },\n        off (element, originalTypeEvent, handler, delegationFunction) {\n            if (typeof originalTypeEvent !== 'string' || !element) return;\n            const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n            const inNamespace = typeEvent !== originalTypeEvent;\n            const events = getElementEvents(element);\n            const storeElementEvent = events[typeEvent] || {};\n            const isNamespace = originalTypeEvent.startsWith('.');\n            if (typeof callable !== 'undefined') {\n                // Simplest case: handler is passed, remove that listener ONLY.\n                if (!Object.keys(storeElementEvent).length) return;\n                removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);\n                return;\n            }\n            if (isNamespace) for (const elementEvent of Object.keys(events))removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n            for (const [keyHandlers, event] of Object.entries(storeElementEvent)){\n                const handlerKey = keyHandlers.replace(stripUidRegex, '');\n                if (!inNamespace || originalTypeEvent.includes(handlerKey)) removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n            }\n        },\n        trigger (element, event, args) {\n            if (typeof event !== 'string' || !element) return null;\n            const $ = index_js.getjQuery();\n            const typeEvent = getTypeEvent(event);\n            const inNamespace = event !== typeEvent;\n            let jQueryEvent = null;\n            let bubbles = true;\n            let nativeDispatch = true;\n            let defaultPrevented = false;\n            if (inNamespace && $) {\n                jQueryEvent = $.Event(event, args);\n                $(element).trigger(jQueryEvent);\n                bubbles = !jQueryEvent.isPropagationStopped();\n                nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n                defaultPrevented = jQueryEvent.isDefaultPrevented();\n            }\n            const evt = hydrateObj(new Event(event, {\n                bubbles: bubbles,\n                cancelable: true\n            }), args);\n            if (defaultPrevented) evt.preventDefault();\n            if (nativeDispatch) element.dispatchEvent(evt);\n            if (evt.defaultPrevented && jQueryEvent) jQueryEvent.preventDefault();\n            return evt;\n        }\n    };\n    function hydrateObj(obj, meta = {}) {\n        for (const [key, value] of Object.entries(meta))try {\n            obj[key] = value;\n        } catch (_unused) {\n            Object.defineProperty(obj, key, {\n                configurable: true,\n                get () {\n                    return value;\n                }\n            });\n        }\n        return obj;\n    }\n    return EventHandler;\n});\n\n});\nparcelRegister(\"9Dw5O\", function(module, exports) {\n/*!\n  * Bootstrap index.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */ (function(global, factory) {\n    factory(module.exports);\n})(module.exports, function(exports1) {\n    'use strict';\n    /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/index.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */ const MAX_UID = 1000000;\n    const MILLISECONDS_MULTIPLIER = 1000;\n    const TRANSITION_END = 'transitionend';\n    /**\n   * Properly escape IDs selectors to handle weird IDs\n   * @param {string} selector\n   * @returns {string}\n   */ const parseSelector = (selector)=>{\n        if (selector && window.CSS && window.CSS.escape) // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n        selector = selector.replace(/#([^\\s\"#']+)/g, (match, id)=>`#${CSS.escape(id)}`);\n        return selector;\n    };\n    // Shout-out Angus Croll (https://goo.gl/pxwQGp)\n    const toType = (object)=>{\n        if (object === null || object === undefined) return `${object}`;\n        return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase();\n    };\n    /**\n   * Public Util API\n   */ const getUID = (prefix)=>{\n        do prefix += Math.floor(Math.random() * MAX_UID);\n        while (document.getElementById(prefix));\n        return prefix;\n    };\n    const getTransitionDurationFromElement = (element)=>{\n        if (!element) return 0;\n        // Get transition-duration of the element\n        let { transitionDuration: transitionDuration, transitionDelay: transitionDelay } = window.getComputedStyle(element);\n        const floatTransitionDuration = Number.parseFloat(transitionDuration);\n        const floatTransitionDelay = Number.parseFloat(transitionDelay);\n        // Return 0 if element or transition duration is not found\n        if (!floatTransitionDuration && !floatTransitionDelay) return 0;\n        // If multiple durations are defined, take the first\n        transitionDuration = transitionDuration.split(',')[0];\n        transitionDelay = transitionDelay.split(',')[0];\n        return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n    };\n    const triggerTransitionEnd = (element)=>{\n        element.dispatchEvent(new Event(TRANSITION_END));\n    };\n    const isElement = (object)=>{\n        if (!object || typeof object !== 'object') return false;\n        if (typeof object.jquery !== 'undefined') object = object[0];\n        return typeof object.nodeType !== 'undefined';\n    };\n    const getElement = (object)=>{\n        // it's a jQuery object or a node element\n        if (isElement(object)) return object.jquery ? object[0] : object;\n        if (typeof object === 'string' && object.length > 0) return document.querySelector(parseSelector(object));\n        return null;\n    };\n    const isVisible = (element)=>{\n        if (!isElement(element) || element.getClientRects().length === 0) return false;\n        const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible';\n        // Handle `details` element as its content may falsie appear visible when it is closed\n        const closedDetails = element.closest('details:not([open])');\n        if (!closedDetails) return elementIsVisible;\n        if (closedDetails !== element) {\n            const summary = element.closest('summary');\n            if (summary && summary.parentNode !== closedDetails) return false;\n            if (summary === null) return false;\n        }\n        return elementIsVisible;\n    };\n    const isDisabled = (element)=>{\n        if (!element || element.nodeType !== Node.ELEMENT_NODE) return true;\n        if (element.classList.contains('disabled')) return true;\n        if (typeof element.disabled !== 'undefined') return element.disabled;\n        return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';\n    };\n    const findShadowRoot = (element)=>{\n        if (!document.documentElement.attachShadow) return null;\n        // Can find the shadow root otherwise it'll return the document\n        if (typeof element.getRootNode === 'function') {\n            const root = element.getRootNode();\n            return root instanceof ShadowRoot ? root : null;\n        }\n        if (element instanceof ShadowRoot) return element;\n        // when we don't find a shadow root\n        if (!element.parentNode) return null;\n        return findShadowRoot(element.parentNode);\n    };\n    const noop = ()=>{};\n    /**\n   * Trick to restart an element's animation\n   *\n   * @param {HTMLElement} element\n   * @return void\n   *\n   * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n   */ const reflow = (element)=>{\n        element.offsetHeight; // eslint-disable-line no-unused-expressions\n    };\n    const getjQuery = ()=>{\n        if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) return window.jQuery;\n        return null;\n    };\n    const DOMContentLoadedCallbacks = [];\n    const onDOMContentLoaded = (callback)=>{\n        if (document.readyState === 'loading') {\n            // add listener on the first call when the document is in loading state\n            if (!DOMContentLoadedCallbacks.length) document.addEventListener('DOMContentLoaded', ()=>{\n                for (const callback of DOMContentLoadedCallbacks)callback();\n            });\n            DOMContentLoadedCallbacks.push(callback);\n        } else callback();\n    };\n    const isRTL = ()=>document.documentElement.dir === 'rtl';\n    const defineJQueryPlugin = (plugin)=>{\n        onDOMContentLoaded(()=>{\n            const $ = getjQuery();\n            /* istanbul ignore if */ if ($) {\n                const name = plugin.NAME;\n                const JQUERY_NO_CONFLICT = $.fn[name];\n                $.fn[name] = plugin.jQueryInterface;\n                $.fn[name].Constructor = plugin;\n                $.fn[name].noConflict = ()=>{\n                    $.fn[name] = JQUERY_NO_CONFLICT;\n                    return plugin.jQueryInterface;\n                };\n            }\n        });\n    };\n    const execute = (possibleCallback, args = [], defaultValue = possibleCallback)=>{\n        return typeof possibleCallback === 'function' ? possibleCallback(...args) : defaultValue;\n    };\n    const executeAfterTransition = (callback, transitionElement, waitForTransition = true)=>{\n        if (!waitForTransition) {\n            execute(callback);\n            return;\n        }\n        const durationPadding = 5;\n        const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;\n        let called = false;\n        const handler = ({ target: target })=>{\n            if (target !== transitionElement) return;\n            called = true;\n            transitionElement.removeEventListener(TRANSITION_END, handler);\n            execute(callback);\n        };\n        transitionElement.addEventListener(TRANSITION_END, handler);\n        setTimeout(()=>{\n            if (!called) triggerTransitionEnd(transitionElement);\n        }, emulatedDuration);\n    };\n    /**\n   * Return the previous/next element of a list.\n   *\n   * @param {array} list    The list of elements\n   * @param activeElement   The active element\n   * @param shouldGetNext   Choose to get next or previous element\n   * @param isCycleAllowed\n   * @return {Element|elem} The proper element\n   */ const getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed)=>{\n        const listLength = list.length;\n        let index = list.indexOf(activeElement);\n        // if the element does not exist in the list return an element\n        // depending on the direction and if cycle is allowed\n        if (index === -1) return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];\n        index += shouldGetNext ? 1 : -1;\n        if (isCycleAllowed) index = (index + listLength) % listLength;\n        return list[Math.max(0, Math.min(index, listLength - 1))];\n    };\n    exports1.defineJQueryPlugin = defineJQueryPlugin;\n    exports1.execute = execute;\n    exports1.executeAfterTransition = executeAfterTransition;\n    exports1.findShadowRoot = findShadowRoot;\n    exports1.getElement = getElement;\n    exports1.getNextActiveElement = getNextActiveElement;\n    exports1.getTransitionDurationFromElement = getTransitionDurationFromElement;\n    exports1.getUID = getUID;\n    exports1.getjQuery = getjQuery;\n    exports1.isDisabled = isDisabled;\n    exports1.isElement = isElement;\n    exports1.isRTL = isRTL;\n    exports1.isVisible = isVisible;\n    exports1.noop = noop;\n    exports1.onDOMContentLoaded = onDOMContentLoaded;\n    exports1.parseSelector = parseSelector;\n    exports1.reflow = reflow;\n    exports1.toType = toType;\n    exports1.triggerTransitionEnd = triggerTransitionEnd;\n    Object.defineProperty(exports1, Symbol.toStringTag, {\n        value: 'Module'\n    });\n});\n\n});\n\n\nparcelRegister(\"4o82T\", function(module, exports) {\n\n\n/*!\n  * Bootstrap config.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */ (function(global, factory) {\n    module.exports = factory((parcelRequire(\"B31ai\")), (parcelRequire(\"9Dw5O\")));\n})(module.exports, function(Manipulator, index_js) {\n    'use strict';\n    /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/config.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */ /**\n   * Class definition\n   */ class Config {\n        // Getters\n        static get Default() {\n            return {};\n        }\n        static get DefaultType() {\n            return {};\n        }\n        static get NAME() {\n            throw new Error('You have to implement the static method \"NAME\", for each component!');\n        }\n        _getConfig(config) {\n            config = this._mergeConfigObj(config);\n            config = this._configAfterMerge(config);\n            this._typeCheckConfig(config);\n            return config;\n        }\n        _configAfterMerge(config) {\n            return config;\n        }\n        _mergeConfigObj(config, element) {\n            const jsonConfig = index_js.isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {}; // try to parse\n            return {\n                ...this.constructor.Default,\n                ...typeof jsonConfig === 'object' ? jsonConfig : {},\n                ...index_js.isElement(element) ? Manipulator.getDataAttributes(element) : {},\n                ...typeof config === 'object' ? config : {}\n            };\n        }\n        _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n            for (const [property, expectedTypes] of Object.entries(configTypes)){\n                const value = config[property];\n                const valueType = index_js.isElement(value) ? 'element' : index_js.toType(value);\n                if (!new RegExp(expectedTypes).test(valueType)) throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`);\n            }\n        }\n    }\n    return Config;\n});\n\n});\nparcelRegister(\"B31ai\", function(module, exports) {\n/*!\n  * Bootstrap manipulator.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */ (function(global, factory) {\n    module.exports = factory();\n})(module.exports, function() {\n    'use strict';\n    /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/manipulator.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */ function normalizeData(value) {\n        if (value === 'true') return true;\n        if (value === 'false') return false;\n        if (value === Number(value).toString()) return Number(value);\n        if (value === '' || value === 'null') return null;\n        if (typeof value !== 'string') return value;\n        try {\n            return JSON.parse(decodeURIComponent(value));\n        } catch (_unused) {\n            return value;\n        }\n    }\n    function normalizeDataKey(key) {\n        return key.replace(/[A-Z]/g, (chr)=>`-${chr.toLowerCase()}`);\n    }\n    const Manipulator = {\n        setDataAttribute (element, key, value) {\n            element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);\n        },\n        removeDataAttribute (element, key) {\n            element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);\n        },\n        getDataAttributes (element) {\n            if (!element) return {};\n            const attributes = {};\n            const bsKeys = Object.keys(element.dataset).filter((key)=>key.startsWith('bs') && !key.startsWith('bsConfig'));\n            for (const key of bsKeys){\n                let pureKey = key.replace(/^bs/, '');\n                pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\n                attributes[pureKey] = normalizeData(element.dataset[key]);\n            }\n            return attributes;\n        },\n        getDataAttribute (element, key) {\n            return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));\n        }\n    };\n    return Manipulator;\n});\n\n});\n\n\n\nparcelRegister(\"42WhZ\", function(module, exports) {\n\n/*!\n  * Bootstrap selector-engine.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */ (function(global, factory) {\n    module.exports = factory((parcelRequire(\"9Dw5O\")));\n})(module.exports, function(index_js) {\n    'use strict';\n    /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/selector-engine.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */ const getSelector = (element)=>{\n        let selector = element.getAttribute('data-bs-target');\n        if (!selector || selector === '#') {\n            let hrefAttribute = element.getAttribute('href');\n            // The only valid content that could double as a selector are IDs or classes,\n            // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n            // `document.querySelector` will rightfully complain it is invalid.\n            // See https://github.com/twbs/bootstrap/issues/32273\n            if (!hrefAttribute || !hrefAttribute.includes('#') && !hrefAttribute.startsWith('.')) return null;\n            // Just in case some CMS puts out a full URL with the anchor appended\n            if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) hrefAttribute = `#${hrefAttribute.split('#')[1]}`;\n            selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null;\n        }\n        return selector ? selector.split(',').map((sel)=>index_js.parseSelector(sel)).join(',') : null;\n    };\n    const SelectorEngine = {\n        find (selector, element = document.documentElement) {\n            return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n        },\n        findOne (selector, element = document.documentElement) {\n            return Element.prototype.querySelector.call(element, selector);\n        },\n        children (element, selector) {\n            return [].concat(...element.children).filter((child)=>child.matches(selector));\n        },\n        parents (element, selector) {\n            const parents = [];\n            let ancestor = element.parentNode.closest(selector);\n            while(ancestor){\n                parents.push(ancestor);\n                ancestor = ancestor.parentNode.closest(selector);\n            }\n            return parents;\n        },\n        prev (element, selector) {\n            let previous = element.previousElementSibling;\n            while(previous){\n                if (previous.matches(selector)) return [\n                    previous\n                ];\n                previous = previous.previousElementSibling;\n            }\n            return [];\n        },\n        // TODO: this is now unused; remove later along with prev()\n        next (element, selector) {\n            let next = element.nextElementSibling;\n            while(next){\n                if (next.matches(selector)) return [\n                    next\n                ];\n                next = next.nextElementSibling;\n            }\n            return [];\n        },\n        focusableChildren (element) {\n            const focusables = [\n                'a',\n                'button',\n                'input',\n                'textarea',\n                'select',\n                'details',\n                '[tabindex]',\n                '[contenteditable=\"true\"]'\n            ].map((selector)=>`${selector}:not([tabindex^=\"-\"])`).join(',');\n            return this.find(focusables, element).filter((el)=>!index_js.isDisabled(el) && index_js.isVisible(el));\n        },\n        getSelectorFromElement (element) {\n            const selector = getSelector(element);\n            if (selector) return SelectorEngine.findOne(selector) ? selector : null;\n            return null;\n        },\n        getElementFromSelector (element) {\n            const selector = getSelector(element);\n            return selector ? SelectorEngine.findOne(selector) : null;\n        },\n        getMultipleElementsFromSelector (element) {\n            const selector = getSelector(element);\n            return selector ? SelectorEngine.find(selector) : [];\n        }\n    };\n    return SelectorEngine;\n});\n\n});\n\n/* eslint-disable max-lines -- TODO: break this into more files */ var $060f52fa64169c81$exports = {};\nfunction $060f52fa64169c81$var$$parcel$exportWildcard(dest, source) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function get() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n}\nfunction $060f52fa64169c81$var$$parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n        get: v,\n        set: s,\n        enumerable: true,\n        configurable: true\n    });\n}\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$exports, \"rules\", function() {\n    return $060f52fa64169c81$var$$1b908a5c4ca6a102$export$354076178bdef094;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$exports, \"PixelManipulator\", function() {\n    return $060f52fa64169c81$var$$1b908a5c4ca6a102$export$b2b53dd543b26a90;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$exports, \"licence\", function() {\n    return $060f52fa64169c81$var$$1b908a5c4ca6a102$export$b3b7c4718d5d9517;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$exports, \"version\", function() {\n    return $060f52fa64169c81$var$$1b908a5c4ca6a102$export$83d89fbfd8236492;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$exports, \"neighborhoods\", function() {\n    return $060f52fa64169c81$var$$37714ef34a3d49de$exports;\n});\n/** This is a cellular automata JavaScript library called PixelManipulator. For\n *  information about how to use this script, see\n *  https://github.com/Lazerbeak12345/pixelmanipulator\n *\n *  Copyright (C) 2018-2024  Nathan Fritzler\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see http://www.gnu.org/licenses.\n */ var $060f52fa64169c81$var$$9c5137925c0f6dd6$exports = {};\n$060f52fa64169c81$var$$9c5137925c0f6dd6$exports = JSON.parse(\"{\\\"name\\\":\\\"pixelmanipulator\\\",\\\"version\\\":\\\"5.5.10\\\",\\\"description\\\":\\\"A super powerful Typescript library for cellular automation.\\\",\\\"main\\\":\\\"dist/main.js\\\",\\\"browser\\\":\\\"dist/browser.js\\\",\\\"module\\\":\\\"dist/module.js\\\",\\\"types\\\":\\\"dist/types.d.ts\\\",\\\"unpkg\\\":\\\"dist/bundle.js\\\",\\\"targets\\\":{\\\"main\\\":{\\\"source\\\":\\\"./src/pixelmanipulator.ts\\\"},\\\"module\\\":{\\\"source\\\":\\\"src/pixelmanipulator.ts\\\"},\\\"browser\\\":{\\\"source\\\":\\\"src/pixelmanipulator.ts\\\",\\\"outputFormat\\\":\\\"commonjs\\\"},\\\"types\\\":{\\\"source\\\":\\\"src/pixelmanipulator.ts\\\"}},\\\"repository\\\":\\\"git@github.com:Lazerbeak12345/pixelmanipulator.git\\\",\\\"homepage\\\":\\\"https://lazerbeak12345.github.io/pixelmanipulator\\\",\\\"author\\\":\\\"Nathan Fritzler <nfblaster@live.com>\\\",\\\"license\\\":\\\"GPL-3.0-or-later\\\",\\\"browserslist\\\":\\\"defaults\\\",\\\"keywords\\\":[\\\"cellular automata\\\",\\\"game of life\\\",\\\"highlife\\\",\\\"brians-brain\\\",\\\"wireworld\\\",\\\"wolfram\\\",\\\"rule-30\\\",\\\"rule-90\\\",\\\"rule-110\\\",\\\"rule-184\\\",\\\"conway\\\",\\\"pixel\\\",\\\"game\\\",\\\"life\\\",\\\"cellular\\\",\\\"automata\\\",\\\"automaton\\\",\\\"gameoflife\\\",\\\"gol\\\",\\\"brian's-brain\\\",\\\"particle\\\",\\\"simulation\\\",\\\"engine\\\",\\\"grid\\\",\\\"canvas\\\"],\\\"devDependencies\\\":{\\\"@fast-check/ava\\\":\\\"catalog:\\\",\\\"@parcel/packager-ts\\\":\\\"catalog:\\\",\\\"@parcel/transformer-typescript-types\\\":\\\"catalog:\\\",\\\"@rollup/plugin-commonjs\\\":\\\"catalog:\\\",\\\"@types/eslint\\\":\\\"catalog:\\\",\\\"@types/node\\\":\\\"catalog:\\\",\\\"@typescript-eslint/eslint-plugin\\\":\\\"catalog:\\\",\\\"@typescript-eslint/parser\\\":\\\"catalog:\\\",\\\"ava\\\":\\\"catalog:\\\",\\\"c8\\\":\\\"catalog:\\\",\\\"eslint\\\":\\\"catalog:\\\",\\\"eslint-config-love\\\":\\\"catalog:\\\",\\\"eslint-plugin-node\\\":\\\"catalog:\\\",\\\"eslint-plugin-promise\\\":\\\"catalog:\\\",\\\"eslint-plugin-tsdoc\\\":\\\"catalog:\\\",\\\"fast-check\\\":\\\"catalog:\\\",\\\"gh-pages\\\":\\\"^6.2.0\\\",\\\"parcel\\\":\\\"catalog:\\\",\\\"rollup\\\":\\\"catalog:\\\",\\\"typedoc\\\":\\\"catalog:\\\",\\\"typedoc-plugin-mdn-links\\\":\\\"catalog:\\\",\\\"typescript\\\":\\\"catalog:\\\"},\\\"scripts\\\":{\\\"test\\\":\\\"pnpm run test:types && pnpm run lint && pnpm run test:test\\\",\\\"test:types\\\":\\\"rm -r build; tsc --outDir build\\\",\\\"lint\\\":\\\"eslint . --ignore-pattern dist --ignore-pattern docs --ignore-pattern coverage --ignore-pattern build\\\",\\\"test:test\\\":\\\"c8 -r text -r text-summary -r lcov -r html --all --include build/src ava\\\",\\\"build\\\":\\\"pnpm t && pnpm run build:docs && pnpm run build:parcel && pnpm build:readme && pnpm run build:bundle && pnpm run build:prepare-ci\\\",\\\"build:docs\\\":\\\"typedoc --name PixelManipulator --out docs --includeVersion src/*.ts\\\",\\\"build:parcel\\\":\\\"parcel build\\\",\\\"build:readme\\\":\\\"cp ../../README.md .\\\",\\\"build:bundle\\\":\\\"rollup -c\\\",\\\"build:prepare-ci\\\":\\\"cp -r ../../.circleci docs && cp -r ../../media/* docs\\\",\\\"watch\\\":\\\"parcel watch --no-hmr\\\",\\\"updatedemo\\\":\\\"gh-pages -d docs -m \\\\\\\"Update $npm_package_version\\\\\\\" -tf\\\"},\\\"ava\\\":{\\\"timeout\\\":\\\"20s\\\"},\\\"packageManager\\\":\\\"pnpm@9.15.1\\\"}\");\nvar $060f52fa64169c81$var$$2fc64e2ac0a12983$exports = {};\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$2fc64e2ac0a12983$exports, \"location2Index\", function() {\n    return $060f52fa64169c81$var$$2fc64e2ac0a12983$export$b6f174f59b684b34;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$2fc64e2ac0a12983$exports, \"transposeLocations\", function() {\n    return $060f52fa64169c81$var$$2fc64e2ac0a12983$export$e27e751a5b1946e3;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$2fc64e2ac0a12983$exports, \"Renderer\", function() {\n    return $060f52fa64169c81$var$$2fc64e2ac0a12983$export$88530751e3977073;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$2fc64e2ac0a12983$exports, \"Ctx2dRenderer\", function() {\n    return $060f52fa64169c81$var$$2fc64e2ac0a12983$export$95ab700cf10a487;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$2fc64e2ac0a12983$exports, \"StringRenderer\", function() {\n    return $060f52fa64169c81$var$$2fc64e2ac0a12983$export$446eec980ee5a157;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$2fc64e2ac0a12983$exports, \"SplitRenderer\", function() {\n    return $060f52fa64169c81$var$$2fc64e2ac0a12983$export$5482513c57691790;\n});\n/** Various rendering targets\n *\n *  Copyright (C) 2018-2024  Nathan Fritzler\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see http://www.gnu.org/licenses/\n */ /** The location of a pixel */ function $060f52fa64169c81$var$$2fc64e2ac0a12983$export$b6f174f59b684b34({ x: x, y: y }, width) {\n    return width * y + x;\n}\nfunction $060f52fa64169c81$var$$2fc64e2ac0a12983$export$e27e751a5b1946e3(locs, offset) {\n    const { x: x, y: y, frame: frame, loop: loop } = offset;\n    return locs.map((loc)=>{\n        const newLoc = {\n            x: loc.x + x,\n            y: loc.y + y,\n            frame: loc.frame ?? frame,\n            loop: loc.loop ?? loop\n        };\n        if (newLoc.frame == null) delete newLoc.frame;\n        if (newLoc.loop == null) delete newLoc.loop;\n        return newLoc;\n    });\n}\nclass $060f52fa64169c81$var$$2fc64e2ac0a12983$export$88530751e3977073 {\n    /** Intentionally overridable, called when an element is modified.\n  * @param id - The id of the element to modify.\n  * @param newRenderAs - The new {@link pixelmanipulator.ElementData.renderAs} info.\n  * @returns The value passed upstream to be stored as the actual renderAs info,\n  * allowing for sanitation in this function, or one overriding it.\n  */ modifyElement(id, newRenderAs) {\n        if (this.renderInfo.length === id) this.renderInfo.push(newRenderAs);\n        else if (this.renderInfo.length > id) this.renderInfo[id] = newRenderAs;\n        else throw new Error('Renderer received elements out of order!');\n        return newRenderAs;\n    }\n    /** @param value - The new width of the canvas */ set_width(value) {\n        this._width = value;\n    }\n    /** @returns the width of the canvas */ get_width() {\n        return this._width;\n    }\n    /** @param value - The new height of the canvas */ set_height(value) {\n        this._height = value;\n    }\n    /** @returns the height of the canvas */ get_height() {\n        return this._height;\n    }\n    constructor(){\n        /** Ordered by ID, the {@link pixelmanipulator.ElementData.renderAs} info for each element. */ this.renderInfo = [];\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n        this._width = 1;\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n        this._height = 1;\n    }\n}\nconst $060f52fa64169c81$var$$2fc64e2ac0a12983$var$NUMBER_OF_COLORS = 4;\nclass $060f52fa64169c81$var$$2fc64e2ac0a12983$export$95ab700cf10a487 extends $060f52fa64169c81$var$$2fc64e2ac0a12983$export$88530751e3977073 {\n    /** @param canvas - The canvas to render on, and to adjust the size of */ constructor(canvas){\n        super(), /** Default color is solid black */ this.defaultRenderAs = [\n            0,\n            0,\n            0,\n            255\n        ] // eslint-disable-line @typescript-eslint/no-magic-numbers -- top-left corner\n        ;\n        this.canvas = canvas;\n        const ctx = canvas.getContext('2d');\n        if (ctx == null) throw new Error('CanvasRenderingContext2D not supported in enviroment');\n        this.ctx = ctx;\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top-left corner\n        this.imageData = this.ctx.getImageData(0, 0, this.get_width(), this.get_height());\n    }\n    /** In addition to calling {@link Renderer.modifyElement}, this leftpads colors\n  * with `255` and checks for dupicates.\n  * @param id - Id of element\n  * @param newRenderAs - The proposed color of the element.\n  * @returns the actual color of the element. Always 4 long.\n  */ modifyElement(id, newRenderAs) {\n        // allows for arrays that are too small\n        while(newRenderAs.length < $060f52fa64169c81$var$$2fc64e2ac0a12983$var$NUMBER_OF_COLORS)newRenderAs.push(255);\n        const NOT_FOUND = -1;\n        const indexOfColor = this.renderInfo.indexOf(newRenderAs);\n        if (!(indexOfColor === id || indexOfColor === NOT_FOUND)) throw new Error(`The color ${JSON.stringify(newRenderAs)} is already in use!`);\n        return super.modifyElement(id, newRenderAs);\n    }\n    /** @param loc - location of the pixel to render. Ignores {@link Location.frame} and {@link Location.loop}\n  * @param id - The id of the pixel to render.\n  */ renderPixel(loc, id) {\n        const { renderInfo: { [id]: color } } = this;\n        if (typeof color === \"undefined\") throw new Error(`Invalid ID ${id}`);\n        // allows for arrays that are too small\n        // TODO: unify this code (duplicate in above function)\n        while(color.length < $060f52fa64169c81$var$$2fc64e2ac0a12983$var$NUMBER_OF_COLORS)color.push(255);\n        const w = this.get_width();\n        const pixelOffset = $060f52fa64169c81$var$$2fc64e2ac0a12983$export$b6f174f59b684b34(loc, w) * $060f52fa64169c81$var$$2fc64e2ac0a12983$var$NUMBER_OF_COLORS;\n        for(let i = 0; i < $060f52fa64169c81$var$$2fc64e2ac0a12983$var$NUMBER_OF_COLORS; ++i)this.imageData.data[pixelOffset + i] = color[i];\n    }\n    reset() {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top left corner\n        this.imageData = this.ctx.getImageData(0, 0, this.get_width(), this.get_height());\n        this.ctx.imageSmoothingEnabled = false;\n    }\n    update() {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top left corner\n        this.ctx.putImageData(this.imageData, 0, 0);\n    }\n    set_width(value) {\n        this.canvas.width = value;\n        super.set_width(value);\n    }\n    set_height(value) {\n        this.canvas.height = value;\n        super.set_height(value);\n    }\n}\nclass $060f52fa64169c81$var$$2fc64e2ac0a12983$export$446eec980ee5a157 extends $060f52fa64169c81$var$$2fc64e2ac0a12983$export$88530751e3977073 {\n    /** @param callback - A function called on {@link StringRenderer.update}. Passed a\n  * string with the renderable state of the {@link pixelmanipulator.PixelManipulator} */ constructor(callback){\n        super(), this.defaultRenderAs = ' ', this._chars = [];\n        this._callback = callback;\n    }\n    /** @param newRenderAs - The proposed character to use. Must be 1 char long and unique */ modifyElement(id, newRenderAs) {\n        if (this.renderInfo.includes(newRenderAs)) throw new Error(`Element ${id} must have a unique renderAs`);\n        return super.modifyElement(id, newRenderAs);\n    }\n    reset() {\n        const w = this.get_width();\n        const h = this.get_height();\n        this._chars = new Array(h).fill([]).map(()=>new Array(w).fill(this.defaultRenderAs));\n    }\n    /** @param x - X location of pixel\n  * @param y - y location of pixel\n  * @param id - The id of the pixel\n  */ renderPixel({ x: x, y: y }, id) {\n        const { renderInfo: { [id]: char } } = this;\n        this._chars[y][x] = char;\n    }\n    update() {\n        this._callback(this._chars.map((l)=>l.join('')).join('\\n'));\n    }\n}\nclass $060f52fa64169c81$var$$2fc64e2ac0a12983$export$5482513c57691790 extends $060f52fa64169c81$var$$2fc64e2ac0a12983$export$88530751e3977073 {\n    constructor(a, b){\n        super();\n        this.a = a;\n        this.b = b;\n        this.defaultRenderAs = {\n            a: a.defaultRenderAs,\n            b: b.defaultRenderAs\n        };\n    }\n    renderPixel(loc, id) {\n        this.a.renderPixel(loc, id);\n        this.b.renderPixel(loc, id);\n    }\n    reset() {\n        this.a.reset();\n        this.b.reset();\n    }\n    update() {\n        this.a.update();\n        this.b.update();\n    }\n    modifyElement(id, { a: a, b: b }) {\n        return super.modifyElement(id, {\n            a: this.a.modifyElement(id, a),\n            b: this.b.modifyElement(id, b)\n        });\n    }\n} // This is called a \"modeline\". It's a (n)vi(m)|ex thing.\n// vi: tabstop=2 shiftwidth=2 expandtab\nvar $060f52fa64169c81$var$$37714ef34a3d49de$exports = {};\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$37714ef34a3d49de$exports, \"rect\", function() {\n    return $060f52fa64169c81$var$$37714ef34a3d49de$export$4b409e53cf4df6e6;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$37714ef34a3d49de$exports, \"wolfram\", function() {\n    return $060f52fa64169c81$var$$37714ef34a3d49de$export$570c5686df7a3a74;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$37714ef34a3d49de$exports, \"moore\", function() {\n    return $060f52fa64169c81$var$$37714ef34a3d49de$export$dfd711383a0d1c21;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$37714ef34a3d49de$exports, \"vonNeumann\", function() {\n    return $060f52fa64169c81$var$$37714ef34a3d49de$export$6d4d43aa0229d23f;\n});\n$060f52fa64169c81$var$$parcel$export($060f52fa64169c81$var$$37714ef34a3d49de$exports, \"euclidean\", function() {\n    return $060f52fa64169c81$var$$37714ef34a3d49de$export$d7ea5b7fe202bfa1;\n});\n/** Several functions to generate lists of relative positions\n *  for a neighborhood hitbox.\n *\n *  Copyright (C) 2018-2024  Nathan Fritzler\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see http://www.gnu.org/licenses/\n */ function $060f52fa64169c81$var$$37714ef34a3d49de$export$4b409e53cf4df6e6(topLeft, bottomRight) {\n    const output = [];\n    for(let { x: x } = topLeft; x <= bottomRight.x; x++)for(let { y: y } = topLeft; y <= bottomRight.y; y++)output.push({\n        x: x,\n        y: y\n    });\n    return output;\n}\nfunction $060f52fa64169c81$var$$37714ef34a3d49de$export$570c5686df7a3a74(radius, y, includeSelf) {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n    radius ??= 1;\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n    y ??= -1;\n    const output = [];\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- reverse iterated\n    for(let i = radius; i > 0; i--)output.push({\n        x: -i,\n        y: y\n    });\n    if (includeSelf == null || includeSelf) output.push({\n        x: 0,\n        y: y\n    });\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- reverse iterated\n    for(let i = radius; i > 0; i--)output.push({\n        x: i,\n        y: y\n    });\n    return output;\n}\nfunction $060f52fa64169c81$var$$37714ef34a3d49de$export$dfd711383a0d1c21(radius, includeSelf) {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n    radius ??= 1;\n    includeSelf ??= false;\n    // Note: no need to calculate the Chebyshev distance. All pixels in this\n    // range are \"magically\" within.\n    const r = $060f52fa64169c81$var$$37714ef34a3d49de$export$4b409e53cf4df6e6({\n        x: -radius,\n        y: -radius\n    }, {\n        x: radius,\n        y: radius\n    });\n    if (includeSelf) return r;\n    return r.filter(({ x: x, y: y })=>!(x === 0 && y === 0)) // eslint-disable-line @typescript-eslint/no-magic-numbers -- center is zeros\n    ;\n// And to think that this used to be hard... Perhaps they had a different\n// goal? Or just weren't using higher-order algorithims?\n}\nfunction $060f52fa64169c81$var$$37714ef34a3d49de$export$6d4d43aa0229d23f(radius, includeSelf) {\n    // A Von Neumann neighborhood of a given distance always fits inside of a\n    // Moore neighborhood of the same. (This is a bit brute-force)\n    const DEFAULT_RADIUS = 1;\n    radius ??= DEFAULT_RADIUS;\n    return $060f52fa64169c81$var$$37714ef34a3d49de$export$dfd711383a0d1c21(radius, includeSelf).filter(({ x: x, y: y })=>Math.abs(x) + Math.abs(y) <= radius) // Taxicab distance\n    ;\n}\nfunction $060f52fa64169c81$var$$37714ef34a3d49de$export$d7ea5b7fe202bfa1(radius, includeSelf) {\n    // A circle of a given diameter always fits inside of a square of the same\n    // side-length. (This is a bit brute-force)\n    const DEFAULT_RADIUS = 1;\n    return $060f52fa64169c81$var$$37714ef34a3d49de$export$dfd711383a0d1c21(radius, includeSelf).filter(({ x: x, y: y })=>Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) <= (radius ?? DEFAULT_RADIUS)) // Euclidean distance\n    ;\n} // TODO https://www.npmjs.com/package/compute-minkowski-distance ?\n// TODO Non-Euclidean distance algorithim?\n// This is called a \"modeline\". It's a (n)vi(m)|ex thing.\n// vi: tabstop=2 shiftwidth=2 expandtab\nfunction $060f52fa64169c81$var$$1b908a5c4ca6a102$var$startAnimation(callback) {\n    if (typeof requestAnimationFrame === 'undefined') {\n        const SMALLEST_INTERVAL_POSSIBLE = 1;\n        return setInterval(callback, SMALLEST_INTERVAL_POSSIBLE);\n    } else return requestAnimationFrame(callback);\n}\nfunction $060f52fa64169c81$var$$1b908a5c4ca6a102$var$resumeAnimation(num, callback) {\n    if (typeof requestAnimationFrame === 'undefined') return num;\n    else return requestAnimationFrame(callback);\n}\nfunction $060f52fa64169c81$var$$1b908a5c4ca6a102$var$cancelAnimation(num) {\n    if (typeof cancelAnimationFrame === 'undefined') clearInterval(num);\n    else if (typeof num === \"number\") cancelAnimationFrame(num);\n}\nfunction $060f52fa64169c81$var$$1b908a5c4ca6a102$var$boolToNumber(bool) {\n    const TRUE = 1;\n    const FALSE = 0;\n    return bool ? TRUE : FALSE;\n}\nfunction $060f52fa64169c81$var$$1b908a5c4ca6a102$var$_convertNumListToBf(nl) {\n    // While I used to use string with each digit in it, I found that since\n    // there are 0-8, I could use a 9bit field (remember: off by one)\n    let out = 0;\n    for (const item of nl)out |= 1 << parseInt(item);\n    return out;\n}\nconst $060f52fa64169c81$var$$1b908a5c4ca6a102$export$354076178bdef094 = {\n    /** Generates elements like conway's game of life.\n  * @param p - `lifelike` needs to be able to call {@link PixelManipulator.mooreNearbyCounter}\n  * @param pattern - The B/S syntax indicator of on how many cells of the same\n  * type in the moore radius around each pixel should survive, and on how many\n  * should be born.\n  * @param loop - Should this loop around screen edges? (Passed to {@link renderers.Location.loop})\n  */ lifelike: function(p, pattern, loop) {\n        const numbers = pattern.split(/\\/?[a-z]/gi) // \"B\",born,die\n        ;\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- after the pattern\n        const bfdie = $060f52fa64169c81$var$$1b908a5c4ca6a102$var$_convertNumListToBf(numbers[2]);\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- before the pattern\n        const bflive = $060f52fa64169c81$var$$1b908a5c4ca6a102$var$_convertNumListToBf(numbers[1]);\n        const SMALLEST_BINARY_DIGIT = 1;\n        const PREV_FRAME = 1;\n        const NO_MATCH = 0;\n        return {\n            madeWithRule: true,\n            hitbox: $060f52fa64169c81$var$$37714ef34a3d49de$export$dfd711383a0d1c21(),\n            liveCell: function llive({ x: x, y: y, thisId: thisId }) {\n                // if any match (of how many moore are nearby) is found, it dies\n                if ((bfdie & SMALLEST_BINARY_DIGIT << p.mooreNearbyCounter({\n                    x: x,\n                    y: y,\n                    frame: PREV_FRAME,\n                    loop: loop\n                }, thisId)) === NO_MATCH) p.setPixel({\n                    x: x,\n                    y: y\n                }, p.defaultId);\n            },\n            deadCell: function ldead({ x: x, y: y, thisId: thisId }) {\n                // if any match (of how many moore are nearby) is found, it lives\n                if ((bflive & SMALLEST_BINARY_DIGIT << p.mooreNearbyCounter({\n                    x: x,\n                    y: y,\n                    frame: PREV_FRAME,\n                    loop: loop\n                }, thisId)) !== NO_MATCH) p.setPixel({\n                    x: x,\n                    y: y\n                }, thisId);\n            }\n        };\n    },\n    /** Generates fundamental cellular automata\n  * @param p - `wolfram` needs to be able to call {@link PixelManipulator.wolframNearbyCounter}\n  * @param pattern - The Rule num syntax, where the 8-bit number is translated\n  * into a binary list, each where the inverted 3-binary-digit index represents\n  * the state of cells in the row above. On a match, the cell becomes the state\n  * specified in the initial 8-bit number.\n  * @param loop - Should this loop around screen edges? (Passed to {@link PixelManipulator.wolframNearby})\n  */ wolfram: function(p, pattern, loop) {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- after the pattern\n        const binStates = parseInt(pattern.split(/Rule /gi)[1]);\n        const FIRST_ROW = 0;\n        const PREV_FRAME = 1;\n        return {\n            madeWithRule: true,\n            // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default values\n            hitbox: $060f52fa64169c81$var$$37714ef34a3d49de$export$570c5686df7a3a74(1, 1),\n            // The current state is used as the index in the binstates, as binstates is a bit array of every state\n            liveCell: function wlive({ x: x, y: y, thisId: thisId }) {\n                if (y === FIRST_ROW) return;\n                if (!p.wolframNewState({\n                    x: x,\n                    y: y,\n                    frame: PREV_FRAME,\n                    loop: loop\n                }, binStates, thisId)) p.setPixel({\n                    x: x,\n                    y: y,\n                    loop: loop\n                }, p.defaultId);\n            },\n            deadCell: function wdead({ x: x, y: y, thisId: thisId }) {\n                if (p.wolframNewState({\n                    x: x,\n                    y: y,\n                    frame: PREV_FRAME,\n                    loop: loop\n                }, binStates, thisId)) p.setPixel({\n                    x: x,\n                    y: y,\n                    loop: loop\n                }, thisId);\n            }\n        };\n    }\n};\nclass $060f52fa64169c81$var$$1b908a5c4ca6a102$export$b2b53dd543b26a90 {\n    /**\n  * @param renderer - The target to render things to.\n  * @param width - How wide should the initial target be?\n  * @param height - How tall should the initial target be?\n  */ constructor(renderer, width, height){\n        /**\n  * This is the number that indicates what animation frame the iterate function\n  * is being called with.\n  *\n  * You can use this to mannually stop the iterations like so:\n  * `cancelAnimationFrame(this.loopint)` (not reccommended)\n  */ this.loopint = 0 // eslint-disable-line @typescript-eslint/no-magic-numbers -- default value\n        ;\n        /**\n  * A low-level listing of the availiable elements.\n  *\n  * Format is much like the argument to\n  * {@link PixelManipulator.addMultipleElements}, but is not sanitized.\n  */ this.elements = [];\n        /**\n  * A mapping from old names for elements to new names for elements.\n  *\n  * Allows a user to modify the name of an element at runtime.\n  */ this.nameAliases = new Map();\n        /**\n  * A string indicating weather it is currently animating or not.\n  *\n  * It is `\"playing\"` if it is currently animating, or `\"paused\"` if not\n  * currently animating.\n  *\n  * This has been around since early version 0, and once was the `innerText`\n  * value of a pause/play button!\n  */ this.mode = 'paused';\n        /** Called before {@link PixelManipulator.iterate} does its work.\n  * @returns false to postposne iteration.\n  */ this.onIterate = ()=>undefined // eslint-disable-line @typescript-eslint/class-methods-use-this -- event handler\n        ;\n        /** Called after {@link PixelManipulator.iterate} does its work. */ this.onAfterIterate = ()=>undefined // eslint-disable-line @typescript-eslint/class-methods-use-this -- event handler\n        ;\n        /** Gets called after a call to {@link PixelManipulator.modifyElement}. The ID is\n  * passed as the only argument.\n  * @param id - The element that was modified.\n  */ this.onElementModified = ()=>undefined // eslint-disable-line @typescript-eslint/class-methods-use-this -- event handler\n        ;\n        /** Number of pixels per element in the last frame */ this.pixelCounts = {};\n        /**\n  * A List of {@link Uint32Array}s each the length of width times height of the\n  * canvas. Frame 0 is the new frame, frame one is the prior, etc. Each item\n  * holds the element id of each element on screen, from left to right, top to\n  * bottom.\n  */ this.frames = [\n            new Uint32Array(0),\n            new Uint32Array(0)\n        ] // eslint-disable-line @typescript-eslint/no-magic-numbers -- default values\n        ;\n        if (typeof window !== 'undefined') console.log($060f52fa64169c81$var$$1b908a5c4ca6a102$export$b3b7c4718d5d9517);\n        this.renderer = renderer;\n        this.defaultId = this.addElement({\n            renderAs: this.renderer.defaultRenderAs,\n            hitbox: [],\n            name: 'blank'\n        });\n        this.reset({\n            canvasW: width,\n            canvasH: height\n        });\n    }\n    /** @returns the width of the canvas */ get_width() {\n        return this.renderer.get_width();\n    }\n    /** @param value - The new width of the canvas */ set_width(value) {\n        this.renderer.set_width(value);\n    }\n    /** @returns the height of the canvas */ get_height() {\n        return this.renderer.get_height();\n    }\n    /** @param value - The new height of the canvas */ set_height(value) {\n        this.renderer.set_height(value);\n    }\n    /** fills the screen with value, at an optional given percent\n  * @param value - The element to put on the screen\n  * @param pr - The percent as a number from 1 to 100, defaulting at 15\n  */ randomlyFill(value, pr) {\n        const DEFAULT_PERCENT = 15;\n        const MAX_PERCENT = 100;\n        pr ??= DEFAULT_PERCENT;\n        const w = this.get_width();\n        const h = this.get_height();\n        for(let x = 0; x < w; x++){\n            for(let y = 0; y < h; y++)if (Math.random() * MAX_PERCENT < pr) this.setPixel({\n                x: x,\n                y: y\n            }, value);\n        }\n    }\n    /** Adds multiple elements.\n  *\n  * @param elements - Index is the element name, value is the element data (and\n  * does not require the name). Value is passed to\n  * {@link PixelManipulator.addElement}\n  */ addMultipleElements(elements) {\n        Object.keys(elements).forEach((name)=>this.addElement({\n                name: name,\n                ...elements[name]\n            }));\n    }\n    /** Add an element with the given element data\n  * @param data - The details about the element.\n  * @returns The generated {@link PixelManipulator.elements} index\n  */ addElement(data) {\n        const { name: name, renderAs: renderAs } = data;\n        if (typeof name === 'undefined') throw new Error('Name is required for element');\n        if (typeof data.name === 'undefined') data.name = name;\n        // @ts-expect-error renderAs might be undefined here, but it's fixed in the call to this.modifyElement below\n        this.elements.push({\n            name: name,\n            renderAs: renderAs\n        });\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- last item in list\n        this.modifyElement(this.elements.length - 1, data);\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- last item in list (might not be the same as before modifyElement was called)\n        return this.elements.length - 1;\n    }\n    /**\n  * @param id - How to identify what element to modify.\n  * @param data - Values to apply to the pre-existing element.\n  *\n  * Automatically calls {@link PixelManipulator.aliasElements} if\n  * {@link ElementDataUnknown.name} is present in `data`\n  */ modifyElement(id, data) {\n        const oldData = this.elements[id];\n        if (typeof data.name !== 'undefined' && data.name !== oldData.name) this.aliasElements(oldData.name, data.name);\n        const newData = {\n            hitbox: $060f52fa64169c81$var$$37714ef34a3d49de$export$dfd711383a0d1c21(),\n            ...oldData,\n            ...data\n        };\n        newData.renderAs = this.renderer.modifyElement(id, newData.renderAs);\n        this.elements[id] = newData;\n        this.onElementModified(id);\n    }\n    /**\n  * @param oldName - The old {@link ElementData.name}\n  * @param newName - The new {@link ElementData.name}\n  *\n  * Adds the name to {@link PixelManipulator.nameAliases}, and ensures no alias\n  * loops are present.\n  */ aliasElements(oldName, newName) {\n        // Intentionally ignores aliases when checking for duplicate name.\n        if (this.elements.find((elm)=>elm.name === newName) != null) throw new Error('The name ' + newName + ' is already in use!');\n        this.nameAliases.delete(newName);\n        this.nameAliases.set(oldName, newName);\n    }\n    /** Respecting aliases, convert an element name into its number.\n  * @param name - name of element\n  * @returns The number of the element\n  */ nameToId(name) {\n        let unaliased = name;\n        while(typeof unaliased !== 'undefined'){\n            name = unaliased;\n            unaliased = this.nameAliases.get(name);\n        }\n        return this.elements.findIndex((elm)=>elm.name === name);\n    }\n    /**\n  * @param name - Name of the (possibly aliased) element.\n  * @returns The element from {@link PixelManipulator.elements}, respecting\n  * aliases in {@link PixelManipulator.nameAliases}, or {@link undefined} if not found.\n  */ getElementByName(name) {\n        return this.elements[this.nameToId(name)];\n    }\n    /**\n  * @param loc - Location of the element.\n  * @returns Name of element at passed-in location. See {@link ElementData.name}\n  */ whatIs(loc) {\n        return this.elements[this.getPixelId(loc)].name;\n    }\n    /** Start iterations on all of the elements on the canvas.\n  * Sets {@link PixelManipulator.mode} to `\"playing\"`, and requests a new animation\n  * frame, saving it in {@link PixelManipulator.loopint}.\n  *\n  * @param canvasSizes - If {@link PixelManipulator.mode} is already `\"playing\"` then\n  * canvasSizes is passed to {@link PixelManipulator.reset}. Otherwise reset is not\n  * called.\n  */ play(canvasSizes) {\n        if (this.mode === 'playing') this.reset(canvasSizes);\n        this.mode = 'playing';\n        this.loopint = $060f52fa64169c81$var$$1b908a5c4ca6a102$var$startAnimation(()=>{\n            this.iterate();\n        });\n    }\n    /** Reset, resize and initialize the canvas(es).\n  * Calls {@link PixelManipulator.pause} then\n  * {@link PixelManipulator.update}. Resets all internal state, excluding the\n  * element definitions.\n  *\n  * @param canvasSizes - Allows one to change the size of the canvases during\n  * the reset.\n  */ reset(canvasSizes) {\n        const CURRENT_FRAME = 0;\n        const NEXT_FRAME = 1;\n        const MAX_PERCENT = 100;\n        if (typeof canvasSizes === 'undefined') canvasSizes = {};\n        this.pause();\n        const w = canvasSizes.canvasW ?? this.get_width();\n        const h = canvasSizes.canvasH ?? this.get_height();\n        this.set_width(w);\n        this.set_height(h);\n        this.frames[CURRENT_FRAME] = new Uint32Array(w * h);\n        this.frames[NEXT_FRAME] = new Uint32Array(w * h);\n        this.renderer.reset();\n        this.randomlyFill(this.defaultId, MAX_PERCENT);\n        this.update();\n    }\n    /** pause canvas iterations\n  * Sets {@link PixelManipulator.mode} to `\"paused\"` and cancels the animation frame\n  * referenced in {@link PixelManipulator.loopint}\n  */ pause() {\n        this.mode = 'paused';\n        $060f52fa64169c81$var$$1b908a5c4ca6a102$var$cancelAnimation(this.loopint);\n    }\n    /**\n  * @param loc - Location of the pixel (could be out of bounds).\n  * @returns null if out-of-bounds when loop setting is false, or the location (loop set to false).\n  */ locationBoundsCheck(loc) {\n        const LEFTMOST = 0;\n        const TOPMOST = 0;\n        const w = this.get_width();\n        const h = this.get_height();\n        const overflowLeft = loc.x < LEFTMOST;\n        const overflowRight = loc.x >= w;\n        const overflowTop = loc.y < TOPMOST;\n        const overflowBottom = loc.y >= h;\n        if (loc.loop ?? true) {\n            loc.x %= w;\n            loc.y %= h;\n            if (overflowLeft) loc.x += w;\n            if (overflowTop) loc.y += h;\n            loc.loop = false;\n        } else if (overflowLeft || overflowRight || overflowTop || overflowBottom) return null;\n        return loc;\n    }\n    /**\n  * @param loc - Location of the pixel\n  * @returns the element id at a given location\n  */ getPixelId(loc) {\n        const fixedLoc = this.locationBoundsCheck(loc);\n        if (fixedLoc == null) return this.defaultId;\n        const w = this.get_width();\n        const CURRENT_FRAME = 0 // TODO: dedupe this const\n        ;\n        return this.frames[fixedLoc.frame ?? CURRENT_FRAME][$060f52fa64169c81$var$$2fc64e2ac0a12983$export$b6f174f59b684b34(fixedLoc, w)];\n    }\n    /**\n  * Applies any changes made with {@link renderers.Renderer.renderPixel} on {@link PixelManipulator.renderer} to the canvas\n  */ update() {\n        this.renderer.update();\n    }\n    /**\n  * @param loc - Where to confirm the element\n  * @param id - The elm you expect it to be\n  * @returns Does the cell at `loc` match `ident`?\n  */ confirmElm(loc, id) {\n        return this.getPixelId(loc) === (typeof id === 'string' ? this.nameToId(id) : id);\n    }\n    /** Calculate the total number of elements within an area\n  * @param area - The locations to total up.\n  * @param search - The element to look for\n  * @returns The total\n  */ totalWithin(area, search) {\n        return area.filter((loc)=>this.confirmElm(loc, search)).length;\n    }\n    static #_ = this._moore = $060f52fa64169c81$var$$37714ef34a3d49de$export$dfd711383a0d1c21();\n    /** @param name - element to look for\n  * @param center - location of the center of the moore area\n  * @returns Number of matching elements in moore radius */ mooreNearbyCounter(center, search) {\n        return this.totalWithin($060f52fa64169c81$var$$2fc64e2ac0a12983$export$e27e751a5b1946e3($060f52fa64169c81$var$$1b908a5c4ca6a102$export$b2b53dd543b26a90._moore, center), search);\n    }\n    /** @param area - The Area to search within\n  * @param ruleNum - A bitfield of what states a pixel should live or die on.\n  * @param search - The element to search for\n  * @see {@link PixelManipulator.wolframNewState} for higher-level tool\n  * @see {@link PixelManipulator.fundamentalStatesWithin} for lower-level tool\n  * @returns The state that the bitfied says this pixel should be in the next frame.\n  */ fundamentalNewState(area, ruleNum, search) {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- 1 is largest binary digit, nonzero if matches\n        return (ruleNum & 1 << this.fundamentalStatesWithin(area, search)) !== 0;\n    }\n    /** @param area - Locations to look at.\n  * @param search - Locations to mark as a true bit.\n  * @see {@link PixelManipulator.fundamentalNewState} for higher-level tool\n  * @returns number as a bitfied array, in order of the items in area, from left to right.\n  *\n  * That means that `(fundamentalStatesWithin([loc], search) & 1) === boolToNumber(confirmElm(loc, search))`\n  *\n  * You may want to see [this page](https://www.wolframscience.com/nks/notes-5-2--general-rules-for-multidimensional-cellular-automata/)\n  * for more details on how this might be used.\n  */ fundamentalStatesWithin(area, search) {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- 1 is the SMALLEST_BINARY_DIGIT\n        return area.map((loc)=>$060f52fa64169c81$var$$1b908a5c4ca6a102$var$boolToNumber(this.confirmElm(loc, search))).reduce((res, x)=>res << 1 | x);\n    }\n    static #_2 = this._wolfram = $060f52fa64169c81$var$$37714ef34a3d49de$export$570c5686df7a3a74();\n    /** @param loc - The pixel to change. (Defaults {@link renderers.Location.loop} to false)\n  * @param ruleNum - A bitfield of what states a pixel should live or die on.\n  * @param search - The element to search for\n  * @see {@link PixelManipulator.fundamentalNewState} for more general tool.\n  * @returns The state that the bitfied says this pixel should be in the next frame.\n  */ wolframNewState(loc, ruleNum, search) {\n        // one-dimentional detectors by default don't loop around edges\n        loc.loop ??= false;\n        return this.fundamentalNewState($060f52fa64169c81$var$$2fc64e2ac0a12983$export$e27e751a5b1946e3($060f52fa64169c81$var$$1b908a5c4ca6a102$export$b2b53dd543b26a90._wolfram, loc), ruleNum, search);\n    }\n    /**\n  * @param current - \"Current\" pixel location. (Defaults {@link renderers.Location.loop} to false)\n  * @param search - element to look for\n  * @see {@link PixelManipulator.fundamentalStatesWithin} for lower-level tool\n  * @returns Number used as bit area to indicate occupied cells\n  */ wolframNearby(current, search) {\n        // one-dimentional detectors by default don't loop around edges\n        current.loop ??= false;\n        return this.fundamentalStatesWithin($060f52fa64169c81$var$$2fc64e2ac0a12983$export$e27e751a5b1946e3($060f52fa64169c81$var$$1b908a5c4ca6a102$export$b2b53dd543b26a90._wolfram, current), search);\n    }\n    /** Counter tool used in slower wolfram algorithim.\n  * @deprecated Replaced with {@link PixelManipulator.wolframNearby} for use in faster\n  * algorithms\n  * @param current - \"Current\" pixel location\n  * @param name - element to look for\n  * @param bindex - Either a string like `\"001\"` to match to, or the same\n  * encoded as a number.\n  * @returns Number of elements in wolfram radius */ wolframNearbyCounter(current, name, binDex) {\n        if (typeof binDex === 'string') binDex = parseInt(binDex, 2);\n        return this.wolframNearby(current, name) === binDex;\n    }\n    /** Set a pixel in a given location.\n  *\n  * @param x - X position.\n  * @param y - Y position.\n  * @param ident - Value to identify the element.\n  *\n  * - If a string, it assumes it's an element name.\n  * - If a number, it assumes it's an element ID\n  *\n  * @param loop - Defaults to {@link true}. Wraps `x` and `y` around canvas borders.\n  */ setPixel(loc, ident) {\n        const NOT_FOUND = -1;\n        let id = 0;\n        if (typeof ident === 'string') {\n            id = this.nameToId(ident);\n            if (id === NOT_FOUND) throw new Error(`Element name ${ident} is invalid`);\n        } else id = ident;\n        const fixedLoc = this.locationBoundsCheck(loc);\n        if (fixedLoc == null) return;\n        this.renderer.renderPixel(fixedLoc, id);\n        const w = this.get_width();\n        const CURRENT_FRAME = 0;\n        this.frames[CURRENT_FRAME][$060f52fa64169c81$var$$2fc64e2ac0a12983$export$b6f174f59b684b34(fixedLoc, w)] = id;\n    }\n    /** A single frame of animation. Media functions pass this into\n  * {@link requestAnimationFrame}.\n  *\n  * Be careful! Calling this while {@link PixelManipulator.mode} is `\"playing\"`\n  * might cause two concurrent calls to this function. If any of your automata\n  * have \"hidden state\" - that is they don't represent every detail about\n  * themselves as data within the pixels - it might cause conflicts.\n  */ iterate() {\n        if (this.onIterate() ?? true) {\n            // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- last item in list\n            for(let frame = this.frames.length - 1; frame >= 0; frame--)if (frame > 0) {\n                // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- next is minus one\n                const nextFrame = frame - 1;\n                this.frames[frame].set(this.frames[nextFrame]);\n            }\n            const w = this.get_width();\n            const h = this.get_height();\n            const typedUpdatedDead = new Array(this.elements.length);\n            this.pixelCounts = {};\n            const NEXT_FRAME = 1;\n            for(let x = 0; x < w; x++)for(let y = 0; y < h; y++){\n                const currentPixId = this.getPixelId({\n                    x: x,\n                    y: y,\n                    frame: NEXT_FRAME\n                });\n                if (currentPixId === this.defaultId) continue;\n                const { elements: { [currentPixId]: elm } } = this;\n                if (typeof elm === \"undefined\") throw new Error(\"This isn't supposed to happen, but the internal pixel buffer was currupted. This is likely a bug, or a symptom of improper direct access to the current memory buffer\");\n                if (typeof elm.liveCell !== \"undefined\") elm.liveCell({\n                    x: x,\n                    y: y,\n                    oldId: currentPixId,\n                    thisId: currentPixId\n                });\n                if (typeof this.pixelCounts[currentPixId] === \"undefined\") this.pixelCounts[currentPixId] = 1;\n                else this.pixelCounts[currentPixId]++;\n                if (typeof elm.deadCell !== \"undefined\") {\n                    const UPDATED_SIZE = 8 // TODO: this is a guess. document this better, or rewrite this.\n                    ;\n                    typedUpdatedDead[currentPixId] ??= new Uint8Array(Math.ceil(w * h / UPDATED_SIZE));\n                    elm.hitbox.forEach((pixel)=>{\n                        // We are looping, so it can't be null. Eslint doesn't like non-null assertions, so we must do this.\n                        const hblocStupidFallback = {\n                            x: x + pixel.x,\n                            y: y + pixel.y\n                        };\n                        const hbLoc = this.locationBoundsCheck(hblocStupidFallback) ?? hblocStupidFallback;\n                        const index = Math.floor($060f52fa64169c81$var$$2fc64e2ac0a12983$export$b6f174f59b684b34(hbLoc, w) / UPDATED_SIZE);\n                        const { [currentPixId]: { [index]: oldValue } } = typedUpdatedDead;\n                        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- SMALLEST_BINARY_DIGIT\n                        const bitMask = 1 << hbLoc.x % UPDATED_SIZE;\n                        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- compare to zero\n                        if ((oldValue & bitMask) !== 0) return;\n                        // I timed it, and confirmOldElm is slower than all the math above.\n                        if (!this.confirmElm({\n                            x: hbLoc.x,\n                            y: hbLoc.y,\n                            frame: NEXT_FRAME\n                        }, this.defaultId)) return;\n                        if (typeof elm.deadCell !== \"undefined\") elm.deadCell({\n                            x: hbLoc.x,\n                            y: hbLoc.y,\n                            oldId: this.defaultId,\n                            thisId: currentPixId\n                        });\n                        typedUpdatedDead[currentPixId][index] = oldValue | bitMask;\n                    });\n                }\n            }\n            this.update();\n            this.onAfterIterate();\n        }\n        if (this.mode === 'playing') this.loopint = $060f52fa64169c81$var$$1b908a5c4ca6a102$var$resumeAnimation(this.loopint, ()=>{\n            this.iterate();\n        });\n    }\n} // end class PixelManipulator\nconst { version: $060f52fa64169c81$var$$1b908a5c4ca6a102$export$83d89fbfd8236492 } = $060f52fa64169c81$var$$9c5137925c0f6dd6$exports;\nconst $060f52fa64169c81$var$$1b908a5c4ca6a102$export$b3b7c4718d5d9517 = 'PixelManipulator v' + $060f52fa64169c81$var$$1b908a5c4ca6a102$export$83d89fbfd8236492 + ' Copyright (C) ' + '2018-2024 Nathan Fritzler\\nThis program comes with ABSOLUTELY NO ' + 'WARRANTY\\nThis is free software, and you are welcome to redistribute it\\n' + 'under certain conditions, as according to the GNU GENERAL PUBLIC LICENSE ' + 'version 3 or later.' // This is called a \"modeline\". It's a (n)vi(m)|ex thing.\n;\n$060f52fa64169c81$var$$parcel$exportWildcard($060f52fa64169c81$exports, $060f52fa64169c81$var$$2fc64e2ac0a12983$exports);\n\n\nvar $d268f79c91eb1266$exports = {};\n\n\n\n\n/*!\n  * Bootstrap collapse.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */ (function(global, factory) {\n    $d268f79c91eb1266$exports = factory((parcelRequire(\"ka9Le\")), (parcelRequire(\"dfTqR\")), (parcelRequire(\"42WhZ\")), (parcelRequire(\"9Dw5O\")));\n})($d268f79c91eb1266$exports, function(BaseComponent, EventHandler, SelectorEngine, index_js) {\n    'use strict';\n    /**\n   * --------------------------------------------------------------------------\n   * Bootstrap collapse.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */ /**\n   * Constants\n   */ const NAME = 'collapse';\n    const DATA_KEY = 'bs.collapse';\n    const EVENT_KEY = `.${DATA_KEY}`;\n    const DATA_API_KEY = '.data-api';\n    const EVENT_SHOW = `show${EVENT_KEY}`;\n    const EVENT_SHOWN = `shown${EVENT_KEY}`;\n    const EVENT_HIDE = `hide${EVENT_KEY}`;\n    const EVENT_HIDDEN = `hidden${EVENT_KEY}`;\n    const EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\n    const CLASS_NAME_SHOW = 'show';\n    const CLASS_NAME_COLLAPSE = 'collapse';\n    const CLASS_NAME_COLLAPSING = 'collapsing';\n    const CLASS_NAME_COLLAPSED = 'collapsed';\n    const CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`;\n    const CLASS_NAME_HORIZONTAL = 'collapse-horizontal';\n    const WIDTH = 'width';\n    const HEIGHT = 'height';\n    const SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing';\n    const SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"collapse\"]';\n    const Default = {\n        parent: null,\n        toggle: true\n    };\n    const DefaultType = {\n        parent: '(null|element)',\n        toggle: 'boolean'\n    };\n    /**\n   * Class definition\n   */ class Collapse extends BaseComponent {\n        constructor(element, config){\n            super(element, config);\n            this._isTransitioning = false;\n            this._triggerArray = [];\n            const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE);\n            for (const elem of toggleList){\n                const selector = SelectorEngine.getSelectorFromElement(elem);\n                const filterElement = SelectorEngine.find(selector).filter((foundElement)=>foundElement === this._element);\n                if (selector !== null && filterElement.length) this._triggerArray.push(elem);\n            }\n            this._initializeChildren();\n            if (!this._config.parent) this._addAriaAndCollapsedClass(this._triggerArray, this._isShown());\n            if (this._config.toggle) this.toggle();\n        }\n        // Getters\n        static get Default() {\n            return Default;\n        }\n        static get DefaultType() {\n            return DefaultType;\n        }\n        static get NAME() {\n            return NAME;\n        }\n        // Public\n        toggle() {\n            if (this._isShown()) this.hide();\n            else this.show();\n        }\n        show() {\n            if (this._isTransitioning || this._isShown()) return;\n            let activeChildren = [];\n            // find active children\n            if (this._config.parent) activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES).filter((element)=>element !== this._element).map((element)=>Collapse.getOrCreateInstance(element, {\n                    toggle: false\n                }));\n            if (activeChildren.length && activeChildren[0]._isTransitioning) return;\n            const startEvent = EventHandler.trigger(this._element, EVENT_SHOW);\n            if (startEvent.defaultPrevented) return;\n            for (const activeInstance of activeChildren)activeInstance.hide();\n            const dimension = this._getDimension();\n            this._element.classList.remove(CLASS_NAME_COLLAPSE);\n            this._element.classList.add(CLASS_NAME_COLLAPSING);\n            this._element.style[dimension] = 0;\n            this._addAriaAndCollapsedClass(this._triggerArray, true);\n            this._isTransitioning = true;\n            const complete = ()=>{\n                this._isTransitioning = false;\n                this._element.classList.remove(CLASS_NAME_COLLAPSING);\n                this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW);\n                this._element.style[dimension] = '';\n                EventHandler.trigger(this._element, EVENT_SHOWN);\n            };\n            const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n            const scrollSize = `scroll${capitalizedDimension}`;\n            this._queueCallback(complete, this._element, true);\n            this._element.style[dimension] = `${this._element[scrollSize]}px`;\n        }\n        hide() {\n            if (this._isTransitioning || !this._isShown()) return;\n            const startEvent = EventHandler.trigger(this._element, EVENT_HIDE);\n            if (startEvent.defaultPrevented) return;\n            const dimension = this._getDimension();\n            this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;\n            index_js.reflow(this._element);\n            this._element.classList.add(CLASS_NAME_COLLAPSING);\n            this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW);\n            for (const trigger of this._triggerArray){\n                const element = SelectorEngine.getElementFromSelector(trigger);\n                if (element && !this._isShown(element)) this._addAriaAndCollapsedClass([\n                    trigger\n                ], false);\n            }\n            this._isTransitioning = true;\n            const complete = ()=>{\n                this._isTransitioning = false;\n                this._element.classList.remove(CLASS_NAME_COLLAPSING);\n                this._element.classList.add(CLASS_NAME_COLLAPSE);\n                EventHandler.trigger(this._element, EVENT_HIDDEN);\n            };\n            this._element.style[dimension] = '';\n            this._queueCallback(complete, this._element, true);\n        }\n        _isShown(element = this._element) {\n            return element.classList.contains(CLASS_NAME_SHOW);\n        }\n        // Private\n        _configAfterMerge(config) {\n            config.toggle = Boolean(config.toggle); // Coerce string values\n            config.parent = index_js.getElement(config.parent);\n            return config;\n        }\n        _getDimension() {\n            return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT;\n        }\n        _initializeChildren() {\n            if (!this._config.parent) return;\n            const children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE);\n            for (const element of children){\n                const selected = SelectorEngine.getElementFromSelector(element);\n                if (selected) this._addAriaAndCollapsedClass([\n                    element\n                ], this._isShown(selected));\n            }\n        }\n        _getFirstLevelChildren(selector) {\n            const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent);\n            // remove children if greater depth\n            return SelectorEngine.find(selector, this._config.parent).filter((element)=>!children.includes(element));\n        }\n        _addAriaAndCollapsedClass(triggerArray, isOpen) {\n            if (!triggerArray.length) return;\n            for (const element of triggerArray){\n                element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen);\n                element.setAttribute('aria-expanded', isOpen);\n            }\n        }\n        // Static\n        static jQueryInterface(config) {\n            const _config = {};\n            if (typeof config === 'string' && /show|hide/.test(config)) _config.toggle = false;\n            return this.each(function() {\n                const data = Collapse.getOrCreateInstance(this, _config);\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') throw new TypeError(`No method named \"${config}\"`);\n                    data[config]();\n                }\n            });\n        }\n    }\n    /**\n   * Data API implementation\n   */ EventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function(event) {\n        // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n        if (event.target.tagName === 'A' || event.delegateTarget && event.delegateTarget.tagName === 'A') event.preventDefault();\n        for (const element of SelectorEngine.getMultipleElementsFromSelector(this))Collapse.getOrCreateInstance(element, {\n            toggle: false\n        }).toggle();\n    });\n    /**\n   * jQuery\n   */ index_js.defineJQueryPlugin(Collapse);\n    return Collapse;\n});\n\n\nvar $f7129f53a7a8651e$exports = {};\n'use strict';\n$f7129f53a7a8651e$exports = $f7129f53a7a8651e$var$FPSControl;\nfunction $f7129f53a7a8651e$var$FPSControl(framerate) {\n    this.setFPS(framerate);\n    this.then = Date.now();\n}\n$f7129f53a7a8651e$var$FPSControl.prototype.setFPS = function(value) {\n    this.framerate = 1000 / value;\n};\n$f7129f53a7a8651e$var$FPSControl.prototype.check = function() {\n    var now = Date.now();\n    var elapsed = now - this.then;\n    if (elapsed > this.framerate) {\n        this.then = now - elapsed % this.framerate;\n        return true;\n    }\n    return false;\n};\n\n\n/**\n* The X coordinate of where the center of [[zoom]] is windowed at.\n*/ let $beec290f9d261ad4$var$zoomX = 10;\n/**\n* The Y coordinate of where the center of the [[zoom]] is windowed at.\n*/ let $beec290f9d261ad4$var$zoomY = 10;\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- start at top-left corner\nconst $beec290f9d261ad4$var$targeterLoc = {\n    x: 0,\n    y: 0\n};\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$targeterX = document.getElementById('targeterX');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$targeterY = document.getElementById('targeterY');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$targeterStats = document.getElementById('targeterStats');\nconst $beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR = 2 // the scale factor is the radius, 1/2 the diameter\n;\n/**\n* Initially a click envent handler from mid to late version 0 all the way to\n* early version 1, zoom takes in an object that contains `x` and `y`. If these\n* values are missing, the last values (saved at [[PixelManipulator.zoomX]] and\n* [[PixelManipulator.zoomY]], respectivly) are used.\n*\n* Also renders a grid on the zoom element.\n*\n* @param e - Tells pixelmanipulator where to focus the center of the zoomElm (or\n* zoom-box).\n*/ function $beec290f9d261ad4$var$oldZoom(e) {\n    if ($beec290f9d261ad4$var$zoomctx == null) return;\n    const { ctx: cctx } = $beec290f9d261ad4$var$renderer;\n    $beec290f9d261ad4$var$zoomctx.imageSmoothingEnabled = false;\n    $beec290f9d261ad4$var$zoomctx.strokeStyle = 'gray';\n    $beec290f9d261ad4$var$zoomctx.fillStyle = '#88888888';\n    cctx.strokeStyle = '#FFFFFF88';\n    cctx.fillStyle = '#88888888';\n    if (typeof e === 'undefined') e = {};\n    e.x ??= $beec290f9d261ad4$var$zoomX;\n    e.y ??= $beec290f9d261ad4$var$zoomY;\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- update zoom only if in bounds\n    if (e.x >= 0 && e.y >= 0) ({ x: $beec290f9d261ad4$var$zoomX, y: $beec290f9d261ad4$var$zoomY } = e);\n    if ($beec290f9d261ad4$var$shtargeter.checked) {\n        const THICKNESS = 1;\n        cctx.fillRect($beec290f9d261ad4$var$targeterLoc.x + THICKNESS, $beec290f9d261ad4$var$targeterLoc.y, $beec290f9d261ad4$var$canvas.width, THICKNESS);\n        cctx.fillRect($beec290f9d261ad4$var$targeterLoc.x, $beec290f9d261ad4$var$targeterLoc.y + THICKNESS, THICKNESS, $beec290f9d261ad4$var$canvas.height);\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- left side\n        cctx.fillRect(0, $beec290f9d261ad4$var$targeterLoc.y, $beec290f9d261ad4$var$targeterLoc.x, THICKNESS);\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top side\n        cctx.fillRect($beec290f9d261ad4$var$targeterLoc.x, 0, THICKNESS, $beec290f9d261ad4$var$targeterLoc.y);\n        $beec290f9d261ad4$var$targeterStats.classList.remove('visually-hidden');\n        $beec290f9d261ad4$var$targeterX.innerText = $beec290f9d261ad4$var$targeterLoc.x.toString();\n        $beec290f9d261ad4$var$targeterY.innerText = $beec290f9d261ad4$var$targeterLoc.y.toString();\n    } else $beec290f9d261ad4$var$targeterStats.classList.add('visually-hidden');\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top left corner\n    $beec290f9d261ad4$var$zoomctx.clearRect(0, 0, $beec290f9d261ad4$var$zoom.width, $beec290f9d261ad4$var$zoom.height) // clear the screen\n    ;\n    $beec290f9d261ad4$var$zoomctx.drawImage($beec290f9d261ad4$var$canvas, $beec290f9d261ad4$var$zoomX - Math.floor($beec290f9d261ad4$var$zoomScaleFactor / $beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR), $beec290f9d261ad4$var$zoomY - Math.floor($beec290f9d261ad4$var$zoomScaleFactor / $beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR), Math.floor($beec290f9d261ad4$var$zoom.width / $beec290f9d261ad4$var$zoomScaleFactor), Math.floor($beec290f9d261ad4$var$zoom.height / $beec290f9d261ad4$var$zoomScaleFactor), // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top left corner\n    0, 0, $beec290f9d261ad4$var$zoom.width, $beec290f9d261ad4$var$zoom.height);\n    // Render the box _after_ copying over to zoom canvas\n    if ($beec290f9d261ad4$var$shfocusbox.checked) {\n        const fbw = $beec290f9d261ad4$var$zoom.width / $beec290f9d261ad4$var$zoomScaleFactor;\n        const fbh = $beec290f9d261ad4$var$zoom.height / $beec290f9d261ad4$var$zoomScaleFactor;\n        const fbx = $beec290f9d261ad4$var$zoomX - $beec290f9d261ad4$var$zoom.width / ($beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR * $beec290f9d261ad4$var$zoomScaleFactor);\n        const fby = $beec290f9d261ad4$var$zoomY - $beec290f9d261ad4$var$zoom.height / ($beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR * $beec290f9d261ad4$var$zoomScaleFactor);\n        cctx.fillRect(fbx, fby, fbw, fbh);\n        if ($beec290f9d261ad4$var$targeterLoc.x >= fbx && $beec290f9d261ad4$var$targeterLoc.x <= fbx + fbw && $beec290f9d261ad4$var$targeterLoc.y >= fby && $beec290f9d261ad4$var$targeterLoc.y <= fby + fbh) cctx.strokeRect(fbx, fby, fbw, fbh);\n    }\n    $beec290f9d261ad4$var$zoomctx.beginPath() // draw the grid\n    ;\n    for(let i = 1; i < $beec290f9d261ad4$var$zoom.width / $beec290f9d261ad4$var$zoomScaleFactor; i++){\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top\n        $beec290f9d261ad4$var$zoomctx.moveTo(i * $beec290f9d261ad4$var$zoomScaleFactor, 0);\n        $beec290f9d261ad4$var$zoomctx.lineTo(i * $beec290f9d261ad4$var$zoomScaleFactor, $beec290f9d261ad4$var$zoom.height);\n    }\n    for(let i = 1; i < $beec290f9d261ad4$var$zoom.height / $beec290f9d261ad4$var$zoomScaleFactor; i++){\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- left\n        $beec290f9d261ad4$var$zoomctx.moveTo(0, i * $beec290f9d261ad4$var$zoomScaleFactor);\n        $beec290f9d261ad4$var$zoomctx.lineTo($beec290f9d261ad4$var$zoom.width, i * $beec290f9d261ad4$var$zoomScaleFactor);\n    }\n    $beec290f9d261ad4$var$zoomctx.stroke();\n}\nfunction $beec290f9d261ad4$var$updateSmallLines({ offsetX: x, offsetY: y }) {\n    $beec290f9d261ad4$var$targeterLoc.x = x;\n    $beec290f9d261ad4$var$targeterLoc.y = y;\n    $beec290f9d261ad4$var$p.update() // Erases old lines\n    ;\n    $beec290f9d261ad4$var$oldZoom();\n}\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- clearly to compare to zero\nconst $beec290f9d261ad4$var$fpsc = new (0, (/*@__PURE__*/$parcel$interopDefault($f7129f53a7a8651e$exports)))(60);\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$fps = document.getElementById('fps');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$fpsMax = document.getElementById('fpsMax');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$fpsUnlimited = document.getElementById('fpsUnlimited');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$fpsAmount = document.getElementById('fpsAmount');\nlet $beec290f9d261ad4$var$framecount = 0;\nlet $beec290f9d261ad4$var$lasttime = performance.now();\nfunction $beec290f9d261ad4$var$beforeIterate() {\n    if (!$beec290f9d261ad4$var$fpsUnlimited.checked && !$beec290f9d261ad4$var$fpsc.check()) return false;\n    $beec290f9d261ad4$var$frames.innerText = `${++$beec290f9d261ad4$var$framecount}`;\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- convert to frames/second\n    $beec290f9d261ad4$var$fps.innerText = (1 / ((performance.now() - $beec290f9d261ad4$var$lasttime) / 1000)).toFixed(3);\n    $beec290f9d261ad4$var$lasttime = performance.now();\n    return undefined;\n}\n$beec290f9d261ad4$var$fpsAmount.addEventListener('change', ()=>{\n    const { value: value } = $beec290f9d261ad4$var$fpsAmount;\n    $beec290f9d261ad4$var$fpsc.setFPS(parseInt(value));\n    $beec290f9d261ad4$var$fpsMax.innerText = value;\n});\n$beec290f9d261ad4$var$fpsUnlimited.addEventListener('change', ()=>{\n    if ($beec290f9d261ad4$var$fpsUnlimited.checked) $beec290f9d261ad4$var$fpsMax.innerText = 'unlimited';\n    else {\n        const { value: value } = $beec290f9d261ad4$var$fpsAmount;\n        $beec290f9d261ad4$var$fpsMax.innerText = value;\n    }\n});\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$frames = document.getElementById('frames');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$pixelRatio = document.getElementById('pixelRatio');\nfunction $beec290f9d261ad4$var$afterIterate(p) {\n    $beec290f9d261ad4$var$pixelRatio.innerHTML = '';\n    if (!$beec290f9d261ad4$var$pixelCounterT.checked) return;\n    $beec290f9d261ad4$var$pixelCounter.innerHTML = '';\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- all but last item in render info TODO: why\n    $beec290f9d261ad4$var$pixelRatio.style.background = `rgb(${$beec290f9d261ad4$var$renderer.renderInfo[p.defaultId].slice(0, -1).join(',')})`;\n    const area = p.get_width() * p.get_height();\n    Object.keys(p.elements).forEach((idStr)=>{\n        const id = parseInt(idStr);\n        const { elements: { [id]: { name: name } }, pixelCounts: { [id]: count } } = p;\n        if (typeof count === \"undefined\") return;\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- all but last item in render info TODO: why\n        const color = 'rgb(' + $beec290f9d261ad4$var$renderer.renderInfo[id].slice(0, -1).join(',') + ')';\n        const MAX_PERCENT = 100;\n        const percent = count / area * MAX_PERCENT;\n        const li = document.createElement('li');\n        li.classList.add('list-group-item');\n        {\n            const icon = document.createElement('i');\n            icon.classList.add('fa-solid', 'fa-square-poll-horizontal');\n            icon.style.color = color;\n            icon.setAttribute('aria-hidden', 'true');\n            li.appendChild(icon);\n        }\n        li.appendChild(document.createTextNode(` ${name}: `));\n        {\n            const span = document.createElement('span');\n            span.classList.add('badge', 'bg-primary');\n            span.innerText = `${count}`;\n            {\n                const unit = document.createElement('span');\n                unit.classList.add('visually-hidden');\n                unit.innerText = ' pixels';\n                span.appendChild(unit);\n            }\n            li.appendChild(span);\n        }\n        li.appendChild(document.createTextNode(' '));\n        {\n            const span = document.createElement('span');\n            span.classList.add('badge', 'bg-secondary');\n            span.innerText = `${Math.round(percent)}%`;\n            li.appendChild(span);\n        }\n        $beec290f9d261ad4$var$pixelCounter.appendChild(li);\n        const ratioE = document.createElement('div');\n        ratioE.classList.add('progress-bar');\n        ratioE.setAttribute('role', 'progressbar');\n        ratioE.style.backgroundColor = color;\n        ratioE.style.width = `${percent}%`;\n        ratioE.setAttribute('aria-valuenow', `${Math.round(percent)}`);\n        ratioE.setAttribute('aria-valuetext', `${Math.round(percent)}% full of ${name}`);\n        ratioE.setAttribute('aria-valuemin', '0');\n        ratioE.setAttribute('aria-valuemax', '100');\n        ratioE.title = `${name} : ${Math.round(percent)}%`;\n        $beec290f9d261ad4$var$pixelRatio.appendChild(ratioE);\n    });\n}\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$canvas = document.getElementById('canvas');\n$beec290f9d261ad4$var$canvas.addEventListener('click', (event)=>{\n    $beec290f9d261ad4$var$p.update();\n    $beec290f9d261ad4$var$oldZoom({\n        x: event.offsetX,\n        y: event.offsetY\n    });\n});\n$beec290f9d261ad4$var$canvas.addEventListener('mousemove', $beec290f9d261ad4$var$updateSmallLines);\nconst $beec290f9d261ad4$var$renderer = new (0, $060f52fa64169c81$exports.Ctx2dRenderer)($beec290f9d261ad4$var$canvas);\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default values\nconst $beec290f9d261ad4$var$p = new (0, $060f52fa64169c81$exports.PixelManipulator)($beec290f9d261ad4$var$renderer, 1, 1);\n// The width and height are changed later\nfunction $beec290f9d261ad4$var$updateCustomizer() {\n    const elm = $beec290f9d261ad4$var$p.getElementByName($beec290f9d261ad4$var$customSelect.value);\n    if (elm == null) return;\n    const { renderAs: renderAs, name: name } = elm;\n    const DEFAULT_DOT = 255;\n    const START_OF_COLOR = 0;\n    const ALPHA_INDEX = 3;\n    const HEX_VALUES_PER_DIGIT = 16;\n    const DIGITS_PER_DOT = 2;\n    $beec290f9d261ad4$var$customizeColor.value = `#${renderAs.slice(START_OF_COLOR, ALPHA_INDEX).map((dot)=>dot.toString(HEX_VALUES_PER_DIGIT).padStart(DIGITS_PER_DOT, '0')).join()}`;\n    const alphaVal = (renderAs[ALPHA_INDEX] ?? DEFAULT_DOT).toString();\n    $beec290f9d261ad4$var$customizeColorAlpha.value = alphaVal // Raw alpha value\n    ;\n    $beec290f9d261ad4$var$customizeColorAlphaText.innerText = alphaVal;\n    $beec290f9d261ad4$var$customizeName.value = name;\n}\nfunction $beec290f9d261ad4$var$changeColor() {\n    console.log('change color');\n    const num = $beec290f9d261ad4$var$p.nameToId($beec290f9d261ad4$var$customSelect.value);\n    const NOT_FOUND = -1;\n    if (num === NOT_FOUND) return;\n    const matches = /#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})/i.exec($beec290f9d261ad4$var$customizeColor.value);\n    if (matches == null) return;\n    // The 0th is just the whole string\n    const RED_IDX = 1;\n    const GREEN_IDX = 2;\n    const BLUE_IDX = 3;\n    const HEX_VALUES_PER_DIGIT = 16;\n    $beec290f9d261ad4$var$p.modifyElement(num, {\n        renderAs: [\n            parseInt(matches[RED_IDX], HEX_VALUES_PER_DIGIT),\n            parseInt(matches[GREEN_IDX], HEX_VALUES_PER_DIGIT),\n            parseInt(matches[BLUE_IDX], HEX_VALUES_PER_DIGIT),\n            parseInt($beec290f9d261ad4$var$customizeColorAlpha.value)\n        ]\n    });\n}\n/// Select the element to customize\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$customSelect = document.getElementById('customSelect');\n$beec290f9d261ad4$var$customSelect.addEventListener('change', ()=>{\n    $beec290f9d261ad4$var$updateCustomizer();\n});\n/// Change the color\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$customizeColor = document.getElementById('customizeColor');\n$beec290f9d261ad4$var$customizeColor.addEventListener('change', $beec290f9d261ad4$var$changeColor);\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$customizeColorAlpha = document.getElementById('customColorAlpha');\n$beec290f9d261ad4$var$customizeColorAlpha.addEventListener('change', $beec290f9d261ad4$var$changeColor);\n/// Name for the alpha field of the color\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$customizeColorAlphaText = document.getElementById('customColorAlphaText');\n/// Name of element\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$customizeName = document.getElementById('customizeName');\n$beec290f9d261ad4$var$customizeName.addEventListener('change', function() {\n    const { value: name } = this;\n    console.log('change name', name);\n    const num = $beec290f9d261ad4$var$p.nameToId($beec290f9d261ad4$var$customSelect.value);\n    const NOT_FOUND = -1;\n    if (num > NOT_FOUND) $beec290f9d261ad4$var$p.modifyElement(num, {\n        name: name\n    });\n    $beec290f9d261ad4$var$updateCustomizer();\n});\nfunction $beec290f9d261ad4$var$zoomClick(e) {\n    const zoomPos = {\n        x: Math.floor(e.offsetX / $beec290f9d261ad4$var$zoomScaleFactor) + Math.floor($beec290f9d261ad4$var$zoomX - $beec290f9d261ad4$var$zoomScaleFactor / $beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR),\n        y: Math.floor(e.offsetY / $beec290f9d261ad4$var$zoomScaleFactor) + Math.floor($beec290f9d261ad4$var$zoomY - $beec290f9d261ad4$var$zoomScaleFactor / $beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR)\n    };\n    const active = e.ctrlKey ? $beec290f9d261ad4$var$ctrlSelect.value : e.altKey ? $beec290f9d261ad4$var$altSelect.value : $beec290f9d261ad4$var$normalSelect.value;\n    const pixel = $beec290f9d261ad4$var$p.confirmElm(zoomPos, active) ? $beec290f9d261ad4$var$p.defaultId : active;\n    $beec290f9d261ad4$var$p.setPixel(zoomPos, pixel);\n    $beec290f9d261ad4$var$p.update();\n    $beec290f9d261ad4$var$oldZoom();\n}\n/// Zoomed in canvas\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$zoom = document.getElementById('zoom');\n$beec290f9d261ad4$var$zoom.addEventListener('click', $beec290f9d261ad4$var$zoomClick);\n$beec290f9d261ad4$var$zoom.addEventListener('drag', $beec290f9d261ad4$var$zoomClick);\n$beec290f9d261ad4$var$zoom.addEventListener('mousemove', (e)=>{\n    const x = Math.floor(e.offsetX / $beec290f9d261ad4$var$zoomScaleFactor);\n    const y = Math.floor(e.offsetY / $beec290f9d261ad4$var$zoomScaleFactor);\n    $beec290f9d261ad4$var$updateSmallLines({\n        offsetX: x + $beec290f9d261ad4$var$zoomX - $beec290f9d261ad4$var$zoom.width / ($beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR * $beec290f9d261ad4$var$zoomScaleFactor),\n        offsetY: y + $beec290f9d261ad4$var$zoomY - $beec290f9d261ad4$var$zoom.width / ($beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR * $beec290f9d261ad4$var$zoomScaleFactor)\n    });\n});\n/** Converts the pause button into a play button */ function $beec290f9d261ad4$var$convertPauseToPlay() {\n    $beec290f9d261ad4$var$playBtn.title = 'Play';\n    const playIcon = $beec290f9d261ad4$var$playBtn.querySelector('i');\n    playIcon?.classList.replace('fa-pause', 'fa-play');\n    playIcon?.setAttribute('alt', 'Play');\n}\n/** Converts the play button into a pause button */ function $beec290f9d261ad4$var$convertPlayToPause() {\n    $beec290f9d261ad4$var$playBtn.title = 'Pause';\n    const playIcon = $beec290f9d261ad4$var$playBtn.querySelector('i');\n    playIcon?.classList.replace('fa-play', 'fa-pause');\n    playIcon?.setAttribute('alt', 'Pause');\n}\n/// Actions box button.\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$resetBtn = document.getElementById('reset');\n$beec290f9d261ad4$var$resetBtn.addEventListener('click', function() {\n    const canvasW = parseInt($beec290f9d261ad4$var$widthE.value);\n    const canvasH = parseInt($beec290f9d261ad4$var$heightE.value);\n    const zoomW = parseInt($beec290f9d261ad4$var$zoomWidthElm.value);\n    const zoomH = parseInt($beec290f9d261ad4$var$zoomHeightElm.value);\n    $beec290f9d261ad4$var$p.reset({\n        canvasW: canvasW,\n        canvasH: canvasH\n    });\n    // Reccomended to have a function here that sets the canvas size here (or earlier), due to how startup works.\n    $beec290f9d261ad4$var$zoom.width = (Number.isNaN(zoomW) ? $beec290f9d261ad4$var$zoom.width / $beec290f9d261ad4$var$zoomScaleFactor : zoomW) * $beec290f9d261ad4$var$zoomScaleFactor;\n    $beec290f9d261ad4$var$zoom.height = (Number.isNaN(zoomH) ? $beec290f9d261ad4$var$zoom.height / $beec290f9d261ad4$var$zoomScaleFactor : zoomH) * $beec290f9d261ad4$var$zoomScaleFactor;\n    $beec290f9d261ad4$var$convertPauseToPlay();\n    $beec290f9d261ad4$var$oneFrameAtATime.disabled = false;\n    this.disabled = false;\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- reset it to default\n    $beec290f9d261ad4$var$framecount = 0;\n    $beec290f9d261ad4$var$p.iterate() // this will prevent new user confusion by showing the zoom box when the page loads\n    ;\n});\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$playBtn = document.getElementById('play');\n$beec290f9d261ad4$var$playBtn.addEventListener('click', ()=>{\n    if ($beec290f9d261ad4$var$p.mode === 'paused') {\n        $beec290f9d261ad4$var$p.play();\n        $beec290f9d261ad4$var$convertPlayToPause();\n        $beec290f9d261ad4$var$oneFrameAtATime.disabled = true;\n    } else {\n        $beec290f9d261ad4$var$p.pause();\n        $beec290f9d261ad4$var$convertPauseToPlay();\n        $beec290f9d261ad4$var$oneFrameAtATime.disabled = false;\n    }\n});\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$oneFrameAtATime = document.getElementById('oneFrameAtATime');\n$beec290f9d261ad4$var$oneFrameAtATime.addEventListener('click', ()=>{\n    $beec290f9d261ad4$var$p.iterate();\n});\n/// Sizes for render canvas\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$widthE = document.getElementById('width');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$heightE = document.getElementById('height');\n/// Sizes for zoom canvas\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$zoomHeightElm = document.getElementById('zoomHeightElm');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$zoomWidthElm = document.getElementById('zoomWidthElm');\n/// Element placed on normal-click\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$normalSelect = document.getElementById('normalSelect');\n/// The button to fill canvas with normal elm of given percent\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$normalFill = document.getElementById('normalFill');\n$beec290f9d261ad4$var$normalFill.addEventListener('click', ()=>{\n    const fillP = parseInt($beec290f9d261ad4$var$normalFillP.value);\n    $beec290f9d261ad4$var$p.randomlyFill($beec290f9d261ad4$var$normalSelect.value, // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default fill percent\n    Number.isNaN(fillP) ? 15 : fillP);\n    $beec290f9d261ad4$var$p.update() // needed after any changes are made\n    ;\n    $beec290f9d261ad4$var$oldZoom();\n});\n/// The percent of normal elm to fill canvas with when normalFill clicked\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$normalFillP = document.getElementById('normalFillP');\n/// Element placed on ctrl-click\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$ctrlSelect = document.getElementById('ctrlSelect');\n/// The button to fill canvas with ctrl elm of given percent\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$ctrlFill = document.getElementById('ctrlFill');\n$beec290f9d261ad4$var$ctrlFill.addEventListener('click', ()=>{\n    const fillP = parseInt($beec290f9d261ad4$var$ctrlFillP.value);\n    $beec290f9d261ad4$var$p.randomlyFill($beec290f9d261ad4$var$ctrlSelect.value, // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default fill percent\n    Number.isNaN(fillP) ? 15 : fillP);\n    $beec290f9d261ad4$var$p.update();\n    $beec290f9d261ad4$var$oldZoom();\n});\n/// The percent of ctrl elm to fill canvas with when ctrlFill clicked\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$ctrlFillP = document.getElementById('ctrlFillP');\n/// Element placed on alt-click\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$altSelect = document.getElementById('altSelect');\n/// The button to fill canvas with alt elm of given percent\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$altFill = document.getElementById('altFill');\n$beec290f9d261ad4$var$altFill.addEventListener('click', ()=>{\n    const fillP = parseInt($beec290f9d261ad4$var$altFillP.value);\n    $beec290f9d261ad4$var$p.randomlyFill($beec290f9d261ad4$var$altSelect.value, // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default fill percent\n    Number.isNaN(fillP) ? 15 : fillP);\n    $beec290f9d261ad4$var$p.update();\n    $beec290f9d261ad4$var$oldZoom();\n});\n/// The percent of alt elm to fill canvas with when altFill clicked\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$altFillP = document.getElementById('altFillP');\n/// Show targeter lines\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$shtargeter = document.getElementById('shtargeter');\n$beec290f9d261ad4$var$shtargeter.addEventListener('click', function() {\n    $beec290f9d261ad4$var$p.update();\n    $beec290f9d261ad4$var$oldZoom();\n});\n/// Hide focus box\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$shfocusbox = document.getElementById('shfocusbox');\n/// Hide pixelCounter\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$pixelCounterT = document.getElementById('pixelCounterT');\n$beec290f9d261ad4$var$pixelCounterT.addEventListener('change', function() {\n    if (this.checked) $beec290f9d261ad4$var$pixelCounterBox.classList.remove('visually-hidden');\n    else $beec290f9d261ad4$var$pixelCounterBox.classList.add('visually-hidden');\n});\n/// Version of backend\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$backendversion = document.getElementById('backendversion');\n$beec290f9d261ad4$var$backendversion.innerText = (0, $060f52fa64169c81$exports.version);\n/// Text element for pixel totals\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$pixelCounter = document.getElementById('pixelCounter');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst $beec290f9d261ad4$var$pixelCounterBox = document.getElementById('pixelCounterBox');\nconst $beec290f9d261ad4$var$elmdrops = document.getElementsByClassName('elmDrop');\nconst $beec290f9d261ad4$var$zoomctx = $beec290f9d261ad4$var$zoom.getContext('2d');\nif ($beec290f9d261ad4$var$zoomctx == null) throw new Error('rendering context not supported');\n/**\n* How many times bigger should the zoom elm be as compared to the actual size found in the normal canvas?\n*/ const $beec290f9d261ad4$var$zoomScaleFactor = 20;\n$beec290f9d261ad4$var$oldZoom({\n    x: Math.floor($beec290f9d261ad4$var$zoom.width / $beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR) - Math.floor($beec290f9d261ad4$var$zoom.width / $beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR) * $beec290f9d261ad4$var$zoomScaleFactor,\n    y: Math.floor($beec290f9d261ad4$var$zoom.height / $beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR) - Math.floor($beec290f9d261ad4$var$zoom.height / $beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR) * $beec290f9d261ad4$var$zoomScaleFactor\n});\n// eslint-disable-next-line complexity -- TODO: simplify\n$beec290f9d261ad4$var$p.onElementModified = ()=>{\n    let { value: nsv } = $beec290f9d261ad4$var$normalSelect;\n    let { value: csv } = $beec290f9d261ad4$var$ctrlSelect;\n    let { value: asv } = $beec290f9d261ad4$var$altSelect;\n    let { value: cusv } = $beec290f9d261ad4$var$customSelect;\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- fallback if empty\n    if (nsv.length === 0) nsv = \"Conway's Game Of Life\";\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- fallback if empty\n    if (csv.length === 0) csv = 'Blocks';\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- fallback if empty\n    if (asv.length === 0) asv = 'Water';\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- fallback if empty\n    if (cusv.length === 0) cusv = \"Conway's Game Of Life\";\n    Array.from($beec290f9d261ad4$var$elmdrops).forEach((htmlElm)=>{\n        htmlElm.innerHTML = '';\n        $beec290f9d261ad4$var$p.elements.forEach((elm)=>{\n            const newElement = document.createElement('option');\n            const { name: name } = elm;\n            newElement.innerText = name;\n            htmlElm.appendChild(newElement);\n        });\n    });\n    // Restore that selection, accounting for aliases\n    $beec290f9d261ad4$var$normalSelect.value = $beec290f9d261ad4$var$p.getElementByName(nsv)?.name ?? '';\n    $beec290f9d261ad4$var$ctrlSelect.value = $beec290f9d261ad4$var$p.getElementByName(csv)?.name ?? '';\n    $beec290f9d261ad4$var$altSelect.value = $beec290f9d261ad4$var$p.getElementByName(asv)?.name ?? '';\n    $beec290f9d261ad4$var$customSelect.value = $beec290f9d261ad4$var$p.getElementByName(cusv)?.name ?? '';\n    $beec290f9d261ad4$var$updateCustomizer();\n};\n$beec290f9d261ad4$var$p.addMultipleElements({\n    Acid: {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            110,\n            162,\n            10,\n            255\n        ],\n        // current Pixel Matches\n        // eslint-disable-next-line complexity -- don't think it matters much\n        liveCell: ({ x: x, y: y, oldId: oldId })=>{\n            const NO_OF_RAND_VALS = 3;\n            const randsAcid = new Uint8Array(NO_OF_RAND_VALS);\n            window.crypto.getRandomValues(randsAcid);\n            const [xRand, yRand, disapearRand] = Array.from(randsAcid);\n            const LEFT_ONE = -1;\n            const UP_ONE = -1;\n            const X_RANGE = 3;\n            const Y_RANGE = 4;\n            const newLoc = {\n                x: x + xRand % X_RANGE + LEFT_ONE,\n                y: y + yRand % Y_RANGE,\n                loop: false\n            };\n            const h = $beec290f9d261ad4$var$p.get_height();\n            while((newLoc.y >= h || $beec290f9d261ad4$var$p.confirmElm(newLoc, oldId)) && newLoc.y + UP_ONE >= y)newLoc.y--;\n            if (!$beec290f9d261ad4$var$p.confirmElm(newLoc, oldId)) {\n                $beec290f9d261ad4$var$p.setPixel({\n                    x: x,\n                    y: y,\n                    loop: false\n                }, $beec290f9d261ad4$var$p.defaultId);\n                $beec290f9d261ad4$var$p.setPixel(newLoc, oldId);\n            // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- 1 in 100 chance\n            } else if (disapearRand % 100 === 0) $beec290f9d261ad4$var$p.setPixel(newLoc, $beec290f9d261ad4$var$p.defaultId);\n        }\n    },\n    Blocks: {\n        // does nothing\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            127,\n            127,\n            127,\n            255\n        ]\n    },\n    \"Brian's Brain (dying)\": {\n        // not quite white\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            254,\n            254,\n            254,\n            255\n        ],\n        // Cells that were in the dying state go into the off state\n        liveCell: (loc)=>{\n            $beec290f9d261ad4$var$p.setPixel(loc, $beec290f9d261ad4$var$p.defaultId);\n        }\n    },\n    \"Brian's Brain (on)\": {\n        ...(0, $060f52fa64169c81$exports.rules).lifelike($beec290f9d261ad4$var$p, 'B2/S'),\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            0,\n            0,\n            254,\n            255\n        ],\n        // All cells that were \"on\" go into the \"dying\" state, which is not counted as an \"on\" cell in the neighbor count, and prevents any cell from being born there.\n        liveCell: (loc)=>{\n            $beec290f9d261ad4$var$p.setPixel(loc, \"Brian's Brain (dying)\");\n        }\n    },\n    Seeds: {\n        ...(0, $060f52fa64169c81$exports.rules).lifelike($beec290f9d261ad4$var$p, 'B2/S'),\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            194,\n            178,\n            128\n        ]\n    },\n    \"Conway's Game Of Life\": {\n        ...(0, $060f52fa64169c81$exports.rules).lifelike($beec290f9d261ad4$var$p, 'B3/S23'),\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            0,\n            255,\n            0,\n            255\n        ]\n    },\n    'Wireworld Conductor': {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            67,\n            75,\n            77,\n            255\n        ],\n        liveCell: (loc)=>{\n            const num = $beec290f9d261ad4$var$p.nameToId('Wireworld Electricity');\n            const NOT_FOUND = -1;\n            if (num === NOT_FOUND) return;\n            const { x: x, y: y } = loc;\n            const NEXT_FRAME = 1;\n            const conductorNearbyTotal = $beec290f9d261ad4$var$p.mooreNearbyCounter({\n                x: x,\n                y: y,\n                frame: NEXT_FRAME\n            }, num);\n            // copper stays as copper unless it has just one or two neighbours that are electron heads,in which case it becomes an electron head\n            // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- (see above)\n            const allowedNums = new Set([\n                1,\n                2\n            ]);\n            if (allowedNums.has(conductorNearbyTotal)) $beec290f9d261ad4$var$p.setPixel(loc, num);\n        }\n    },\n    'Wireworld Electricity': {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            148,\n            133,\n            0,\n            255\n        ],\n        liveCell: ({ x: x, y: y })=>{\n            $beec290f9d261ad4$var$p.setPixel({\n                x: x,\n                y: y,\n                loop: false\n            }, 'Wireworld FadingElectricity');\n        }\n    },\n    'Wireworld FadingElectricity': {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            74,\n            61,\n            0,\n            255\n        ],\n        liveCell: ({ x: x, y: y })=>{\n            $beec290f9d261ad4$var$p.setPixel({\n                x: x,\n                y: y,\n                loop: false\n            }, 'Wireworld Conductor');\n        }\n    },\n    Highlife: {\n        ...(0, $060f52fa64169c81$exports.rules).lifelike($beec290f9d261ad4$var$p, 'B36/S23'),\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            0,\n            255,\n            128,\n            255\n        ]\n    },\n    \"No-loop Conway's Game Of Life\": {\n        ...(0, $060f52fa64169c81$exports.rules).lifelike($beec290f9d261ad4$var$p, 'B3/S23', false),\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            0,\n            150,\n            0,\n            255\n        ]\n    },\n    'Rule 30': {\n        ...(0, $060f52fa64169c81$exports.rules).wolfram($beec290f9d261ad4$var$p, 'Rule 30', false),\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            255,\n            0,\n            255,\n            255\n        ]\n    },\n    'Rule 90': {\n        ...(0, $060f52fa64169c81$exports.rules).wolfram($beec290f9d261ad4$var$p, 'Rule 90', false),\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            147,\n            112,\n            219,\n            255\n        ]\n    },\n    'Rule 110': {\n        ...(0, $060f52fa64169c81$exports.rules).wolfram($beec290f9d261ad4$var$p, 'Rule 110', false),\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            128,\n            0,\n            128,\n            255\n        ]\n    },\n    'Rule 184': {\n        ...(0, $060f52fa64169c81$exports.rules).wolfram($beec290f9d261ad4$var$p, 'Rule 184', false),\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            255,\n            51,\n            153,\n            255\n        ]\n    },\n    Water: {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n        renderAs: [\n            23,\n            103,\n            167,\n            255\n        ],\n        liveCell: ({ x: x, y: y, oldId: oldId })=>{\n            const NO_OF_RAND_VALS = 2;\n            const randsWater = new Uint8Array(NO_OF_RAND_VALS);\n            window.crypto.getRandomValues(randsWater);\n            const [xRand, yRand] = Array.from(randsWater);\n            const X_RANGE = 3;\n            const Y_RANGE = 4;\n            const LEFT_ONE = -1;\n            const UP_ONE = -1;\n            const newLoc = {\n                x: x + xRand % X_RANGE + LEFT_ONE,\n                y: y + yRand % Y_RANGE,\n                loop: false\n            };\n            const h = $beec290f9d261ad4$var$p.get_height();\n            while((newLoc.y >= h || !$beec290f9d261ad4$var$p.confirmElm(newLoc, $beec290f9d261ad4$var$p.defaultId)) && newLoc.y + UP_ONE >= y)newLoc.y--;\n            if ($beec290f9d261ad4$var$p.confirmElm(newLoc, $beec290f9d261ad4$var$p.defaultId)) {\n                $beec290f9d261ad4$var$p.setPixel({\n                    x: x,\n                    y: y,\n                    loop: false\n                }, $beec290f9d261ad4$var$p.defaultId);\n                $beec290f9d261ad4$var$p.setPixel(newLoc, oldId);\n            }\n        }\n    }\n});\n$beec290f9d261ad4$var$p.onIterate = ()=>$beec290f9d261ad4$var$beforeIterate();\n$beec290f9d261ad4$var$p.onAfterIterate = ()=>{\n    $beec290f9d261ad4$var$oldZoom();\n    $beec290f9d261ad4$var$afterIterate($beec290f9d261ad4$var$p);\n};\n$beec290f9d261ad4$var$lasttime = performance.now();\n$beec290f9d261ad4$var$resetBtn.click() // vim: tabstop=2 shiftwidth=2 expandtab\n;\n\n\n//# sourceMappingURL=pixelmanipulator.2b555b87.js.map\n","/*!\n  * Bootstrap base-component.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./dom/data.js'), require('./dom/event-handler.js'), require('./util/config.js'), require('./util/index.js')) :\n  typeof define === 'function' && define.amd ? define(['./dom/data', './dom/event-handler', './util/config', './util/index'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.BaseComponent = factory(global.Data, global.EventHandler, global.Config, global.Index));\n})(this, (function (Data, EventHandler, Config, index_js) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  /**\n   * Constants\n   */\n\n  const VERSION = '5.3.3';\n\n  /**\n   * Class definition\n   */\n\n  class BaseComponent extends Config {\n    constructor(element, config) {\n      super();\n      element = index_js.getElement(element);\n      if (!element) {\n        return;\n      }\n      this._element = element;\n      this._config = this._getConfig(config);\n      Data.set(this._element, this.constructor.DATA_KEY, this);\n    }\n\n    // Public\n    dispose() {\n      Data.remove(this._element, this.constructor.DATA_KEY);\n      EventHandler.off(this._element, this.constructor.EVENT_KEY);\n      for (const propertyName of Object.getOwnPropertyNames(this)) {\n        this[propertyName] = null;\n      }\n    }\n    _queueCallback(callback, element, isAnimated = true) {\n      index_js.executeAfterTransition(callback, element, isAnimated);\n    }\n    _getConfig(config) {\n      config = this._mergeConfigObj(config, this._element);\n      config = this._configAfterMerge(config);\n      this._typeCheckConfig(config);\n      return config;\n    }\n\n    // Static\n    static getInstance(element) {\n      return Data.get(index_js.getElement(element), this.DATA_KEY);\n    }\n    static getOrCreateInstance(element, config = {}) {\n      return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n    }\n    static get VERSION() {\n      return VERSION;\n    }\n    static get DATA_KEY() {\n      return `bs.${this.NAME}`;\n    }\n    static get EVENT_KEY() {\n      return `.${this.DATA_KEY}`;\n    }\n    static eventName(name) {\n      return `${name}${this.EVENT_KEY}`;\n    }\n  }\n\n  return BaseComponent;\n\n}));\n//# sourceMappingURL=base-component.js.map\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data.js'\nimport EventHandler from './dom/event-handler.js'\nimport Config from './util/config.js'\nimport { executeAfterTransition, getElement } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst VERSION = '5.3.3'\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super()\n\n    element = getElement(element)\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    this._config = this._getConfig(config)\n\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null\n    }\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`\n  }\n}\n\nexport default BaseComponent\n","/*!\n  * Bootstrap data.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Data = factory());\n})(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/data.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  const elementMap = new Map();\n  const data = {\n    set(element, key, instance) {\n      if (!elementMap.has(element)) {\n        elementMap.set(element, new Map());\n      }\n      const instanceMap = elementMap.get(element);\n\n      // make it clear we only want one instance per element\n      // can be removed later when multiple key/instances are fine to be used\n      if (!instanceMap.has(key) && instanceMap.size !== 0) {\n        // eslint-disable-next-line no-console\n        console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);\n        return;\n      }\n      instanceMap.set(key, instance);\n    },\n    get(element, key) {\n      if (elementMap.has(element)) {\n        return elementMap.get(element).get(key) || null;\n      }\n      return null;\n    },\n    remove(element, key) {\n      if (!elementMap.has(element)) {\n        return;\n      }\n      const instanceMap = elementMap.get(element);\n      instanceMap.delete(key);\n\n      // free up element references if there are no instances left for an element\n      if (instanceMap.size === 0) {\n        elementMap.delete(element);\n      }\n    }\n  };\n\n  return data;\n\n}));\n//# sourceMappingURL=data.js.map\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * Constants\n */\n\nconst elementMap = new Map()\n\nexport default {\n  set(element, key, instance) {\n    if (!elementMap.has(element)) {\n      elementMap.set(element, new Map())\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    // make it clear we only want one instance per element\n    // can be removed later when multiple key/instances are fine to be used\n    if (!instanceMap.has(key) && instanceMap.size !== 0) {\n      // eslint-disable-next-line no-console\n      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`)\n      return\n    }\n\n    instanceMap.set(key, instance)\n  },\n\n  get(element, key) {\n    if (elementMap.has(element)) {\n      return elementMap.get(element).get(key) || null\n    }\n\n    return null\n  },\n\n  remove(element, key) {\n    if (!elementMap.has(element)) {\n      return\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    instanceMap.delete(key)\n\n    // free up element references if there are no instances left for an element\n    if (instanceMap.size === 0) {\n      elementMap.delete(element)\n    }\n  }\n}\n","/*!\n  * Bootstrap event-handler.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../util/index.js')) :\n  typeof define === 'function' && define.amd ? define(['../util/index'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.EventHandler = factory(global.Index));\n})(this, (function (index_js) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/event-handler.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  /**\n   * Constants\n   */\n\n  const namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\n  const stripNameRegex = /\\..*/;\n  const stripUidRegex = /::\\d+$/;\n  const eventRegistry = {}; // Events storage\n  let uidEvent = 1;\n  const customEvents = {\n    mouseenter: 'mouseover',\n    mouseleave: 'mouseout'\n  };\n  const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n\n  /**\n   * Private methods\n   */\n\n  function makeEventUid(element, uid) {\n    return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n  }\n  function getElementEvents(element) {\n    const uid = makeEventUid(element);\n    element.uidEvent = uid;\n    eventRegistry[uid] = eventRegistry[uid] || {};\n    return eventRegistry[uid];\n  }\n  function bootstrapHandler(element, fn) {\n    return function handler(event) {\n      hydrateObj(event, {\n        delegateTarget: element\n      });\n      if (handler.oneOff) {\n        EventHandler.off(element, event.type, fn);\n      }\n      return fn.apply(element, [event]);\n    };\n  }\n  function bootstrapDelegationHandler(element, selector, fn) {\n    return function handler(event) {\n      const domElements = element.querySelectorAll(selector);\n      for (let {\n        target\n      } = event; target && target !== this; target = target.parentNode) {\n        for (const domElement of domElements) {\n          if (domElement !== target) {\n            continue;\n          }\n          hydrateObj(event, {\n            delegateTarget: target\n          });\n          if (handler.oneOff) {\n            EventHandler.off(element, event.type, selector, fn);\n          }\n          return fn.apply(target, [event]);\n        }\n      }\n    };\n  }\n  function findHandler(events, callable, delegationSelector = null) {\n    return Object.values(events).find(event => event.callable === callable && event.delegationSelector === delegationSelector);\n  }\n  function normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n    const isDelegated = typeof handler === 'string';\n    // TODO: tooltip passes `false` instead of selector, so we need to check\n    const callable = isDelegated ? delegationFunction : handler || delegationFunction;\n    let typeEvent = getTypeEvent(originalTypeEvent);\n    if (!nativeEvents.has(typeEvent)) {\n      typeEvent = originalTypeEvent;\n    }\n    return [isDelegated, callable, typeEvent];\n  }\n  function addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n    let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n\n    // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n    // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n    if (originalTypeEvent in customEvents) {\n      const wrapFunction = fn => {\n        return function (event) {\n          if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {\n            return fn.call(this, event);\n          }\n        };\n      };\n      callable = wrapFunction(callable);\n    }\n    const events = getElementEvents(element);\n    const handlers = events[typeEvent] || (events[typeEvent] = {});\n    const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);\n    if (previousFunction) {\n      previousFunction.oneOff = previousFunction.oneOff && oneOff;\n      return;\n    }\n    const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''));\n    const fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);\n    fn.delegationSelector = isDelegated ? handler : null;\n    fn.callable = callable;\n    fn.oneOff = oneOff;\n    fn.uidEvent = uid;\n    handlers[uid] = fn;\n    element.addEventListener(typeEvent, fn, isDelegated);\n  }\n  function removeHandler(element, events, typeEvent, handler, delegationSelector) {\n    const fn = findHandler(events[typeEvent], handler, delegationSelector);\n    if (!fn) {\n      return;\n    }\n    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n    delete events[typeEvent][fn.uidEvent];\n  }\n  function removeNamespacedHandlers(element, events, typeEvent, namespace) {\n    const storeElementEvent = events[typeEvent] || {};\n    for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n      if (handlerKey.includes(namespace)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n      }\n    }\n  }\n  function getTypeEvent(event) {\n    // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n    event = event.replace(stripNameRegex, '');\n    return customEvents[event] || event;\n  }\n  const EventHandler = {\n    on(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, false);\n    },\n    one(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, true);\n    },\n    off(element, originalTypeEvent, handler, delegationFunction) {\n      if (typeof originalTypeEvent !== 'string' || !element) {\n        return;\n      }\n      const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n      const inNamespace = typeEvent !== originalTypeEvent;\n      const events = getElementEvents(element);\n      const storeElementEvent = events[typeEvent] || {};\n      const isNamespace = originalTypeEvent.startsWith('.');\n      if (typeof callable !== 'undefined') {\n        // Simplest case: handler is passed, remove that listener ONLY.\n        if (!Object.keys(storeElementEvent).length) {\n          return;\n        }\n        removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);\n        return;\n      }\n      if (isNamespace) {\n        for (const elementEvent of Object.keys(events)) {\n          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n        }\n      }\n      for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n        const handlerKey = keyHandlers.replace(stripUidRegex, '');\n        if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n          removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n        }\n      }\n    },\n    trigger(element, event, args) {\n      if (typeof event !== 'string' || !element) {\n        return null;\n      }\n      const $ = index_js.getjQuery();\n      const typeEvent = getTypeEvent(event);\n      const inNamespace = event !== typeEvent;\n      let jQueryEvent = null;\n      let bubbles = true;\n      let nativeDispatch = true;\n      let defaultPrevented = false;\n      if (inNamespace && $) {\n        jQueryEvent = $.Event(event, args);\n        $(element).trigger(jQueryEvent);\n        bubbles = !jQueryEvent.isPropagationStopped();\n        nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n        defaultPrevented = jQueryEvent.isDefaultPrevented();\n      }\n      const evt = hydrateObj(new Event(event, {\n        bubbles,\n        cancelable: true\n      }), args);\n      if (defaultPrevented) {\n        evt.preventDefault();\n      }\n      if (nativeDispatch) {\n        element.dispatchEvent(evt);\n      }\n      if (evt.defaultPrevented && jQueryEvent) {\n        jQueryEvent.preventDefault();\n      }\n      return evt;\n    }\n  };\n  function hydrateObj(obj, meta = {}) {\n    for (const [key, value] of Object.entries(meta)) {\n      try {\n        obj[key] = value;\n      } catch (_unused) {\n        Object.defineProperty(obj, key, {\n          configurable: true,\n          get() {\n            return value;\n          }\n        });\n      }\n    }\n    return obj;\n  }\n\n  return EventHandler;\n\n}));\n//# sourceMappingURL=event-handler.js.map\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getjQuery } from '../util/index.js'\n\n/**\n * Constants\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/\nconst stripNameRegex = /\\..*/\nconst stripUidRegex = /::\\d+$/\nconst eventRegistry = {} // Events storage\nlet uidEvent = 1\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n}\n\nconst nativeEvents = new Set([\n  'click',\n  'dblclick',\n  'mouseup',\n  'mousedown',\n  'contextmenu',\n  'mousewheel',\n  'DOMMouseScroll',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'selectstart',\n  'selectend',\n  'keydown',\n  'keypress',\n  'keyup',\n  'orientationchange',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel',\n  'gesturestart',\n  'gesturechange',\n  'gestureend',\n  'focus',\n  'blur',\n  'change',\n  'reset',\n  'select',\n  'submit',\n  'focusin',\n  'focusout',\n  'load',\n  'unload',\n  'beforeunload',\n  'resize',\n  'move',\n  'DOMContentLoaded',\n  'readystatechange',\n  'error',\n  'abort',\n  'scroll'\n])\n\n/**\n * Private methods\n */\n\nfunction makeEventUid(element, uid) {\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++\n}\n\nfunction getElementEvents(element) {\n  const uid = makeEventUid(element)\n\n  element.uidEvent = uid\n  eventRegistry[uid] = eventRegistry[uid] || {}\n\n  return eventRegistry[uid]\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    hydrateObj(event, { delegateTarget: element })\n\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn)\n    }\n\n    return fn.apply(element, [event])\n  }\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector)\n\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\n      for (const domElement of domElements) {\n        if (domElement !== target) {\n          continue\n        }\n\n        hydrateObj(event, { delegateTarget: target })\n\n        if (handler.oneOff) {\n          EventHandler.off(element, event.type, selector, fn)\n        }\n\n        return fn.apply(target, [event])\n      }\n    }\n  }\n}\n\nfunction findHandler(events, callable, delegationSelector = null) {\n  return Object.values(events)\n    .find(event => event.callable === callable && event.delegationSelector === delegationSelector)\n}\n\nfunction normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n  const isDelegated = typeof handler === 'string'\n  // TODO: tooltip passes `false` instead of selector, so we need to check\n  const callable = isDelegated ? delegationFunction : (handler || delegationFunction)\n  let typeEvent = getTypeEvent(originalTypeEvent)\n\n  if (!nativeEvents.has(typeEvent)) {\n    typeEvent = originalTypeEvent\n  }\n\n  return [isDelegated, callable, typeEvent]\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return\n  }\n\n  let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (originalTypeEvent in customEvents) {\n    const wrapFunction = fn => {\n      return function (event) {\n        if (!event.relatedTarget || (event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget))) {\n          return fn.call(this, event)\n        }\n      }\n    }\n\n    callable = wrapFunction(callable)\n  }\n\n  const events = getElementEvents(element)\n  const handlers = events[typeEvent] || (events[typeEvent] = {})\n  const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null)\n\n  if (previousFunction) {\n    previousFunction.oneOff = previousFunction.oneOff && oneOff\n\n    return\n  }\n\n  const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''))\n  const fn = isDelegated ?\n    bootstrapDelegationHandler(element, handler, callable) :\n    bootstrapHandler(element, callable)\n\n  fn.delegationSelector = isDelegated ? handler : null\n  fn.callable = callable\n  fn.oneOff = oneOff\n  fn.uidEvent = uid\n  handlers[uid] = fn\n\n  element.addEventListener(typeEvent, fn, isDelegated)\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector)\n\n  if (!fn) {\n    return\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector))\n  delete events[typeEvent][fn.uidEvent]\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {}\n\n  for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n    if (handlerKey.includes(namespace)) {\n      removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n    }\n  }\n}\n\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  event = event.replace(stripNameRegex, '')\n  return customEvents[event] || event\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, false)\n  },\n\n  one(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, true)\n  },\n\n  off(element, originalTypeEvent, handler, delegationFunction) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return\n    }\n\n    const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n    const inNamespace = typeEvent !== originalTypeEvent\n    const events = getElementEvents(element)\n    const storeElementEvent = events[typeEvent] || {}\n    const isNamespace = originalTypeEvent.startsWith('.')\n\n    if (typeof callable !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!Object.keys(storeElementEvent).length) {\n        return\n      }\n\n      removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null)\n      return\n    }\n\n    if (isNamespace) {\n      for (const elementEvent of Object.keys(events)) {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1))\n      }\n    }\n\n    for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '')\n\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n      }\n    }\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null\n    }\n\n    const $ = getjQuery()\n    const typeEvent = getTypeEvent(event)\n    const inNamespace = event !== typeEvent\n\n    let jQueryEvent = null\n    let bubbles = true\n    let nativeDispatch = true\n    let defaultPrevented = false\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args)\n\n      $(element).trigger(jQueryEvent)\n      bubbles = !jQueryEvent.isPropagationStopped()\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped()\n      defaultPrevented = jQueryEvent.isDefaultPrevented()\n    }\n\n    const evt = hydrateObj(new Event(event, { bubbles, cancelable: true }), args)\n\n    if (defaultPrevented) {\n      evt.preventDefault()\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt)\n    }\n\n    if (evt.defaultPrevented && jQueryEvent) {\n      jQueryEvent.preventDefault()\n    }\n\n    return evt\n  }\n}\n\nfunction hydrateObj(obj, meta = {}) {\n  for (const [key, value] of Object.entries(meta)) {\n    try {\n      obj[key] = value\n    } catch {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        get() {\n          return value\n        }\n      })\n    }\n  }\n\n  return obj\n}\n\nexport default EventHandler\n","/*!\n  * Bootstrap index.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Index = {}));\n})(this, (function (exports) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/index.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  const MAX_UID = 1000000;\n  const MILLISECONDS_MULTIPLIER = 1000;\n  const TRANSITION_END = 'transitionend';\n\n  /**\n   * Properly escape IDs selectors to handle weird IDs\n   * @param {string} selector\n   * @returns {string}\n   */\n  const parseSelector = selector => {\n    if (selector && window.CSS && window.CSS.escape) {\n      // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n      selector = selector.replace(/#([^\\s\"#']+)/g, (match, id) => `#${CSS.escape(id)}`);\n    }\n    return selector;\n  };\n\n  // Shout-out Angus Croll (https://goo.gl/pxwQGp)\n  const toType = object => {\n    if (object === null || object === undefined) {\n      return `${object}`;\n    }\n    return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase();\n  };\n\n  /**\n   * Public Util API\n   */\n\n  const getUID = prefix => {\n    do {\n      prefix += Math.floor(Math.random() * MAX_UID);\n    } while (document.getElementById(prefix));\n    return prefix;\n  };\n  const getTransitionDurationFromElement = element => {\n    if (!element) {\n      return 0;\n    }\n\n    // Get transition-duration of the element\n    let {\n      transitionDuration,\n      transitionDelay\n    } = window.getComputedStyle(element);\n    const floatTransitionDuration = Number.parseFloat(transitionDuration);\n    const floatTransitionDelay = Number.parseFloat(transitionDelay);\n\n    // Return 0 if element or transition duration is not found\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0;\n    }\n\n    // If multiple durations are defined, take the first\n    transitionDuration = transitionDuration.split(',')[0];\n    transitionDelay = transitionDelay.split(',')[0];\n    return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n  };\n  const triggerTransitionEnd = element => {\n    element.dispatchEvent(new Event(TRANSITION_END));\n  };\n  const isElement = object => {\n    if (!object || typeof object !== 'object') {\n      return false;\n    }\n    if (typeof object.jquery !== 'undefined') {\n      object = object[0];\n    }\n    return typeof object.nodeType !== 'undefined';\n  };\n  const getElement = object => {\n    // it's a jQuery object or a node element\n    if (isElement(object)) {\n      return object.jquery ? object[0] : object;\n    }\n    if (typeof object === 'string' && object.length > 0) {\n      return document.querySelector(parseSelector(object));\n    }\n    return null;\n  };\n  const isVisible = element => {\n    if (!isElement(element) || element.getClientRects().length === 0) {\n      return false;\n    }\n    const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible';\n    // Handle `details` element as its content may falsie appear visible when it is closed\n    const closedDetails = element.closest('details:not([open])');\n    if (!closedDetails) {\n      return elementIsVisible;\n    }\n    if (closedDetails !== element) {\n      const summary = element.closest('summary');\n      if (summary && summary.parentNode !== closedDetails) {\n        return false;\n      }\n      if (summary === null) {\n        return false;\n      }\n    }\n    return elementIsVisible;\n  };\n  const isDisabled = element => {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n    if (element.classList.contains('disabled')) {\n      return true;\n    }\n    if (typeof element.disabled !== 'undefined') {\n      return element.disabled;\n    }\n    return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';\n  };\n  const findShadowRoot = element => {\n    if (!document.documentElement.attachShadow) {\n      return null;\n    }\n\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n      const root = element.getRootNode();\n      return root instanceof ShadowRoot ? root : null;\n    }\n    if (element instanceof ShadowRoot) {\n      return element;\n    }\n\n    // when we don't find a shadow root\n    if (!element.parentNode) {\n      return null;\n    }\n    return findShadowRoot(element.parentNode);\n  };\n  const noop = () => {};\n\n  /**\n   * Trick to restart an element's animation\n   *\n   * @param {HTMLElement} element\n   * @return void\n   *\n   * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n   */\n  const reflow = element => {\n    element.offsetHeight; // eslint-disable-line no-unused-expressions\n  };\n  const getjQuery = () => {\n    if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n      return window.jQuery;\n    }\n    return null;\n  };\n  const DOMContentLoadedCallbacks = [];\n  const onDOMContentLoaded = callback => {\n    if (document.readyState === 'loading') {\n      // add listener on the first call when the document is in loading state\n      if (!DOMContentLoadedCallbacks.length) {\n        document.addEventListener('DOMContentLoaded', () => {\n          for (const callback of DOMContentLoadedCallbacks) {\n            callback();\n          }\n        });\n      }\n      DOMContentLoadedCallbacks.push(callback);\n    } else {\n      callback();\n    }\n  };\n  const isRTL = () => document.documentElement.dir === 'rtl';\n  const defineJQueryPlugin = plugin => {\n    onDOMContentLoaded(() => {\n      const $ = getjQuery();\n      /* istanbul ignore if */\n      if ($) {\n        const name = plugin.NAME;\n        const JQUERY_NO_CONFLICT = $.fn[name];\n        $.fn[name] = plugin.jQueryInterface;\n        $.fn[name].Constructor = plugin;\n        $.fn[name].noConflict = () => {\n          $.fn[name] = JQUERY_NO_CONFLICT;\n          return plugin.jQueryInterface;\n        };\n      }\n    });\n  };\n  const execute = (possibleCallback, args = [], defaultValue = possibleCallback) => {\n    return typeof possibleCallback === 'function' ? possibleCallback(...args) : defaultValue;\n  };\n  const executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n    if (!waitForTransition) {\n      execute(callback);\n      return;\n    }\n    const durationPadding = 5;\n    const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;\n    let called = false;\n    const handler = ({\n      target\n    }) => {\n      if (target !== transitionElement) {\n        return;\n      }\n      called = true;\n      transitionElement.removeEventListener(TRANSITION_END, handler);\n      execute(callback);\n    };\n    transitionElement.addEventListener(TRANSITION_END, handler);\n    setTimeout(() => {\n      if (!called) {\n        triggerTransitionEnd(transitionElement);\n      }\n    }, emulatedDuration);\n  };\n\n  /**\n   * Return the previous/next element of a list.\n   *\n   * @param {array} list    The list of elements\n   * @param activeElement   The active element\n   * @param shouldGetNext   Choose to get next or previous element\n   * @param isCycleAllowed\n   * @return {Element|elem} The proper element\n   */\n  const getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n    const listLength = list.length;\n    let index = list.indexOf(activeElement);\n\n    // if the element does not exist in the list return an element\n    // depending on the direction and if cycle is allowed\n    if (index === -1) {\n      return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];\n    }\n    index += shouldGetNext ? 1 : -1;\n    if (isCycleAllowed) {\n      index = (index + listLength) % listLength;\n    }\n    return list[Math.max(0, Math.min(index, listLength - 1))];\n  };\n\n  exports.defineJQueryPlugin = defineJQueryPlugin;\n  exports.execute = execute;\n  exports.executeAfterTransition = executeAfterTransition;\n  exports.findShadowRoot = findShadowRoot;\n  exports.getElement = getElement;\n  exports.getNextActiveElement = getNextActiveElement;\n  exports.getTransitionDurationFromElement = getTransitionDurationFromElement;\n  exports.getUID = getUID;\n  exports.getjQuery = getjQuery;\n  exports.isDisabled = isDisabled;\n  exports.isElement = isElement;\n  exports.isRTL = isRTL;\n  exports.isVisible = isVisible;\n  exports.noop = noop;\n  exports.onDOMContentLoaded = onDOMContentLoaded;\n  exports.parseSelector = parseSelector;\n  exports.reflow = reflow;\n  exports.toType = toType;\n  exports.triggerTransitionEnd = triggerTransitionEnd;\n\n  Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\n}));\n//# sourceMappingURL=index.js.map\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1_000_000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n/**\n * Properly escape IDs selectors to handle weird IDs\n * @param {string} selector\n * @returns {string}\n */\nconst parseSelector = selector => {\n  if (selector && window.CSS && window.CSS.escape) {\n    // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n    selector = selector.replace(/#([^\\s\"#']+)/g, (match, id) => `#${CSS.escape(id)}`)\n  }\n\n  return selector\n}\n\n// Shout-out Angus Croll (https://goo.gl/pxwQGp)\nconst toType = object => {\n  if (object === null || object === undefined) {\n    return `${object}`\n  }\n\n  return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * Public Util API\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = object => {\n  if (!object || typeof object !== 'object') {\n    return false\n  }\n\n  if (typeof object.jquery !== 'undefined') {\n    object = object[0]\n  }\n\n  return typeof object.nodeType !== 'undefined'\n}\n\nconst getElement = object => {\n  // it's a jQuery object or a node element\n  if (isElement(object)) {\n    return object.jquery ? object[0] : object\n  }\n\n  if (typeof object === 'string' && object.length > 0) {\n    return document.querySelector(parseSelector(object))\n  }\n\n  return null\n}\n\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false\n  }\n\n  const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n  // Handle `details` element as its content may falsie appear visible when it is closed\n  const closedDetails = element.closest('details:not([open])')\n\n  if (!closedDetails) {\n    return elementIsVisible\n  }\n\n  if (closedDetails !== element) {\n    const summary = element.closest('summary')\n    if (summary && summary.parentNode !== closedDetails) {\n      return false\n    }\n\n    if (summary === null) {\n      return false\n    }\n  }\n\n  return elementIsVisible\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */\nconst reflow = element => {\n  element.offsetHeight // eslint-disable-line no-unused-expressions\n}\n\nconst getjQuery = () => {\n  if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return window.jQuery\n  }\n\n  return null\n}\n\nconst DOMContentLoadedCallbacks = []\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        for (const callback of DOMContentLoadedCallbacks) {\n          callback()\n        }\n      })\n    }\n\n    DOMContentLoadedCallbacks.push(callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = (possibleCallback, args = [], defaultValue = possibleCallback) => {\n  return typeof possibleCallback === 'function' ? possibleCallback(...args) : defaultValue\n}\n\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener(TRANSITION_END, handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener(TRANSITION_END, handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  const listLength = list.length\n  let index = list.indexOf(activeElement)\n\n  // if the element does not exist in the list return an element\n  // depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0]\n  }\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\nexport {\n  defineJQueryPlugin,\n  execute,\n  executeAfterTransition,\n  findShadowRoot,\n  getElement,\n  getjQuery,\n  getNextActiveElement,\n  getTransitionDurationFromElement,\n  getUID,\n  isDisabled,\n  isElement,\n  isRTL,\n  isVisible,\n  noop,\n  onDOMContentLoaded,\n  parseSelector,\n  reflow,\n  triggerTransitionEnd,\n  toType\n}\n","/*!\n  * Bootstrap config.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../dom/manipulator.js'), require('./index.js')) :\n  typeof define === 'function' && define.amd ? define(['../dom/manipulator', './index'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Config = factory(global.Manipulator, global.Index));\n})(this, (function (Manipulator, index_js) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/config.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  /**\n   * Class definition\n   */\n\n  class Config {\n    // Getters\n    static get Default() {\n      return {};\n    }\n    static get DefaultType() {\n      return {};\n    }\n    static get NAME() {\n      throw new Error('You have to implement the static method \"NAME\", for each component!');\n    }\n    _getConfig(config) {\n      config = this._mergeConfigObj(config);\n      config = this._configAfterMerge(config);\n      this._typeCheckConfig(config);\n      return config;\n    }\n    _configAfterMerge(config) {\n      return config;\n    }\n    _mergeConfigObj(config, element) {\n      const jsonConfig = index_js.isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {}; // try to parse\n\n      return {\n        ...this.constructor.Default,\n        ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n        ...(index_js.isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n        ...(typeof config === 'object' ? config : {})\n      };\n    }\n    _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n      for (const [property, expectedTypes] of Object.entries(configTypes)) {\n        const value = config[property];\n        const valueType = index_js.isElement(value) ? 'element' : index_js.toType(value);\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`);\n        }\n      }\n    }\n  }\n\n  return Config;\n\n}));\n//# sourceMappingURL=config.js.map\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Manipulator from '../dom/manipulator.js'\nimport { isElement, toType } from './index.js'\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {}\n  }\n\n  static get DefaultType() {\n    return {}\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    return config\n  }\n\n  _mergeConfigObj(config, element) {\n    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {} // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    }\n  }\n\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const [property, expectedTypes] of Object.entries(configTypes)) {\n      const value = config[property]\n      const valueType = isElement(value) ? 'element' : toType(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(\n          `${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n        )\n      }\n    }\n  }\n}\n\nexport default Config\n","/*!\n  * Bootstrap manipulator.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Manipulator = factory());\n})(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/manipulator.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  function normalizeData(value) {\n    if (value === 'true') {\n      return true;\n    }\n    if (value === 'false') {\n      return false;\n    }\n    if (value === Number(value).toString()) {\n      return Number(value);\n    }\n    if (value === '' || value === 'null') {\n      return null;\n    }\n    if (typeof value !== 'string') {\n      return value;\n    }\n    try {\n      return JSON.parse(decodeURIComponent(value));\n    } catch (_unused) {\n      return value;\n    }\n  }\n  function normalizeDataKey(key) {\n    return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);\n  }\n  const Manipulator = {\n    setDataAttribute(element, key, value) {\n      element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);\n    },\n    removeDataAttribute(element, key) {\n      element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);\n    },\n    getDataAttributes(element) {\n      if (!element) {\n        return {};\n      }\n      const attributes = {};\n      const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'));\n      for (const key of bsKeys) {\n        let pureKey = key.replace(/^bs/, '');\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\n        attributes[pureKey] = normalizeData(element.dataset[key]);\n      }\n      return attributes;\n    },\n    getDataAttribute(element, key) {\n      return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));\n    }\n  };\n\n  return Manipulator;\n\n}));\n//# sourceMappingURL=manipulator.js.map\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(value) {\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  if (value === Number(value).toString()) {\n    return Number(value)\n  }\n\n  if (value === '' || value === 'null') {\n    return null\n  }\n\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  try {\n    return JSON.parse(decodeURIComponent(value))\n  } catch {\n    return value\n  }\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value)\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`)\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {}\n    }\n\n    const attributes = {}\n    const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'))\n\n    for (const key of bsKeys) {\n      let pureKey = key.replace(/^bs/, '')\n      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length)\n      attributes[pureKey] = normalizeData(element.dataset[key])\n    }\n\n    return attributes\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`))\n  }\n}\n\nexport default Manipulator\n","/*!\n  * Bootstrap selector-engine.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../util/index.js')) :\n  typeof define === 'function' && define.amd ? define(['../util/index'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SelectorEngine = factory(global.Index));\n})(this, (function (index_js) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/selector-engine.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  const getSelector = element => {\n    let selector = element.getAttribute('data-bs-target');\n    if (!selector || selector === '#') {\n      let hrefAttribute = element.getAttribute('href');\n\n      // The only valid content that could double as a selector are IDs or classes,\n      // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n      // `document.querySelector` will rightfully complain it is invalid.\n      // See https://github.com/twbs/bootstrap/issues/32273\n      if (!hrefAttribute || !hrefAttribute.includes('#') && !hrefAttribute.startsWith('.')) {\n        return null;\n      }\n\n      // Just in case some CMS puts out a full URL with the anchor appended\n      if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n        hrefAttribute = `#${hrefAttribute.split('#')[1]}`;\n      }\n      selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null;\n    }\n    return selector ? selector.split(',').map(sel => index_js.parseSelector(sel)).join(',') : null;\n  };\n  const SelectorEngine = {\n    find(selector, element = document.documentElement) {\n      return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n    },\n    findOne(selector, element = document.documentElement) {\n      return Element.prototype.querySelector.call(element, selector);\n    },\n    children(element, selector) {\n      return [].concat(...element.children).filter(child => child.matches(selector));\n    },\n    parents(element, selector) {\n      const parents = [];\n      let ancestor = element.parentNode.closest(selector);\n      while (ancestor) {\n        parents.push(ancestor);\n        ancestor = ancestor.parentNode.closest(selector);\n      }\n      return parents;\n    },\n    prev(element, selector) {\n      let previous = element.previousElementSibling;\n      while (previous) {\n        if (previous.matches(selector)) {\n          return [previous];\n        }\n        previous = previous.previousElementSibling;\n      }\n      return [];\n    },\n    // TODO: this is now unused; remove later along with prev()\n    next(element, selector) {\n      let next = element.nextElementSibling;\n      while (next) {\n        if (next.matches(selector)) {\n          return [next];\n        }\n        next = next.nextElementSibling;\n      }\n      return [];\n    },\n    focusableChildren(element) {\n      const focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable=\"true\"]'].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',');\n      return this.find(focusables, element).filter(el => !index_js.isDisabled(el) && index_js.isVisible(el));\n    },\n    getSelectorFromElement(element) {\n      const selector = getSelector(element);\n      if (selector) {\n        return SelectorEngine.findOne(selector) ? selector : null;\n      }\n      return null;\n    },\n    getElementFromSelector(element) {\n      const selector = getSelector(element);\n      return selector ? SelectorEngine.findOne(selector) : null;\n    },\n    getMultipleElementsFromSelector(element) {\n      const selector = getSelector(element);\n      return selector ? SelectorEngine.find(selector) : [];\n    }\n  };\n\n  return SelectorEngine;\n\n}));\n//# sourceMappingURL=selector-engine.js.map\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isDisabled, isVisible, parseSelector } from '../util/index.js'\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || (!hrefAttribute.includes('#') && !hrefAttribute.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`\n    }\n\n    selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null\n  }\n\n  return selector ? selector.split(',').map(sel => parseSelector(sel)).join(',') : null\n}\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n    let ancestor = element.parentNode.closest(selector)\n\n    while (ancestor) {\n      parents.push(ancestor)\n      ancestor = ancestor.parentNode.closest(selector)\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  },\n\n  focusableChildren(element) {\n    const focusables = [\n      'a',\n      'button',\n      'input',\n      'textarea',\n      'select',\n      'details',\n      '[tabindex]',\n      '[contenteditable=\"true\"]'\n    ].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',')\n\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el))\n  },\n\n  getSelectorFromElement(element) {\n    const selector = getSelector(element)\n\n    if (selector) {\n      return SelectorEngine.findOne(selector) ? selector : null\n    }\n\n    return null\n  },\n\n  getElementFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.findOne(selector) : null\n  },\n\n  getMultipleElementsFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.find(selector) : []\n  }\n}\n\nexport default SelectorEngine\n","/* eslint-disable max-lines -- TODO: break this into more files */\nimport { PixelManipulator, version, rules, Ctx2dRenderer, type Location } from 'pixelmanipulator'\n//import '@fortawesome/fontawesome-free/attribution.js'\nimport 'bootstrap/js/dist/collapse' // For #sideAccordion\nimport FPSControl from 'fps-control'\n/**\n* The X coordinate of where the center of [[zoom]] is windowed at.\n*/\nlet zoomX = 10\n/**\n* The Y coordinate of where the center of the [[zoom]] is windowed at.\n*/\nlet zoomY = 10\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- start at top-left corner\nconst targeterLoc: Location = { x: 0, y: 0 }\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst targeterX = document.getElementById('targeterX') as HTMLSpanElement\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst targeterY = document.getElementById('targeterY') as HTMLSpanElement\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst targeterStats = document.getElementById('targeterStats') as HTMLDivElement\nconst ZOOM_SCALE_RAD_FACTOR = 2 // the scale factor is the radius, 1/2 the diameter\n/**\n* Initially a click envent handler from mid to late version 0 all the way to\n* early version 1, zoom takes in an object that contains `x` and `y`. If these\n* values are missing, the last values (saved at [[PixelManipulator.zoomX]] and\n* [[PixelManipulator.zoomY]], respectivly) are used.\n*\n* Also renders a grid on the zoom element.\n*\n* @param e - Tells pixelmanipulator where to focus the center of the zoomElm (or\n* zoom-box).\n*/\nfunction oldZoom(e?: { // eslint-disable-line complexity -- TODO: too complex\n  /** Position to center the zoom elm on. (If absent, uses\n  * [[PixelManipulator.zoomX]]) */\n  x?: number\n  /** Position to center the zoom elm on. (If absent, uses\n  * [[PixelManipulator.zoomY]]) */\n  y?: number\n}): void {\n  if (zoomctx == null) return\n  const { ctx: cctx } = renderer\n  zoomctx.imageSmoothingEnabled = false\n  zoomctx.strokeStyle = 'gray'\n  zoomctx.fillStyle = '#88888888'\n  cctx.strokeStyle = '#FFFFFF88'\n  cctx.fillStyle = '#88888888'\n  if (typeof e === 'undefined') e = {}\n  e.x ??= zoomX\n  e.y ??= zoomY\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- update zoom only if in bounds\n  if (e.x >= 0 && e.y >= 0) {\n    ({ x: zoomX, y: zoomY } = e)\n  }\n  if (shtargeter.checked) {\n    const THICKNESS = 1\n    cctx.fillRect(targeterLoc.x + THICKNESS, targeterLoc.y, canvas.width, THICKNESS)\n    cctx.fillRect(targeterLoc.x, targeterLoc.y + THICKNESS, THICKNESS, canvas.height)\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- left side\n    cctx.fillRect(0, targeterLoc.y, targeterLoc.x, THICKNESS)\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top side\n    cctx.fillRect(targeterLoc.x, 0, THICKNESS, targeterLoc.y)\n    targeterStats.classList.remove('visually-hidden')\n    targeterX.innerText = targeterLoc.x.toString()\n    targeterY.innerText = targeterLoc.y.toString()\n  } else {\n    targeterStats.classList.add('visually-hidden')\n  }\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top left corner\n  zoomctx.clearRect(0, 0, zoom.width, zoom.height)// clear the screen\n  zoomctx.drawImage(canvas, // draw the selected section of the canvas onto the zoom canvas\n    (zoomX - Math.floor(zoomScaleFactor / ZOOM_SCALE_RAD_FACTOR)),\n    (zoomY - Math.floor(zoomScaleFactor / ZOOM_SCALE_RAD_FACTOR)),\n    Math.floor(zoom.width / zoomScaleFactor), Math.floor(zoom.height / zoomScaleFactor),\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top left corner\n    0, 0,\n    zoom.width, zoom.height)\n  // Render the box _after_ copying over to zoom canvas\n  if (shfocusbox.checked) {\n    const fbw = zoom.width / zoomScaleFactor\n    const fbh = zoom.height / zoomScaleFactor\n    const fbx = zoomX - (zoom.width / (ZOOM_SCALE_RAD_FACTOR * zoomScaleFactor))\n    const fby = zoomY - (zoom.height / (ZOOM_SCALE_RAD_FACTOR * zoomScaleFactor))\n    cctx.fillRect(fbx, fby, fbw, fbh)\n    if (\n      targeterLoc.x >= fbx &&\n      targeterLoc.x <= fbx + fbw &&\n      targeterLoc.y >= fby &&\n      targeterLoc.y <= fby + fbh\n    ) {\n      cctx.strokeRect(fbx, fby, fbw, fbh)\n    }\n  }\n  zoomctx.beginPath()// draw the grid\n  for (let i = 1; i < (zoom.width / zoomScaleFactor); i++) {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top\n    zoomctx.moveTo(i * zoomScaleFactor, 0)\n    zoomctx.lineTo(i * zoomScaleFactor, zoom.height)\n  }\n  for (let i = 1; i < (zoom.height / zoomScaleFactor); i++) {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- left\n    zoomctx.moveTo(0, i * zoomScaleFactor)\n    zoomctx.lineTo(zoom.width, i * zoomScaleFactor)\n  }\n  zoomctx.stroke()\n}\nfunction updateSmallLines({ offsetX: x, offsetY: y }: MouseEvent | { offsetX: number, offsetY: number }): void {\n  targeterLoc.x = x\n  targeterLoc.y = y\n  p.update() // Erases old lines\n  oldZoom()\n}\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- clearly to compare to zero\nconst fpsc = new FPSControl(60)\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst fps = document.getElementById('fps') as HTMLParagraphElement\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst fpsMax = document.getElementById('fpsMax') as HTMLParagraphElement\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst fpsUnlimited = document.getElementById('fpsUnlimited') as HTMLInputElement\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst fpsAmount = document.getElementById('fpsAmount') as HTMLInputElement\nlet framecount = 0\nlet lasttime: number = performance.now()\nfunction beforeIterate(): false | undefined {\n  if (!fpsUnlimited.checked && !fpsc.check()) return false\n  frames.innerText = `${++framecount}`\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- convert to frames/second\n  fps.innerText = (1 / ((performance.now() - lasttime) / 1000)).toFixed(3)\n  lasttime = performance.now()\n  return undefined\n}\nfpsAmount.addEventListener('change', () => {\n  const { value } = fpsAmount\n  fpsc.setFPS(parseInt(value))\n  fpsMax.innerText = value\n})\nfpsUnlimited.addEventListener('change', () => {\n  if (fpsUnlimited.checked) {\n    fpsMax.innerText = 'unlimited'\n  } else {\n    const { value } = fpsAmount\n    fpsMax.innerText = value\n  }\n})\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst frames = document.getElementById('frames') as HTMLParagraphElement\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst pixelRatio = document.getElementById('pixelRatio') as HTMLDivElement\nfunction afterIterate<T>(p: PixelManipulator<T>): void {\n  pixelRatio.innerHTML = ''\n  if (!pixelCounterT.checked) return\n  pixelCounter.innerHTML = ''\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- all but last item in render info TODO: why\n  pixelRatio.style.background = `rgb(${renderer.renderInfo[p.defaultId].slice(0, -1).join(',')})`\n  const area = p.get_width() * p.get_height()\n  Object.keys(p.elements).forEach(idStr => {\n    const id = parseInt(idStr)\n    const { elements: { [id]: { name } }, pixelCounts: { [id]: count } } = p\n    if (typeof count === \"undefined\") return\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- all but last item in render info TODO: why\n    const color = 'rgb(' + renderer.renderInfo[id].slice(0, -1).join(',') + ')'\n    const MAX_PERCENT = 100\n    const percent = count / area * MAX_PERCENT\n\n    const li = document.createElement('li')\n    li.classList.add('list-group-item')\n    {\n      const icon = document.createElement('i')\n      icon.classList.add('fa-solid', 'fa-square-poll-horizontal')\n      icon.style.color = color\n      icon.setAttribute('aria-hidden', 'true')\n      li.appendChild(icon)\n    }\n    li.appendChild(document.createTextNode(` ${name}: `))\n    {\n      const span = document.createElement('span')\n      span.classList.add('badge', 'bg-primary')\n      span.innerText = `${count}`\n      {\n        const unit = document.createElement('span')\n        unit.classList.add('visually-hidden')\n        unit.innerText = ' pixels'\n        span.appendChild(unit)\n      }\n      li.appendChild(span)\n    }\n    li.appendChild(document.createTextNode(' '))\n    {\n      const span = document.createElement('span')\n      span.classList.add('badge', 'bg-secondary')\n      span.innerText = `${Math.round(percent)}%`\n      li.appendChild(span)\n    }\n    pixelCounter.appendChild(li)\n\n    const ratioE = document.createElement('div')\n    ratioE.classList.add('progress-bar')\n    ratioE.setAttribute('role', 'progressbar')\n    ratioE.style.backgroundColor = color\n    ratioE.style.width = `${percent}%`\n    ratioE.setAttribute('aria-valuenow', `${Math.round(percent)}`)\n    ratioE.setAttribute('aria-valuetext', `${Math.round(percent)}% full of ${name}`)\n    ratioE.setAttribute('aria-valuemin', '0')\n    ratioE.setAttribute('aria-valuemax', '100')\n    ratioE.title = `${name} : ${Math.round(percent)}%`\n    pixelRatio.appendChild(ratioE)\n  })\n}\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst canvas = document.getElementById('canvas') as HTMLCanvasElement\ncanvas.addEventListener('click', event => {\n  p.update()\n  oldZoom({\n    x: event.offsetX,\n    y: event.offsetY\n  })\n})\ncanvas.addEventListener('mousemove', updateSmallLines)\nconst renderer = new Ctx2dRenderer(canvas)\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default values\nconst p = new PixelManipulator(renderer, 1, 1)\n// The width and height are changed later\n\nfunction updateCustomizer(): void {\n  const elm = p.getElementByName(customSelect.value)\n  if (elm == null) return\n  const { renderAs, name } = elm\n  const DEFAULT_DOT = 255\n  const START_OF_COLOR = 0\n  const ALPHA_INDEX = 3\n  const HEX_VALUES_PER_DIGIT = 16\n  const DIGITS_PER_DOT = 2\n  customizeColor.value = `#${renderAs.slice(START_OF_COLOR, ALPHA_INDEX).map(dot =>\n    dot.toString(HEX_VALUES_PER_DIGIT).padStart(DIGITS_PER_DOT, '0')\n  ).join()}`\n  const alphaVal = (renderAs[ALPHA_INDEX] ?? DEFAULT_DOT).toString()\n  customizeColorAlpha.value = alphaVal// Raw alpha value\n  customizeColorAlphaText.innerText = alphaVal\n  customizeName.value = name\n}\nfunction changeColor(): void {\n  console.log('change color')\n  const num = p.nameToId(customSelect.value)\n  const NOT_FOUND = -1\n  if (num === NOT_FOUND) return\n  const matches = /#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})/i.exec(customizeColor.value)\n  if (matches == null) return\n  // The 0th is just the whole string\n  const RED_IDX = 1\n  const GREEN_IDX = 2\n  const BLUE_IDX = 3\n  const HEX_VALUES_PER_DIGIT = 16\n  p.modifyElement(num, {\n    renderAs: [\n      parseInt(matches[RED_IDX], HEX_VALUES_PER_DIGIT),\n      parseInt(matches[GREEN_IDX], HEX_VALUES_PER_DIGIT),\n      parseInt(matches[BLUE_IDX], HEX_VALUES_PER_DIGIT),\n      parseInt(customizeColorAlpha.value)\n    ]\n  })\n}\n/// Select the element to customize\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst customSelect = document.getElementById('customSelect') as HTMLSelectElement\ncustomSelect.addEventListener('change', () => { updateCustomizer(); })\n/// Change the color\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst customizeColor = document.getElementById('customizeColor') as HTMLInputElement\ncustomizeColor.addEventListener('change', changeColor)\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst customizeColorAlpha = document.getElementById('customColorAlpha') as HTMLInputElement\ncustomizeColorAlpha.addEventListener('change', changeColor)\n/// Name for the alpha field of the color\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst customizeColorAlphaText = document.getElementById('customColorAlphaText') as HTMLSpanElement\n/// Name of element\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst customizeName = document.getElementById('customizeName') as HTMLInputElement\ncustomizeName.addEventListener('change', function(this: HTMLInputElement) {\n  const { value: name } = this\n  console.log('change name', name)\n  const num = p.nameToId(customSelect.value)\n  const NOT_FOUND = -1\n  if (num > NOT_FOUND) {\n    p.modifyElement(num, { name })\n  }\n  updateCustomizer()\n})\n\nfunction zoomClick(e: MouseEvent): void {\n  const zoomPos = {\n    x: Math.floor(e.offsetX / zoomScaleFactor) +\n      Math.floor(zoomX - (zoomScaleFactor / ZOOM_SCALE_RAD_FACTOR)),\n    y: Math.floor(e.offsetY / zoomScaleFactor) +\n      Math.floor(zoomY - (zoomScaleFactor / ZOOM_SCALE_RAD_FACTOR))\n  }\n  const active: string = e.ctrlKey ?\n    ctrlSelect.value :\n    e.altKey ?\n      altSelect.value :\n      normalSelect.value\n  const pixel: string | number = p.confirmElm(zoomPos, active) ? p.defaultId : active\n  p.setPixel(zoomPos, pixel)\n  p.update()\n  oldZoom()\n}\n/// Zoomed in canvas\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst zoom = document.getElementById('zoom') as HTMLCanvasElement\nzoom.addEventListener('click', zoomClick)\nzoom.addEventListener('drag', zoomClick)\nzoom.addEventListener('mousemove', e => {\n  const x = Math.floor(e.offsetX / zoomScaleFactor)\n  const y = Math.floor(e.offsetY / zoomScaleFactor)\n  updateSmallLines({\n    offsetX: x + zoomX - (zoom.width / (ZOOM_SCALE_RAD_FACTOR * zoomScaleFactor)),\n    offsetY: y + zoomY - (zoom.width / (ZOOM_SCALE_RAD_FACTOR * zoomScaleFactor))\n  })\n})\n\n/** Converts the pause button into a play button */\nfunction convertPauseToPlay(): void {\n  playBtn.title = 'Play'\n  const playIcon = playBtn.querySelector('i')\n  playIcon?.classList.replace('fa-pause', 'fa-play')\n  playIcon?.setAttribute('alt', 'Play')\n}\n/** Converts the play button into a pause button */\nfunction convertPlayToPause(): void {\n  playBtn.title = 'Pause'\n  const playIcon = playBtn.querySelector('i')\n  playIcon?.classList.replace('fa-play', 'fa-pause')\n  playIcon?.setAttribute('alt', 'Pause')\n}\n/// Actions box button.\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst resetBtn = document.getElementById('reset') as HTMLButtonElement\nresetBtn.addEventListener('click', function() {\n  const canvasW = parseInt(widthE.value)\n  const canvasH = parseInt(heightE.value)\n  const zoomW = parseInt(zoomWidthElm.value)\n  const zoomH = parseInt(zoomHeightElm.value)\n  p.reset({ canvasW, canvasH })\n  // Reccomended to have a function here that sets the canvas size here (or earlier), due to how startup works.\n  zoom.width = (Number.isNaN(zoomW) ? zoom.width / zoomScaleFactor : zoomW) * zoomScaleFactor\n  zoom.height = (Number.isNaN(zoomH) ? zoom.height / zoomScaleFactor : zoomH) * zoomScaleFactor\n  convertPauseToPlay()\n  oneFrameAtATime.disabled = false\n  this.disabled = false\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- reset it to default\n  framecount = 0\n  p.iterate() // this will prevent new user confusion by showing the zoom box when the page loads\n})\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst playBtn = document.getElementById('play') as HTMLButtonElement\nplayBtn.addEventListener('click', () => {\n  if (p.mode === 'paused') {\n    p.play()\n    convertPlayToPause()\n    oneFrameAtATime.disabled = true\n  } else {\n    p.pause()\n    convertPauseToPlay()\n    oneFrameAtATime.disabled = false\n  }\n})\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst oneFrameAtATime = document.getElementById('oneFrameAtATime') as HTMLButtonElement\noneFrameAtATime.addEventListener('click', () => { p.iterate(); })\n\n/// Sizes for render canvas\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst widthE = document.getElementById('width') as HTMLInputElement\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst heightE = document.getElementById('height') as HTMLInputElement\n/// Sizes for zoom canvas\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst zoomHeightElm = document.getElementById('zoomHeightElm') as HTMLInputElement\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst zoomWidthElm = document.getElementById('zoomWidthElm') as HTMLInputElement\n\n/// Element placed on normal-click\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst normalSelect = document.getElementById('normalSelect') as HTMLSelectElement\n/// The button to fill canvas with normal elm of given percent\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst normalFill = document.getElementById('normalFill') as HTMLButtonElement\nnormalFill.addEventListener('click', () => {\n  const fillP = parseInt(normalFillP.value)\n  p.randomlyFill(\n    normalSelect.value,\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default fill percent\n    Number.isNaN(fillP) ? 15 : fillP\n  )\n  p.update() // needed after any changes are made\n  oldZoom()\n})\n/// The percent of normal elm to fill canvas with when normalFill clicked\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst normalFillP = document.getElementById('normalFillP') as HTMLInputElement\n\n/// Element placed on ctrl-click\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst ctrlSelect = document.getElementById('ctrlSelect') as HTMLSelectElement\n/// The button to fill canvas with ctrl elm of given percent\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst ctrlFill = document.getElementById('ctrlFill') as HTMLButtonElement\nctrlFill.addEventListener('click', () => {\n  const fillP = parseInt(ctrlFillP.value)\n  p.randomlyFill(\n    ctrlSelect.value,\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default fill percent\n    Number.isNaN(fillP) ? 15 : fillP\n  )\n  p.update()\n  oldZoom()\n})\n/// The percent of ctrl elm to fill canvas with when ctrlFill clicked\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst ctrlFillP = document.getElementById('ctrlFillP') as HTMLInputElement\n\n/// Element placed on alt-click\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst altSelect = document.getElementById('altSelect') as HTMLSelectElement\n/// The button to fill canvas with alt elm of given percent\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst altFill = document.getElementById('altFill') as HTMLButtonElement\naltFill.addEventListener('click', () => {\n  const fillP = parseInt(altFillP.value)\n  p.randomlyFill(\n    altSelect.value,\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default fill percent\n    Number.isNaN(fillP) ? 15 : fillP\n  )\n  p.update()\n  oldZoom()\n})\n/// The percent of alt elm to fill canvas with when altFill clicked\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst altFillP = document.getElementById('altFillP') as HTMLInputElement\n\n/// Show targeter lines\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst shtargeter = document.getElementById('shtargeter') as HTMLInputElement\nshtargeter.addEventListener('click', function() {\n  p.update()\n  oldZoom()\n})\n/// Hide focus box\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst shfocusbox = document.getElementById('shfocusbox') as HTMLInputElement\n/// Hide pixelCounter\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst pixelCounterT = document.getElementById('pixelCounterT') as HTMLInputElement\npixelCounterT.addEventListener('change', function() {\n  if (this.checked) {\n    pixelCounterBox.classList.remove('visually-hidden')\n  } else {\n    pixelCounterBox.classList.add('visually-hidden')\n  }\n})\n/// Version of backend\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst backendversion = document.getElementById('backendversion') as HTMLSpanElement\nbackendversion.innerText = version\n\n/// Text element for pixel totals\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst pixelCounter = document.getElementById('pixelCounter') as HTMLUListElement\n// eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion -- TODO: use a MVC tool instead (svelte, vue3, etc)\nconst pixelCounterBox = document.getElementById('pixelCounterBox') as HTMLUListElement\n\nconst elmdrops = document.getElementsByClassName('elmDrop')\n\nconst zoomctx = zoom.getContext('2d')\nif (zoomctx == null) {\n  throw new Error('rendering context not supported')\n}\n/**\n* How many times bigger should the zoom elm be as compared to the actual size found in the normal canvas?\n*/\nconst zoomScaleFactor = 20\noldZoom({ // zoom at the center\n  x: Math.floor(zoom.width / ZOOM_SCALE_RAD_FACTOR) -\n    (Math.floor(zoom.width / ZOOM_SCALE_RAD_FACTOR) * zoomScaleFactor),\n  y: Math.floor(zoom.height / ZOOM_SCALE_RAD_FACTOR) -\n    (Math.floor(zoom.height / ZOOM_SCALE_RAD_FACTOR) * zoomScaleFactor)\n})\n\n// eslint-disable-next-line complexity -- TODO: simplify\np.onElementModified = () => {\n  let { value: nsv } = normalSelect\n  let { value: csv } = ctrlSelect\n  let { value: asv } = altSelect\n  let { value: cusv } = customSelect\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- fallback if empty\n  if (nsv.length === 0) nsv = \"Conway's Game Of Life\"\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- fallback if empty\n  if (csv.length === 0) csv = 'Blocks'\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- fallback if empty\n  if (asv.length === 0) asv = 'Water'\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- fallback if empty\n  if (cusv.length === 0) cusv = \"Conway's Game Of Life\"\n  Array.from(elmdrops).forEach(htmlElm => {\n    htmlElm.innerHTML = ''\n    p.elements.forEach(elm => {\n      const newElement = document.createElement('option')\n      const { name } = elm\n      newElement.innerText = name\n      htmlElm.appendChild(newElement)\n    })\n  })\n  // Restore that selection, accounting for aliases\n  normalSelect.value = p.getElementByName(nsv)?.name ?? ''\n  ctrlSelect.value = p.getElementByName(csv)?.name ?? ''\n  altSelect.value = p.getElementByName(asv)?.name ?? ''\n  customSelect.value = p.getElementByName(cusv)?.name ?? ''\n  updateCustomizer()\n}\np.addMultipleElements({\n  Acid: {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [110, 162, 10, 255],\n    // current Pixel Matches\n    // eslint-disable-next-line complexity -- don't think it matters much\n    liveCell: ({ x, y, oldId }) => {\n      const NO_OF_RAND_VALS = 3\n      const randsAcid = new Uint8Array(NO_OF_RAND_VALS)\n      window.crypto.getRandomValues(randsAcid)\n      const [xRand, yRand, disapearRand] = Array.from(randsAcid)\n      const LEFT_ONE = -1\n      const UP_ONE = -1\n      const X_RANGE = 3\n      const Y_RANGE = 4\n      const newLoc = {\n        x: x + (xRand % X_RANGE) + LEFT_ONE,\n        y: y + yRand % Y_RANGE,\n        loop: false\n      }\n      const h = p.get_height()\n      while ((newLoc.y >= h || p.confirmElm(newLoc, oldId)) && newLoc.y + UP_ONE >= y) {\n        newLoc.y--\n      }\n      if (!p.confirmElm(newLoc, oldId)) {\n        p.setPixel({ x, y, loop: false }, p.defaultId)\n        p.setPixel(newLoc, oldId)\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- 1 in 100 chance\n      } else if (disapearRand % 100 === 0) {\n        p.setPixel(newLoc, p.defaultId)\n      }\n    }\n  },\n  Blocks: {\n    // does nothing\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [127, 127, 127, 255]\n  },\n  \"Brian's Brain (dying)\": {\n    // not quite white\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [254, 254, 254, 255],\n    // Cells that were in the dying state go into the off state\n    liveCell: loc => { p.setPixel(loc, p.defaultId); }\n  },\n  \"Brian's Brain (on)\": {\n    ...rules.lifelike(p, 'B2/S'), // same pattern as seeds\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [0, 0, 254, 255], // not quite blue\n    // All cells that were \"on\" go into the \"dying\" state, which is not counted as an \"on\" cell in the neighbor count, and prevents any cell from being born there.\n    liveCell: loc => { p.setPixel(loc, \"Brian's Brain (dying)\"); }\n  },\n  Seeds: {\n    ...rules.lifelike(p, 'B2/S'),\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [194, 178, 128]\n  },\n  \"Conway's Game Of Life\": {\n    ...rules.lifelike(p, 'B3/S23'), // born on 3, survives on 2 or 3\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [0, 255, 0, 255]\n  },\n  'Wireworld Conductor': {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [67, 75, 77, 255],\n    liveCell: loc => {\n      const num = p.nameToId('Wireworld Electricity')\n      const NOT_FOUND = -1\n      if (num === NOT_FOUND) return\n      const { x, y } = loc\n      const NEXT_FRAME = 1\n      const conductorNearbyTotal = p.mooreNearbyCounter({ x, y, frame: NEXT_FRAME }, num)\n      // copper stays as copper unless it has just one or two neighbours that are electron heads,in which case it becomes an electron head\n      // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- (see above)\n      const allowedNums = new Set([1, 2])\n      if (allowedNums.has(conductorNearbyTotal)) {\n        p.setPixel(loc, num)\n      }\n    }\n  },\n  'Wireworld Electricity': {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [148, 133, 0, 255],\n    liveCell: ({ x, y }) => { p.setPixel({ x, y, loop: false }, 'Wireworld FadingElectricity'); }\n  },\n  'Wireworld FadingElectricity': {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [74, 61, 0, 255],\n    liveCell: ({ x, y }) => { p.setPixel({ x, y, loop: false }, 'Wireworld Conductor'); }\n  },\n  Highlife: {\n    ...rules.lifelike(p, 'B36/S23'), // born on 3 or 6, survives on 2 or 3\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [0, 255, 128, 255]\n  },\n  \"No-loop Conway's Game Of Life\": {\n    ...rules.lifelike(p, 'B3/S23', false), // same as Conway's Game Of Life, but with a no-loop boolean\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [0, 150, 0, 255]\n  },\n  'Rule 30': {\n    ...rules.wolfram(p, 'Rule 30', false),\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [255, 0, 255, 255]\n  },\n  'Rule 90': {\n    ...rules.wolfram(p, 'Rule 90', false),\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [147, 112, 219, 255]\n  },\n  'Rule 110': {\n    ...rules.wolfram(p, 'Rule 110', false),\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [128, 0, 128, 255]\n  },\n  'Rule 184': {\n    ...rules.wolfram(p, 'Rule 184', false),\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [255, 51, 153, 255]\n  },\n  Water: {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- color\n    renderAs: [23, 103, 167, 255],\n    liveCell: ({ x, y, oldId }) => {\n      const NO_OF_RAND_VALS = 2\n      const randsWater = new Uint8Array(NO_OF_RAND_VALS)\n      window.crypto.getRandomValues(randsWater)\n      const [xRand, yRand] = Array.from(randsWater)\n      const X_RANGE = 3\n      const Y_RANGE = 4\n      const LEFT_ONE = -1\n      const UP_ONE = -1\n      const newLoc = {\n        x: x + (xRand % X_RANGE) + LEFT_ONE,\n        y: y + yRand % Y_RANGE,\n        loop: false\n      }\n      const h = p.get_height()\n      while ((newLoc.y >= h || !p.confirmElm(newLoc, p.defaultId)) && newLoc.y + UP_ONE >= y) {\n        newLoc.y--\n      }\n      if (p.confirmElm(newLoc, p.defaultId)) {\n        p.setPixel({ x, y, loop: false }, p.defaultId)\n        p.setPixel(newLoc, oldId)\n      }\n    }\n  }\n})\np.onIterate = () => beforeIterate()\np.onAfterIterate = () => {\n  oldZoom()\n  afterIterate(p)\n}\nlasttime = performance.now()\nresetBtn.click()\n// vim: tabstop=2 shiftwidth=2 expandtab\n","\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"rules\", function () { return $1b908a5c4ca6a102$export$354076178bdef094; });\n$parcel$export(module.exports, \"PixelManipulator\", function () { return $1b908a5c4ca6a102$export$b2b53dd543b26a90; });\n$parcel$export(module.exports, \"licence\", function () { return $1b908a5c4ca6a102$export$b3b7c4718d5d9517; });\n$parcel$export(module.exports, \"version\", function () { return $1b908a5c4ca6a102$export$83d89fbfd8236492; });\n$parcel$export(module.exports, \"neighborhoods\", function () { return $37714ef34a3d49de$exports; });\n/** This is a cellular automata JavaScript library called PixelManipulator. For\n *  information about how to use this script, see\n *  https://github.com/Lazerbeak12345/pixelmanipulator\n *\n *  Copyright (C) 2018-2024  Nathan Fritzler\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see http://www.gnu.org/licenses.\n */ var $9c5137925c0f6dd6$exports = {};\n$9c5137925c0f6dd6$exports = JSON.parse(\"{\\\"name\\\":\\\"pixelmanipulator\\\",\\\"version\\\":\\\"5.5.10\\\",\\\"description\\\":\\\"A super powerful Typescript library for cellular automation.\\\",\\\"main\\\":\\\"dist/main.js\\\",\\\"browser\\\":\\\"dist/browser.js\\\",\\\"module\\\":\\\"dist/module.js\\\",\\\"types\\\":\\\"dist/types.d.ts\\\",\\\"unpkg\\\":\\\"dist/bundle.js\\\",\\\"targets\\\":{\\\"main\\\":{\\\"source\\\":\\\"./src/pixelmanipulator.ts\\\"},\\\"module\\\":{\\\"source\\\":\\\"src/pixelmanipulator.ts\\\"},\\\"browser\\\":{\\\"source\\\":\\\"src/pixelmanipulator.ts\\\",\\\"outputFormat\\\":\\\"commonjs\\\"},\\\"types\\\":{\\\"source\\\":\\\"src/pixelmanipulator.ts\\\"}},\\\"repository\\\":\\\"git@github.com:Lazerbeak12345/pixelmanipulator.git\\\",\\\"homepage\\\":\\\"https://lazerbeak12345.github.io/pixelmanipulator\\\",\\\"author\\\":\\\"Nathan Fritzler <nfblaster@live.com>\\\",\\\"license\\\":\\\"GPL-3.0-or-later\\\",\\\"browserslist\\\":\\\"defaults\\\",\\\"keywords\\\":[\\\"cellular automata\\\",\\\"game of life\\\",\\\"highlife\\\",\\\"brians-brain\\\",\\\"wireworld\\\",\\\"wolfram\\\",\\\"rule-30\\\",\\\"rule-90\\\",\\\"rule-110\\\",\\\"rule-184\\\",\\\"conway\\\",\\\"pixel\\\",\\\"game\\\",\\\"life\\\",\\\"cellular\\\",\\\"automata\\\",\\\"automaton\\\",\\\"gameoflife\\\",\\\"gol\\\",\\\"brian's-brain\\\",\\\"particle\\\",\\\"simulation\\\",\\\"engine\\\",\\\"grid\\\",\\\"canvas\\\"],\\\"devDependencies\\\":{\\\"@fast-check/ava\\\":\\\"catalog:\\\",\\\"@parcel/packager-ts\\\":\\\"catalog:\\\",\\\"@parcel/transformer-typescript-types\\\":\\\"catalog:\\\",\\\"@rollup/plugin-commonjs\\\":\\\"catalog:\\\",\\\"@types/eslint\\\":\\\"catalog:\\\",\\\"@types/node\\\":\\\"catalog:\\\",\\\"@typescript-eslint/eslint-plugin\\\":\\\"catalog:\\\",\\\"@typescript-eslint/parser\\\":\\\"catalog:\\\",\\\"ava\\\":\\\"catalog:\\\",\\\"c8\\\":\\\"catalog:\\\",\\\"eslint\\\":\\\"catalog:\\\",\\\"eslint-config-love\\\":\\\"catalog:\\\",\\\"eslint-plugin-node\\\":\\\"catalog:\\\",\\\"eslint-plugin-promise\\\":\\\"catalog:\\\",\\\"eslint-plugin-tsdoc\\\":\\\"catalog:\\\",\\\"fast-check\\\":\\\"catalog:\\\",\\\"gh-pages\\\":\\\"^6.2.0\\\",\\\"parcel\\\":\\\"catalog:\\\",\\\"rollup\\\":\\\"catalog:\\\",\\\"typedoc\\\":\\\"catalog:\\\",\\\"typedoc-plugin-mdn-links\\\":\\\"catalog:\\\",\\\"typescript\\\":\\\"catalog:\\\"},\\\"scripts\\\":{\\\"test\\\":\\\"pnpm run test:types && pnpm run lint && pnpm run test:test\\\",\\\"test:types\\\":\\\"rm -r build; tsc --outDir build\\\",\\\"lint\\\":\\\"eslint . --ignore-pattern dist --ignore-pattern docs --ignore-pattern coverage --ignore-pattern build\\\",\\\"test:test\\\":\\\"c8 -r text -r text-summary -r lcov -r html --all --include build/src ava\\\",\\\"build\\\":\\\"pnpm t && pnpm run build:docs && pnpm run build:parcel && pnpm build:readme && pnpm run build:bundle && pnpm run build:prepare-ci\\\",\\\"build:docs\\\":\\\"typedoc --name PixelManipulator --out docs --includeVersion src/*.ts\\\",\\\"build:parcel\\\":\\\"parcel build\\\",\\\"build:readme\\\":\\\"cp ../../README.md .\\\",\\\"build:bundle\\\":\\\"rollup -c\\\",\\\"build:prepare-ci\\\":\\\"cp -r ../../.circleci docs && cp -r ../../media/* docs\\\",\\\"watch\\\":\\\"parcel watch --no-hmr\\\",\\\"updatedemo\\\":\\\"gh-pages -d docs -m \\\\\\\"Update $npm_package_version\\\\\\\" -tf\\\"},\\\"ava\\\":{\\\"timeout\\\":\\\"20s\\\"},\\\"packageManager\\\":\\\"pnpm@9.15.1\\\"}\");\n\n\nvar $2fc64e2ac0a12983$exports = {};\n\n$parcel$export($2fc64e2ac0a12983$exports, \"location2Index\", function () { return $2fc64e2ac0a12983$export$b6f174f59b684b34; });\n$parcel$export($2fc64e2ac0a12983$exports, \"transposeLocations\", function () { return $2fc64e2ac0a12983$export$e27e751a5b1946e3; });\n$parcel$export($2fc64e2ac0a12983$exports, \"Renderer\", function () { return $2fc64e2ac0a12983$export$88530751e3977073; });\n$parcel$export($2fc64e2ac0a12983$exports, \"Ctx2dRenderer\", function () { return $2fc64e2ac0a12983$export$95ab700cf10a487; });\n$parcel$export($2fc64e2ac0a12983$exports, \"StringRenderer\", function () { return $2fc64e2ac0a12983$export$446eec980ee5a157; });\n$parcel$export($2fc64e2ac0a12983$exports, \"SplitRenderer\", function () { return $2fc64e2ac0a12983$export$5482513c57691790; });\n/** Various rendering targets\n *\n *  Copyright (C) 2018-2024  Nathan Fritzler\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see http://www.gnu.org/licenses/\n */ /** The location of a pixel */ function $2fc64e2ac0a12983$export$b6f174f59b684b34({ x: x, y: y }, width) {\n    return width * y + x;\n}\nfunction $2fc64e2ac0a12983$export$e27e751a5b1946e3(locs, offset) {\n    const { x: x, y: y, frame: frame, loop: loop } = offset;\n    return locs.map((loc)=>{\n        const newLoc = {\n            x: loc.x + x,\n            y: loc.y + y,\n            frame: loc.frame ?? frame,\n            loop: loc.loop ?? loop\n        };\n        if (newLoc.frame == null) delete newLoc.frame;\n        if (newLoc.loop == null) delete newLoc.loop;\n        return newLoc;\n    });\n}\nclass $2fc64e2ac0a12983$export$88530751e3977073 {\n    /** Intentionally overridable, called when an element is modified.\n  * @param id - The id of the element to modify.\n  * @param newRenderAs - The new {@link pixelmanipulator.ElementData.renderAs} info.\n  * @returns The value passed upstream to be stored as the actual renderAs info,\n  * allowing for sanitation in this function, or one overriding it.\n  */ modifyElement(id, newRenderAs) {\n        if (this.renderInfo.length === id) this.renderInfo.push(newRenderAs);\n        else if (this.renderInfo.length > id) this.renderInfo[id] = newRenderAs;\n        else throw new Error('Renderer received elements out of order!');\n        return newRenderAs;\n    }\n    /** @param value - The new width of the canvas */ set_width(value) {\n        this._width = value;\n    }\n    /** @returns the width of the canvas */ get_width() {\n        return this._width;\n    }\n    /** @param value - The new height of the canvas */ set_height(value) {\n        this._height = value;\n    }\n    /** @returns the height of the canvas */ get_height() {\n        return this._height;\n    }\n    constructor(){\n        /** Ordered by ID, the {@link pixelmanipulator.ElementData.renderAs} info for each element. */ this.renderInfo = [];\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n        this._width = 1;\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n        this._height = 1;\n    }\n}\nconst $2fc64e2ac0a12983$var$NUMBER_OF_COLORS = 4;\nclass $2fc64e2ac0a12983$export$95ab700cf10a487 extends $2fc64e2ac0a12983$export$88530751e3977073 {\n    /** @param canvas - The canvas to render on, and to adjust the size of */ constructor(canvas){\n        super(), /** Default color is solid black */ this.defaultRenderAs = [\n            0,\n            0,\n            0,\n            255\n        ] // eslint-disable-line @typescript-eslint/no-magic-numbers -- top-left corner\n        ;\n        this.canvas = canvas;\n        const ctx = canvas.getContext('2d');\n        if (ctx == null) throw new Error('CanvasRenderingContext2D not supported in enviroment');\n        this.ctx = ctx;\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top-left corner\n        this.imageData = this.ctx.getImageData(0, 0, this.get_width(), this.get_height());\n    }\n    /** In addition to calling {@link Renderer.modifyElement}, this leftpads colors\n  * with `255` and checks for dupicates.\n  * @param id - Id of element\n  * @param newRenderAs - The proposed color of the element.\n  * @returns the actual color of the element. Always 4 long.\n  */ modifyElement(id, newRenderAs) {\n        // allows for arrays that are too small\n        while(newRenderAs.length < $2fc64e2ac0a12983$var$NUMBER_OF_COLORS)// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default values to 255\n        newRenderAs.push(255);\n        const NOT_FOUND = -1;\n        const indexOfColor = this.renderInfo.indexOf(newRenderAs);\n        if (!(indexOfColor === id || indexOfColor === NOT_FOUND)) throw new Error(`The color ${JSON.stringify(newRenderAs)} is already in use!`);\n        return super.modifyElement(id, newRenderAs);\n    }\n    /** @param loc - location of the pixel to render. Ignores {@link Location.frame} and {@link Location.loop}\n  * @param id - The id of the pixel to render.\n  */ renderPixel(loc, id) {\n        const { renderInfo: { [id]: color } } = this;\n        if (typeof color === \"undefined\") throw new Error(`Invalid ID ${id}`);\n        // allows for arrays that are too small\n        // TODO: unify this code (duplicate in above function)\n        while(color.length < $2fc64e2ac0a12983$var$NUMBER_OF_COLORS)// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default values to 255\n        color.push(255);\n        const w = this.get_width();\n        const pixelOffset = $2fc64e2ac0a12983$export$b6f174f59b684b34(loc, w) * $2fc64e2ac0a12983$var$NUMBER_OF_COLORS;\n        for(let i = 0; i < $2fc64e2ac0a12983$var$NUMBER_OF_COLORS; ++i)// eslint-disable-next-line @typescript-eslint/prefer-destructuring -- destructuring is more messy here\n        this.imageData.data[pixelOffset + i] = color[i];\n    }\n    reset() {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top left corner\n        this.imageData = this.ctx.getImageData(0, 0, this.get_width(), this.get_height());\n        this.ctx.imageSmoothingEnabled = false;\n    }\n    update() {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top left corner\n        this.ctx.putImageData(this.imageData, 0, 0);\n    }\n    set_width(value) {\n        this.canvas.width = value;\n        super.set_width(value);\n    }\n    set_height(value) {\n        this.canvas.height = value;\n        super.set_height(value);\n    }\n}\nclass $2fc64e2ac0a12983$export$446eec980ee5a157 extends $2fc64e2ac0a12983$export$88530751e3977073 {\n    /** @param callback - A function called on {@link StringRenderer.update}. Passed a\n  * string with the renderable state of the {@link pixelmanipulator.PixelManipulator} */ constructor(callback){\n        super(), this.defaultRenderAs = ' ', this._chars = [];\n        this._callback = callback;\n    }\n    /** @param newRenderAs - The proposed character to use. Must be 1 char long and unique */ modifyElement(id, newRenderAs) {\n        if (this.renderInfo.includes(newRenderAs)) throw new Error(`Element ${id} must have a unique renderAs`);\n        return super.modifyElement(id, newRenderAs);\n    }\n    reset() {\n        const w = this.get_width();\n        const h = this.get_height();\n        this._chars = new Array(h).fill([]).map(()=>new Array(w).fill(this.defaultRenderAs));\n    }\n    /** @param x - X location of pixel\n  * @param y - y location of pixel\n  * @param id - The id of the pixel\n  */ renderPixel({ x: x, y: y }, id) {\n        const { renderInfo: { [id]: char } } = this;\n        this._chars[y][x] = char;\n    }\n    update() {\n        this._callback(this._chars.map((l)=>l.join('')).join('\\n'));\n    }\n}\nclass $2fc64e2ac0a12983$export$5482513c57691790 extends $2fc64e2ac0a12983$export$88530751e3977073 {\n    constructor(a, b){\n        super();\n        this.a = a;\n        this.b = b;\n        this.defaultRenderAs = {\n            a: a.defaultRenderAs,\n            b: b.defaultRenderAs\n        };\n    }\n    renderPixel(loc, id) {\n        this.a.renderPixel(loc, id);\n        this.b.renderPixel(loc, id);\n    }\n    reset() {\n        this.a.reset();\n        this.b.reset();\n    }\n    update() {\n        this.a.update();\n        this.b.update();\n    }\n    modifyElement(id, { a: a, b: b }) {\n        return super.modifyElement(id, {\n            a: this.a.modifyElement(id, a),\n            b: this.b.modifyElement(id, b)\n        });\n    }\n} // This is called a \"modeline\". It's a (n)vi(m)|ex thing.\n // vi: tabstop=2 shiftwidth=2 expandtab\n\n\nvar $37714ef34a3d49de$exports = {};\n\n$parcel$export($37714ef34a3d49de$exports, \"rect\", function () { return $37714ef34a3d49de$export$4b409e53cf4df6e6; });\n$parcel$export($37714ef34a3d49de$exports, \"wolfram\", function () { return $37714ef34a3d49de$export$570c5686df7a3a74; });\n$parcel$export($37714ef34a3d49de$exports, \"moore\", function () { return $37714ef34a3d49de$export$dfd711383a0d1c21; });\n$parcel$export($37714ef34a3d49de$exports, \"vonNeumann\", function () { return $37714ef34a3d49de$export$6d4d43aa0229d23f; });\n$parcel$export($37714ef34a3d49de$exports, \"euclidean\", function () { return $37714ef34a3d49de$export$d7ea5b7fe202bfa1; });\n/** Several functions to generate lists of relative positions\n *  for a neighborhood hitbox.\n *\n *  Copyright (C) 2018-2024  Nathan Fritzler\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see http://www.gnu.org/licenses/\n */ function $37714ef34a3d49de$export$4b409e53cf4df6e6(topLeft, bottomRight) {\n    const output = [];\n    for(let { x: x } = topLeft; x <= bottomRight.x; x++)for(let { y: y } = topLeft; y <= bottomRight.y; y++)output.push({\n        x: x,\n        y: y\n    });\n    return output;\n}\nfunction $37714ef34a3d49de$export$570c5686df7a3a74(radius, y, includeSelf) {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n    radius ??= 1;\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n    y ??= -1;\n    const output = [];\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- reverse iterated\n    for(let i = radius; i > 0; i--)output.push({\n        x: -i,\n        y: y\n    });\n    if (includeSelf == null || includeSelf) // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- center\n    output.push({\n        x: 0,\n        y: y\n    });\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- reverse iterated\n    for(let i = radius; i > 0; i--)output.push({\n        x: i,\n        y: y\n    });\n    return output;\n}\nfunction $37714ef34a3d49de$export$dfd711383a0d1c21(radius, includeSelf) {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n    radius ??= 1;\n    includeSelf ??= false;\n    // Note: no need to calculate the Chebyshev distance. All pixels in this\n    // range are \"magically\" within.\n    const r = $37714ef34a3d49de$export$4b409e53cf4df6e6({\n        x: -radius,\n        y: -radius\n    }, {\n        x: radius,\n        y: radius\n    });\n    if (includeSelf) return r;\n    return r.filter(({ x: x, y: y })=>!(x === 0 && y === 0)) // eslint-disable-line @typescript-eslint/no-magic-numbers -- center is zeros\n    ;\n// And to think that this used to be hard... Perhaps they had a different\n// goal? Or just weren't using higher-order algorithims?\n}\nfunction $37714ef34a3d49de$export$6d4d43aa0229d23f(radius, includeSelf) {\n    // A Von Neumann neighborhood of a given distance always fits inside of a\n    // Moore neighborhood of the same. (This is a bit brute-force)\n    const DEFAULT_RADIUS = 1;\n    radius ??= DEFAULT_RADIUS;\n    return $37714ef34a3d49de$export$dfd711383a0d1c21(radius, includeSelf).filter(({ x: x, y: y })=>Math.abs(x) + Math.abs(y) <= radius) // Taxicab distance\n    ;\n}\nfunction $37714ef34a3d49de$export$d7ea5b7fe202bfa1(radius, includeSelf) {\n    // A circle of a given diameter always fits inside of a square of the same\n    // side-length. (This is a bit brute-force)\n    const DEFAULT_RADIUS = 1;\n    return $37714ef34a3d49de$export$dfd711383a0d1c21(radius, includeSelf).filter(({ x: x, y: y })=>// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- pythagorean theorum\n        Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) <= (radius ?? DEFAULT_RADIUS)) // Euclidean distance\n    ;\n} // TODO https://www.npmjs.com/package/compute-minkowski-distance ?\n // TODO Non-Euclidean distance algorithim?\n // This is called a \"modeline\". It's a (n)vi(m)|ex thing.\n // vi: tabstop=2 shiftwidth=2 expandtab\n\n\nfunction $1b908a5c4ca6a102$var$startAnimation(callback) {\n    if (typeof requestAnimationFrame === 'undefined') {\n        const SMALLEST_INTERVAL_POSSIBLE = 1;\n        return setInterval(callback, SMALLEST_INTERVAL_POSSIBLE);\n    } else return requestAnimationFrame(callback);\n}\nfunction $1b908a5c4ca6a102$var$resumeAnimation(num, callback) {\n    if (typeof requestAnimationFrame === 'undefined') return num;\n    else return requestAnimationFrame(callback);\n}\nfunction $1b908a5c4ca6a102$var$cancelAnimation(num) {\n    if (typeof cancelAnimationFrame === 'undefined') clearInterval(num);\n    else if (typeof num === \"number\") cancelAnimationFrame(num);\n}\nfunction $1b908a5c4ca6a102$var$boolToNumber(bool) {\n    const TRUE = 1;\n    const FALSE = 0;\n    return bool ? TRUE : FALSE;\n}\nfunction $1b908a5c4ca6a102$var$_convertNumListToBf(nl) {\n    // While I used to use string with each digit in it, I found that since\n    // there are 0-8, I could use a 9bit field (remember: off by one)\n    let out = 0;\n    for (const item of nl)// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- largest binary digit\n    out |= 1 << parseInt(item);\n    return out;\n}\nconst $1b908a5c4ca6a102$export$354076178bdef094 = {\n    /** Generates elements like conway's game of life.\n  * @param p - `lifelike` needs to be able to call {@link PixelManipulator.mooreNearbyCounter}\n  * @param pattern - The B/S syntax indicator of on how many cells of the same\n  * type in the moore radius around each pixel should survive, and on how many\n  * should be born.\n  * @param loop - Should this loop around screen edges? (Passed to {@link renderers.Location.loop})\n  */ lifelike: function(p, pattern, loop) {\n        const numbers = pattern.split(/\\/?[a-z]/gi) // \"B\",born,die\n        ;\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- after the pattern\n        const bfdie = $1b908a5c4ca6a102$var$_convertNumListToBf(numbers[2]);\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- before the pattern\n        const bflive = $1b908a5c4ca6a102$var$_convertNumListToBf(numbers[1]);\n        const SMALLEST_BINARY_DIGIT = 1;\n        const PREV_FRAME = 1;\n        const NO_MATCH = 0;\n        return {\n            madeWithRule: true,\n            hitbox: $37714ef34a3d49de$export$dfd711383a0d1c21(),\n            liveCell: function llive({ x: x, y: y, thisId: thisId }) {\n                // if any match (of how many moore are nearby) is found, it dies\n                if ((bfdie & SMALLEST_BINARY_DIGIT << p.mooreNearbyCounter({\n                    x: x,\n                    y: y,\n                    frame: PREV_FRAME,\n                    loop: loop\n                }, thisId)) === NO_MATCH) p.setPixel({\n                    x: x,\n                    y: y\n                }, p.defaultId);\n            },\n            deadCell: function ldead({ x: x, y: y, thisId: thisId }) {\n                // if any match (of how many moore are nearby) is found, it lives\n                if ((bflive & SMALLEST_BINARY_DIGIT << p.mooreNearbyCounter({\n                    x: x,\n                    y: y,\n                    frame: PREV_FRAME,\n                    loop: loop\n                }, thisId)) !== NO_MATCH) p.setPixel({\n                    x: x,\n                    y: y\n                }, thisId);\n            }\n        };\n    },\n    /** Generates fundamental cellular automata\n  * @param p - `wolfram` needs to be able to call {@link PixelManipulator.wolframNearbyCounter}\n  * @param pattern - The Rule num syntax, where the 8-bit number is translated\n  * into a binary list, each where the inverted 3-binary-digit index represents\n  * the state of cells in the row above. On a match, the cell becomes the state\n  * specified in the initial 8-bit number.\n  * @param loop - Should this loop around screen edges? (Passed to {@link PixelManipulator.wolframNearby})\n  */ wolfram: function(p, pattern, loop) {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- after the pattern\n        const binStates = parseInt(pattern.split(/Rule /gi)[1]);\n        const FIRST_ROW = 0;\n        const PREV_FRAME = 1;\n        return {\n            madeWithRule: true,\n            // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default values\n            hitbox: $37714ef34a3d49de$export$570c5686df7a3a74(1, 1),\n            // The current state is used as the index in the binstates, as binstates is a bit array of every state\n            liveCell: function wlive({ x: x, y: y, thisId: thisId }) {\n                if (y === FIRST_ROW) return;\n                if (!p.wolframNewState({\n                    x: x,\n                    y: y,\n                    frame: PREV_FRAME,\n                    loop: loop\n                }, binStates, thisId)) p.setPixel({\n                    x: x,\n                    y: y,\n                    loop: loop\n                }, p.defaultId);\n            },\n            deadCell: function wdead({ x: x, y: y, thisId: thisId }) {\n                if (p.wolframNewState({\n                    x: x,\n                    y: y,\n                    frame: PREV_FRAME,\n                    loop: loop\n                }, binStates, thisId)) p.setPixel({\n                    x: x,\n                    y: y,\n                    loop: loop\n                }, thisId);\n            }\n        };\n    }\n};\nclass $1b908a5c4ca6a102$export$b2b53dd543b26a90 {\n    /**\n  * @param renderer - The target to render things to.\n  * @param width - How wide should the initial target be?\n  * @param height - How tall should the initial target be?\n  */ constructor(renderer, width, height){\n        /**\n  * This is the number that indicates what animation frame the iterate function\n  * is being called with.\n  *\n  * You can use this to mannually stop the iterations like so:\n  * `cancelAnimationFrame(this.loopint)` (not reccommended)\n  */ this.loopint = 0 // eslint-disable-line @typescript-eslint/no-magic-numbers -- default value\n        ;\n        /**\n  * A low-level listing of the availiable elements.\n  *\n  * Format is much like the argument to\n  * {@link PixelManipulator.addMultipleElements}, but is not sanitized.\n  */ this.elements = [];\n        /**\n  * A mapping from old names for elements to new names for elements.\n  *\n  * Allows a user to modify the name of an element at runtime.\n  */ this.nameAliases = new Map();\n        /**\n  * A string indicating weather it is currently animating or not.\n  *\n  * It is `\"playing\"` if it is currently animating, or `\"paused\"` if not\n  * currently animating.\n  *\n  * This has been around since early version 0, and once was the `innerText`\n  * value of a pause/play button!\n  */ this.mode = 'paused';\n        /** Called before {@link PixelManipulator.iterate} does its work.\n  * @returns false to postposne iteration.\n  */ this.onIterate = ()=>undefined // eslint-disable-line @typescript-eslint/class-methods-use-this -- event handler\n        ;\n        /** Called after {@link PixelManipulator.iterate} does its work. */ this.onAfterIterate = ()=>undefined // eslint-disable-line @typescript-eslint/class-methods-use-this -- event handler\n        ;\n        /** Gets called after a call to {@link PixelManipulator.modifyElement}. The ID is\n  * passed as the only argument.\n  * @param id - The element that was modified.\n  */ this.onElementModified = ()=>undefined // eslint-disable-line @typescript-eslint/class-methods-use-this -- event handler\n        ;\n        /** Number of pixels per element in the last frame */ this.pixelCounts = {};\n        /**\n  * A List of {@link Uint32Array}s each the length of width times height of the\n  * canvas. Frame 0 is the new frame, frame one is the prior, etc. Each item\n  * holds the element id of each element on screen, from left to right, top to\n  * bottom.\n  */ this.frames = [\n            new Uint32Array(0),\n            new Uint32Array(0)\n        ] // eslint-disable-line @typescript-eslint/no-magic-numbers -- default values\n        ;\n        if (typeof window !== 'undefined') console.log($1b908a5c4ca6a102$export$b3b7c4718d5d9517);\n        this.renderer = renderer;\n        this.defaultId = this.addElement({\n            renderAs: this.renderer.defaultRenderAs,\n            hitbox: [],\n            name: 'blank'\n        });\n        this.reset({\n            canvasW: width,\n            canvasH: height\n        });\n    }\n    /** @returns the width of the canvas */ get_width() {\n        return this.renderer.get_width();\n    }\n    /** @param value - The new width of the canvas */ set_width(value) {\n        this.renderer.set_width(value);\n    }\n    /** @returns the height of the canvas */ get_height() {\n        return this.renderer.get_height();\n    }\n    /** @param value - The new height of the canvas */ set_height(value) {\n        this.renderer.set_height(value);\n    }\n    /** fills the screen with value, at an optional given percent\n  * @param value - The element to put on the screen\n  * @param pr - The percent as a number from 1 to 100, defaulting at 15\n  */ randomlyFill(value, pr) {\n        const DEFAULT_PERCENT = 15;\n        const MAX_PERCENT = 100;\n        pr ??= DEFAULT_PERCENT;\n        const w = this.get_width();\n        const h = this.get_height();\n        for(let x = 0; x < w; x++){\n            for(let y = 0; y < h; y++)if (Math.random() * MAX_PERCENT < pr) this.setPixel({\n                x: x,\n                y: y\n            }, value);\n        }\n    }\n    /** Adds multiple elements.\n  *\n  * @param elements - Index is the element name, value is the element data (and\n  * does not require the name). Value is passed to\n  * {@link PixelManipulator.addElement}\n  */ addMultipleElements(elements) {\n        Object.keys(elements).forEach((name)=>this.addElement({\n                name: name,\n                ...elements[name]\n            }));\n    }\n    /** Add an element with the given element data\n  * @param data - The details about the element.\n  * @returns The generated {@link PixelManipulator.elements} index\n  */ addElement(data) {\n        const { name: name, renderAs: renderAs } = data;\n        if (typeof name === 'undefined') throw new Error('Name is required for element');\n        if (typeof data.name === 'undefined') data.name = name;\n        // @ts-expect-error renderAs might be undefined here, but it's fixed in the call to this.modifyElement below\n        this.elements.push({\n            name: name,\n            renderAs: renderAs\n        });\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- last item in list\n        this.modifyElement(this.elements.length - 1, data);\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- last item in list (might not be the same as before modifyElement was called)\n        return this.elements.length - 1;\n    }\n    /**\n  * @param id - How to identify what element to modify.\n  * @param data - Values to apply to the pre-existing element.\n  *\n  * Automatically calls {@link PixelManipulator.aliasElements} if\n  * {@link ElementDataUnknown.name} is present in `data`\n  */ modifyElement(id, data) {\n        const oldData = this.elements[id];\n        if (typeof data.name !== 'undefined' && data.name !== oldData.name) this.aliasElements(oldData.name, data.name);\n        const newData = {\n            hitbox: $37714ef34a3d49de$export$dfd711383a0d1c21(),\n            ...oldData,\n            ...data\n        };\n        newData.renderAs = this.renderer.modifyElement(id, newData.renderAs);\n        this.elements[id] = newData;\n        this.onElementModified(id);\n    }\n    /**\n  * @param oldName - The old {@link ElementData.name}\n  * @param newName - The new {@link ElementData.name}\n  *\n  * Adds the name to {@link PixelManipulator.nameAliases}, and ensures no alias\n  * loops are present.\n  */ aliasElements(oldName, newName) {\n        // Intentionally ignores aliases when checking for duplicate name.\n        if (this.elements.find((elm)=>elm.name === newName) != null) throw new Error('The name ' + newName + ' is already in use!');\n        this.nameAliases.delete(newName);\n        this.nameAliases.set(oldName, newName);\n    }\n    /** Respecting aliases, convert an element name into its number.\n  * @param name - name of element\n  * @returns The number of the element\n  */ nameToId(name) {\n        let unaliased = name;\n        while(typeof unaliased !== 'undefined'){\n            name = unaliased;\n            unaliased = this.nameAliases.get(name);\n        }\n        return this.elements.findIndex((elm)=>elm.name === name);\n    }\n    /**\n  * @param name - Name of the (possibly aliased) element.\n  * @returns The element from {@link PixelManipulator.elements}, respecting\n  * aliases in {@link PixelManipulator.nameAliases}, or {@link undefined} if not found.\n  */ getElementByName(name) {\n        return this.elements[this.nameToId(name)];\n    }\n    /**\n  * @param loc - Location of the element.\n  * @returns Name of element at passed-in location. See {@link ElementData.name}\n  */ whatIs(loc) {\n        return this.elements[this.getPixelId(loc)].name;\n    }\n    /** Start iterations on all of the elements on the canvas.\n  * Sets {@link PixelManipulator.mode} to `\"playing\"`, and requests a new animation\n  * frame, saving it in {@link PixelManipulator.loopint}.\n  *\n  * @param canvasSizes - If {@link PixelManipulator.mode} is already `\"playing\"` then\n  * canvasSizes is passed to {@link PixelManipulator.reset}. Otherwise reset is not\n  * called.\n  */ play(canvasSizes) {\n        if (this.mode === 'playing') this.reset(canvasSizes);\n        this.mode = 'playing';\n        this.loopint = $1b908a5c4ca6a102$var$startAnimation(()=>{\n            this.iterate();\n        });\n    }\n    /** Reset, resize and initialize the canvas(es).\n  * Calls {@link PixelManipulator.pause} then\n  * {@link PixelManipulator.update}. Resets all internal state, excluding the\n  * element definitions.\n  *\n  * @param canvasSizes - Allows one to change the size of the canvases during\n  * the reset.\n  */ reset(canvasSizes) {\n        const CURRENT_FRAME = 0;\n        const NEXT_FRAME = 1;\n        const MAX_PERCENT = 100;\n        if (typeof canvasSizes === 'undefined') canvasSizes = {};\n        this.pause();\n        const w = canvasSizes.canvasW ?? this.get_width();\n        const h = canvasSizes.canvasH ?? this.get_height();\n        this.set_width(w);\n        this.set_height(h);\n        this.frames[CURRENT_FRAME] = new Uint32Array(w * h);\n        this.frames[NEXT_FRAME] = new Uint32Array(w * h);\n        this.renderer.reset();\n        this.randomlyFill(this.defaultId, MAX_PERCENT);\n        this.update();\n    }\n    /** pause canvas iterations\n  * Sets {@link PixelManipulator.mode} to `\"paused\"` and cancels the animation frame\n  * referenced in {@link PixelManipulator.loopint}\n  */ pause() {\n        this.mode = 'paused';\n        $1b908a5c4ca6a102$var$cancelAnimation(this.loopint);\n    }\n    /**\n  * @param loc - Location of the pixel (could be out of bounds).\n  * @returns null if out-of-bounds when loop setting is false, or the location (loop set to false).\n  */ locationBoundsCheck(loc) {\n        const LEFTMOST = 0;\n        const TOPMOST = 0;\n        const w = this.get_width();\n        const h = this.get_height();\n        const overflowLeft = loc.x < LEFTMOST;\n        const overflowRight = loc.x >= w;\n        const overflowTop = loc.y < TOPMOST;\n        const overflowBottom = loc.y >= h;\n        if (loc.loop ?? true) {\n            loc.x %= w;\n            loc.y %= h;\n            if (overflowLeft) loc.x += w;\n            if (overflowTop) loc.y += h;\n            loc.loop = false;\n        } else if (overflowLeft || overflowRight || overflowTop || overflowBottom) return null;\n        return loc;\n    }\n    /**\n  * @param loc - Location of the pixel\n  * @returns the element id at a given location\n  */ getPixelId(loc) {\n        const fixedLoc = this.locationBoundsCheck(loc);\n        if (fixedLoc == null) return this.defaultId;\n        const w = this.get_width();\n        const CURRENT_FRAME = 0 // TODO: dedupe this const\n        ;\n        return this.frames[fixedLoc.frame ?? CURRENT_FRAME][$2fc64e2ac0a12983$export$b6f174f59b684b34(fixedLoc, w)];\n    }\n    /**\n  * Applies any changes made with {@link renderers.Renderer.renderPixel} on {@link PixelManipulator.renderer} to the canvas\n  */ update() {\n        this.renderer.update();\n    }\n    /**\n  * @param loc - Where to confirm the element\n  * @param id - The elm you expect it to be\n  * @returns Does the cell at `loc` match `ident`?\n  */ confirmElm(loc, id) {\n        return this.getPixelId(loc) === (typeof id === 'string' ? this.nameToId(id) : id);\n    }\n    /** Calculate the total number of elements within an area\n  * @param area - The locations to total up.\n  * @param search - The element to look for\n  * @returns The total\n  */ totalWithin(area, search) {\n        return area.filter((loc)=>this.confirmElm(loc, search)).length;\n    }\n    static #_ = this._moore = $37714ef34a3d49de$export$dfd711383a0d1c21();\n    /** @param name - element to look for\n  * @param center - location of the center of the moore area\n  * @returns Number of matching elements in moore radius */ mooreNearbyCounter(center, search) {\n        return this.totalWithin($2fc64e2ac0a12983$export$e27e751a5b1946e3($1b908a5c4ca6a102$export$b2b53dd543b26a90._moore, center), search);\n    }\n    /** @param area - The Area to search within\n  * @param ruleNum - A bitfield of what states a pixel should live or die on.\n  * @param search - The element to search for\n  * @see {@link PixelManipulator.wolframNewState} for higher-level tool\n  * @see {@link PixelManipulator.fundamentalStatesWithin} for lower-level tool\n  * @returns The state that the bitfied says this pixel should be in the next frame.\n  */ fundamentalNewState(area, ruleNum, search) {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- 1 is largest binary digit, nonzero if matches\n        return (ruleNum & 1 << this.fundamentalStatesWithin(area, search)) !== 0;\n    }\n    /** @param area - Locations to look at.\n  * @param search - Locations to mark as a true bit.\n  * @see {@link PixelManipulator.fundamentalNewState} for higher-level tool\n  * @returns number as a bitfied array, in order of the items in area, from left to right.\n  *\n  * That means that `(fundamentalStatesWithin([loc], search) & 1) === boolToNumber(confirmElm(loc, search))`\n  *\n  * You may want to see [this page](https://www.wolframscience.com/nks/notes-5-2--general-rules-for-multidimensional-cellular-automata/)\n  * for more details on how this might be used.\n  */ fundamentalStatesWithin(area, search) {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- 1 is the SMALLEST_BINARY_DIGIT\n        return area.map((loc)=>$1b908a5c4ca6a102$var$boolToNumber(this.confirmElm(loc, search))).reduce((res, x)=>res << 1 | x);\n    }\n    static #_2 = this._wolfram = $37714ef34a3d49de$export$570c5686df7a3a74();\n    /** @param loc - The pixel to change. (Defaults {@link renderers.Location.loop} to false)\n  * @param ruleNum - A bitfield of what states a pixel should live or die on.\n  * @param search - The element to search for\n  * @see {@link PixelManipulator.fundamentalNewState} for more general tool.\n  * @returns The state that the bitfied says this pixel should be in the next frame.\n  */ wolframNewState(loc, ruleNum, search) {\n        // one-dimentional detectors by default don't loop around edges\n        loc.loop ??= false;\n        return this.fundamentalNewState($2fc64e2ac0a12983$export$e27e751a5b1946e3($1b908a5c4ca6a102$export$b2b53dd543b26a90._wolfram, loc), ruleNum, search);\n    }\n    /**\n  * @param current - \"Current\" pixel location. (Defaults {@link renderers.Location.loop} to false)\n  * @param search - element to look for\n  * @see {@link PixelManipulator.fundamentalStatesWithin} for lower-level tool\n  * @returns Number used as bit area to indicate occupied cells\n  */ wolframNearby(current, search) {\n        // one-dimentional detectors by default don't loop around edges\n        current.loop ??= false;\n        return this.fundamentalStatesWithin($2fc64e2ac0a12983$export$e27e751a5b1946e3($1b908a5c4ca6a102$export$b2b53dd543b26a90._wolfram, current), search);\n    }\n    /** Counter tool used in slower wolfram algorithim.\n  * @deprecated Replaced with {@link PixelManipulator.wolframNearby} for use in faster\n  * algorithms\n  * @param current - \"Current\" pixel location\n  * @param name - element to look for\n  * @param bindex - Either a string like `\"001\"` to match to, or the same\n  * encoded as a number.\n  * @returns Number of elements in wolfram radius */ wolframNearbyCounter(current, name, binDex) {\n        if (typeof binDex === 'string') // Old format was a string of ones and zeros, three long.\n        binDex = parseInt(binDex, 2);\n        return this.wolframNearby(current, name) === binDex;\n    }\n    /** Set a pixel in a given location.\n  *\n  * @param x - X position.\n  * @param y - Y position.\n  * @param ident - Value to identify the element.\n  *\n  * - If a string, it assumes it's an element name.\n  * - If a number, it assumes it's an element ID\n  *\n  * @param loop - Defaults to {@link true}. Wraps `x` and `y` around canvas borders.\n  */ setPixel(loc, ident) {\n        const NOT_FOUND = -1;\n        let id = 0;\n        if (typeof ident === 'string') {\n            id = this.nameToId(ident);\n            if (id === NOT_FOUND) throw new Error(`Element name ${ident} is invalid`);\n        } else id = ident;\n        const fixedLoc = this.locationBoundsCheck(loc);\n        if (fixedLoc == null) return;\n        this.renderer.renderPixel(fixedLoc, id);\n        const w = this.get_width();\n        const CURRENT_FRAME = 0;\n        this.frames[CURRENT_FRAME][$2fc64e2ac0a12983$export$b6f174f59b684b34(fixedLoc, w)] = id;\n    }\n    /** A single frame of animation. Media functions pass this into\n  * {@link requestAnimationFrame}.\n  *\n  * Be careful! Calling this while {@link PixelManipulator.mode} is `\"playing\"`\n  * might cause two concurrent calls to this function. If any of your automata\n  * have \"hidden state\" - that is they don't represent every detail about\n  * themselves as data within the pixels - it might cause conflicts.\n  */ iterate() {\n        if (this.onIterate() ?? true) {\n            // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- last item in list\n            for(let frame = this.frames.length - 1; frame >= 0; frame--)// eslint-disable-next-line @typescript-eslint/no-magic-numbers -- nonzero\n            if (frame > 0) {\n                // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- next is minus one\n                const nextFrame = frame - 1;\n                this.frames[frame].set(this.frames[nextFrame]);\n            }\n            const w = this.get_width();\n            const h = this.get_height();\n            const typedUpdatedDead = new Array(this.elements.length);\n            this.pixelCounts = {};\n            const NEXT_FRAME = 1;\n            for(let x = 0; x < w; x++)for(let y = 0; y < h; y++){\n                const currentPixId = this.getPixelId({\n                    x: x,\n                    y: y,\n                    frame: NEXT_FRAME\n                });\n                if (currentPixId === this.defaultId) continue;\n                const { elements: { [currentPixId]: elm } } = this;\n                if (typeof elm === \"undefined\") throw new Error(\"This isn't supposed to happen, but the internal pixel buffer was currupted. This is likely a bug, or a symptom of improper direct access to the current memory buffer\");\n                if (typeof elm.liveCell !== \"undefined\") elm.liveCell({\n                    x: x,\n                    y: y,\n                    oldId: currentPixId,\n                    thisId: currentPixId\n                });\n                if (typeof this.pixelCounts[currentPixId] === \"undefined\") // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- starting at 1\n                this.pixelCounts[currentPixId] = 1;\n                else this.pixelCounts[currentPixId]++;\n                if (typeof elm.deadCell !== \"undefined\") {\n                    const UPDATED_SIZE = 8 // TODO: this is a guess. document this better, or rewrite this.\n                    ;\n                    typedUpdatedDead[currentPixId] ??= new Uint8Array(Math.ceil(w * h / UPDATED_SIZE));\n                    elm.hitbox.forEach((pixel)=>{\n                        // We are looping, so it can't be null. Eslint doesn't like non-null assertions, so we must do this.\n                        const hblocStupidFallback = {\n                            x: x + pixel.x,\n                            y: y + pixel.y\n                        };\n                        const hbLoc = this.locationBoundsCheck(hblocStupidFallback) ?? hblocStupidFallback;\n                        const index = Math.floor($2fc64e2ac0a12983$export$b6f174f59b684b34(hbLoc, w) / UPDATED_SIZE);\n                        const { [currentPixId]: { [index]: oldValue } } = typedUpdatedDead;\n                        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- SMALLEST_BINARY_DIGIT\n                        const bitMask = 1 << hbLoc.x % UPDATED_SIZE;\n                        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- compare to zero\n                        if ((oldValue & bitMask) !== 0) return;\n                        // I timed it, and confirmOldElm is slower than all the math above.\n                        if (!this.confirmElm({\n                            x: hbLoc.x,\n                            y: hbLoc.y,\n                            frame: NEXT_FRAME\n                        }, this.defaultId)) return;\n                        if (typeof elm.deadCell !== \"undefined\") elm.deadCell({\n                            x: hbLoc.x,\n                            y: hbLoc.y,\n                            oldId: this.defaultId,\n                            thisId: currentPixId\n                        });\n                        typedUpdatedDead[currentPixId][index] = oldValue | bitMask;\n                    });\n                }\n            }\n            this.update();\n            this.onAfterIterate();\n        }\n        if (this.mode === 'playing') this.loopint = $1b908a5c4ca6a102$var$resumeAnimation(this.loopint, ()=>{\n            this.iterate();\n        });\n    }\n} // end class PixelManipulator\nconst { version: $1b908a5c4ca6a102$export$83d89fbfd8236492 } = $9c5137925c0f6dd6$exports;\nconst $1b908a5c4ca6a102$export$b3b7c4718d5d9517 = 'PixelManipulator v' + $1b908a5c4ca6a102$export$83d89fbfd8236492 + ' Copyright (C) ' + '2018-2024 Nathan Fritzler\\nThis program comes with ABSOLUTELY NO ' + 'WARRANTY\\nThis is free software, and you are welcome to redistribute it\\n' + 'under certain conditions, as according to the GNU GENERAL PUBLIC LICENSE ' + 'version 3 or later.' // This is called a \"modeline\". It's a (n)vi(m)|ex thing.\n // vi: tabstop=2 shiftwidth=2 expandtab\n;\n$parcel$exportWildcard(module.exports, $2fc64e2ac0a12983$exports);\n\n\n//# sourceMappingURL=browser.js.map\n","/** This is a cellular automata JavaScript library called PixelManipulator. For\n *  information about how to use this script, see\n *  https://github.com/Lazerbeak12345/pixelmanipulator\n *\n *  Copyright (C) 2018-2024  Nathan Fritzler\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see http://www.gnu.org/licenses.\n */\nimport * as package_json from '../package.json'\nimport type { Hitbox } from './neighborhoods'\nimport type { Renderer, Location } from './renderers'\nimport * as _renderers from './renderers'\n// export * as neighborhoods from './neighborhoods'\nimport * as _neighborhoods from './neighborhoods'\nexport { _neighborhoods as neighborhoods }\nexport * from './renderers'\nfunction startAnimation(callback: () => void): number | ReturnType<typeof setInterval> {\n  if (typeof requestAnimationFrame === 'undefined') {\n    const SMALLEST_INTERVAL_POSSIBLE = 1\n    return setInterval(callback, SMALLEST_INTERVAL_POSSIBLE)\n  } else {\n    return requestAnimationFrame(callback)\n  }\n}\nfunction resumeAnimation(num: ReturnType<typeof startAnimation>, callback: () => void): ReturnType<typeof startAnimation> {\n  if (typeof requestAnimationFrame === 'undefined') {\n    return num\n  } else {\n    return requestAnimationFrame(callback)\n  }\n}\nfunction cancelAnimation(num: ReturnType<typeof startAnimation>): void {\n  if (typeof cancelAnimationFrame === 'undefined') {\n    clearInterval(num)\n  } else if (typeof num === \"number\") {\n    cancelAnimationFrame(num)\n  }\n}\nfunction boolToNumber(bool: boolean): number {\n  const TRUE = 1\n  const FALSE = 0\n  return bool ? TRUE : FALSE\n}\n/** The argument to {@link ElementDataUnknown.liveCell} and\n* {@link ElementDataUnknown.deadCell}\n*/\nexport interface Rel {\n  /** The X location of this pixel. */\n  x: number\n  /** The Y location of this pixel. */\n  y: number\n  /** The ID number of the current pixel. Reccommended if performance profiling\n  * shows string comparision is a bottleneck.\n  */\n  oldId: number\n  /** The ID of the element for which this is being called. (in a\n  * {@link ElementDataUnknown.liveCell} that's the same as {@link Rel.oldId}, but in a\n  * {@link ElementDataUnknown.deadCell} it's the id that the deadCell belongs to.\n  */\n  thisId: number\n}\n/** Much like {@link ElementDataUnknown} but all fields except {@link ElementData.madeWithRule},\n* {@link ElementData.liveCell} and {@link ElementData.deadCell} are mandatory. */\nexport interface ElementData<T> extends ElementDataUnknownNameMandatory<T> {\n  renderAs: T\n  hitbox: Hitbox\n}\n/** Information about an element. */\nexport interface ElementDataUnknown<T> {\n  /** The name of the element. */\n  name?: string\n  /** Information on how to render this element */\n  renderAs?: T\n  /** {@link ElementDataUnknown.deadCell} will only be called on empty\n  * pixels within the hitbox of a live cell. Array of relative coordinate pairs.\n  * Optional, defaults to the result of {@link neighborhoods.moore}\n  * called with no arguments.\n  */\n  hitbox?: Hitbox\n  /** Every frame of animation, pixelmanipulator iterates through each and every pixel on the screen. If this element is found, it calls this function.\n  */\n  liveCell?: (rel: Rel) => void\n  /** Every frame of animation, pixelmanipulator iterates through each and every\n  * pixel on the screen. If this element is found, it calls this function on\n  * each of the locations defined in {@link ElementDataUnknown.hitbox} so long as\n  * the pixel matches the value in {@link PixelManipulator.defaultId}, without\n  * calling the same dead pixel twice.\n  */\n  deadCell?: (rel: Rel) => void\n  /** If present, indicates that this element was auto-generated */\n  madeWithRule?: true\n}\n/** Much like {@link ElementDataUnknown} but the name is mandatory. */\nexport interface ElementDataUnknownNameMandatory<T> extends ElementDataUnknown<T> {\n  name: string\n}\nfunction _convertNumListToBf(nl: string): number {\n  // While I used to use string with each digit in it, I found that since\n  // there are 0-8, I could use a 9bit field (remember: off by one)\n  let out = 0\n  for (const item of nl) {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- largest binary digit\n    out |= 1 << parseInt(item)\n  }\n  return out\n}\n/** Template generators for your elements. */\nexport const rules = {\n  /** Generates elements like conway's game of life.\n  * @param p - `lifelike` needs to be able to call {@link PixelManipulator.mooreNearbyCounter}\n  * @param pattern - The B/S syntax indicator of on how many cells of the same\n  * type in the moore radius around each pixel should survive, and on how many\n  * should be born.\n  * @param loop - Should this loop around screen edges? (Passed to {@link renderers.Location.loop})\n  */\n  lifelike: function <T>(p: PixelManipulator<T>, pattern: string, loop?: boolean): ElementDataUnknown<T> {\n    const numbers = pattern.split(/\\/?[a-z]/gi)// \"B\",born,die\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- after the pattern\n    const bfdie = _convertNumListToBf(numbers[2])\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- before the pattern\n    const bflive = _convertNumListToBf(numbers[1])\n    const SMALLEST_BINARY_DIGIT = 1\n    const PREV_FRAME = 1\n    const NO_MATCH = 0\n    return {\n      madeWithRule: true,\n      hitbox: _neighborhoods.moore(),\n      liveCell: function llive({ x, y, thisId }) {\n        // if any match (of how many moore are nearby) is found, it dies\n        if ((bfdie & SMALLEST_BINARY_DIGIT << p.mooreNearbyCounter({ x, y, frame: PREV_FRAME, loop }, thisId)) === NO_MATCH) {\n          p.setPixel({ x, y }, p.defaultId)\n        }\n      },\n      deadCell: function ldead({ x, y, thisId }) {\n        // if any match (of how many moore are nearby) is found, it lives\n        if ((bflive & SMALLEST_BINARY_DIGIT << p.mooreNearbyCounter({ x, y, frame: PREV_FRAME, loop }, thisId)) !== NO_MATCH) {\n          p.setPixel({ x, y }, thisId)\n        }\n      }\n    }\n  },\n  /** Generates fundamental cellular automata\n  * @param p - `wolfram` needs to be able to call {@link PixelManipulator.wolframNearbyCounter}\n  * @param pattern - The Rule num syntax, where the 8-bit number is translated\n  * into a binary list, each where the inverted 3-binary-digit index represents\n  * the state of cells in the row above. On a match, the cell becomes the state\n  * specified in the initial 8-bit number.\n  * @param loop - Should this loop around screen edges? (Passed to {@link PixelManipulator.wolframNearby})\n  */\n  wolfram: function <T>(p: PixelManipulator<T>, pattern: string, loop?: boolean): ElementDataUnknown<T> {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- after the pattern\n    const binStates = parseInt(pattern.split(/Rule /gi)[1])\n    const FIRST_ROW = 0\n    const PREV_FRAME = 1\n    return {\n      madeWithRule: true,\n      // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default values\n      hitbox: _neighborhoods.wolfram(1, 1),\n      // The current state is used as the index in the binstates, as binstates is a bit array of every state\n      liveCell: function wlive({ x, y, thisId }) {\n        if (y === FIRST_ROW) return\n        if (!p.wolframNewState({ x, y, frame: PREV_FRAME, loop }, binStates, thisId)) {\n          p.setPixel({ x, y, loop }, p.defaultId)\n        }\n      },\n      deadCell: function wdead({ x, y, thisId }) {\n        if (p.wolframNewState({ x, y, frame: PREV_FRAME, loop }, binStates, thisId)) {\n          p.setPixel({ x, y, loop }, thisId)\n        }\n      }\n    }\n  }\n}\n/** Sizes to set the canvases to. If a value below is absent, old value is used.\n*/\nexport interface CanvasSizes {\n  /** width of the canvas */\n  canvasW?: number\n  /** height of the canvas */\n  canvasH?: number\n}\n/** A cellular automata engine */\nexport class PixelManipulator<T> {\n  /**\n  * @param renderer - The target to render things to.\n  * @param width - How wide should the initial target be?\n  * @param height - How tall should the initial target be?\n  */\n  constructor(renderer: Renderer<T>, width: number, height: number) {\n    if (typeof window !== 'undefined') console.log(licence)\n    this.renderer = renderer\n    this.defaultId = this.addElement({\n      renderAs: this.renderer.defaultRenderAs,\n      hitbox: [],\n      name: 'blank'\n    })\n    this.reset({ canvasW: width, canvasH: height })\n  }\n\n  /** An instanace of the object that shows the state to the user. */\n  renderer: Renderer<T>\n  /**\n  * This is the number that indicates what animation frame the iterate function\n  * is being called with.\n  *\n  * You can use this to mannually stop the iterations like so:\n  * `cancelAnimationFrame(this.loopint)` (not reccommended)\n  */\n  loopint: ReturnType<typeof startAnimation> = 0 // eslint-disable-line @typescript-eslint/no-magic-numbers -- default value\n  /**\n  * A low-level listing of the availiable elements.\n  *\n  * Format is much like the argument to\n  * {@link PixelManipulator.addMultipleElements}, but is not sanitized.\n  */\n  readonly elements: Array<ElementData<T>> = []\n\n  /**\n  * A mapping from old names for elements to new names for elements.\n  *\n  * Allows a user to modify the name of an element at runtime.\n  */\n  nameAliases = new Map<string, string>()\n  /**\n  * A string indicating weather it is currently animating or not.\n  *\n  * It is `\"playing\"` if it is currently animating, or `\"paused\"` if not\n  * currently animating.\n  *\n  * This has been around since early version 0, and once was the `innerText`\n  * value of a pause/play button!\n  */\n  mode: 'playing' | 'paused' = 'paused'\n  /**\n  * The elm that pixelmanipulator will fill the screen with upon initialization,\n  * and what elements should return to when they are \"dead\". Default value is\n  * 0, an element with the color `#000F`\n  *\n  * If you update this, be sure to update {@link renderers.Renderer.defaultRenderAs} in {@link PixelManipulator.renderer}\n  */\n  defaultId: number\n  /** Called before {@link PixelManipulator.iterate} does its work.\n  * @returns false to postposne iteration.\n  */\n  onIterate: () => (boolean | undefined) = () => undefined // eslint-disable-line @typescript-eslint/class-methods-use-this -- event handler\n  /** Called after {@link PixelManipulator.iterate} does its work. */\n  onAfterIterate: () => undefined = () => undefined // eslint-disable-line @typescript-eslint/class-methods-use-this -- event handler\n\n  /** Gets called after a call to {@link PixelManipulator.modifyElement}. The ID is\n  * passed as the only argument.\n  * @param id - The element that was modified.\n  */\n  onElementModified: (id: number) => void = () => undefined // eslint-disable-line @typescript-eslint/class-methods-use-this -- event handler\n  /** @returns the width of the canvas */\n  get_width(): number {\n    return this.renderer.get_width()\n  }\n\n  /** @param value - The new width of the canvas */\n  set_width(value: number): void {\n    this.renderer.set_width(value)\n  }\n\n  /** @returns the height of the canvas */\n  get_height(): number {\n    return this.renderer.get_height()\n  }\n\n  /** @param value - The new height of the canvas */\n  set_height(value: number): void {\n    this.renderer.set_height(value)\n  }\n\n  /** fills the screen with value, at an optional given percent\n  * @param value - The element to put on the screen\n  * @param pr - The percent as a number from 1 to 100, defaulting at 15\n  */\n  randomlyFill(value: string | number, pr?: number): void {\n    const DEFAULT_PERCENT = 15\n    const MAX_PERCENT = 100\n    pr ??= DEFAULT_PERCENT\n    const w = this.get_width()\n    const h = this.get_height()\n    for (let x = 0; x < w; x++) {\n      for (let y = 0; y < h; y++) { // iterate through x and y\n        if (Math.random() * MAX_PERCENT < pr) { this.setPixel({ x, y }, value) }\n      }\n    }\n  }\n\n  /** Adds multiple elements.\n  *\n  * @param elements - Index is the element name, value is the element data (and\n  * does not require the name). Value is passed to\n  * {@link PixelManipulator.addElement}\n  */\n  addMultipleElements(elements: Record<string, ElementDataUnknown<T>>): void {\n    Object.keys(elements).forEach(name =>\n      this.addElement({ name, ...elements[name] })\n    )\n  }\n\n  /** Add an element with the given element data\n  * @param data - The details about the element.\n  * @returns The generated {@link PixelManipulator.elements} index\n  */\n  addElement(\n    data: ElementDataUnknownNameMandatory<T>\n  ): number { // adds a single element\n    const { name, renderAs } = data\n    if (typeof name === 'undefined') throw new Error('Name is required for element')\n    if (typeof data.name === 'undefined') data.name = name\n    // @ts-expect-error renderAs might be undefined here, but it's fixed in the call to this.modifyElement below\n    this.elements.push({ name, renderAs })\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- last item in list\n    this.modifyElement(this.elements.length - 1, data)\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- last item in list (might not be the same as before modifyElement was called)\n    return this.elements.length - 1\n  }\n\n  /**\n  * @param id - How to identify what element to modify.\n  * @param data - Values to apply to the pre-existing element.\n  *\n  * Automatically calls {@link PixelManipulator.aliasElements} if\n  * {@link ElementDataUnknown.name} is present in `data`\n  */\n  modifyElement(id: number, data: ElementDataUnknown<T>): void {\n    const oldData: Omit<ElementData<T>, \"hitbox\"> | ElementData<T> = this.elements[id]\n    if (typeof data.name !== 'undefined' && data.name !== oldData.name) {\n      this.aliasElements(oldData.name, data.name)\n    }\n    const newData = {\n      hitbox: _neighborhoods.moore(),\n      ...oldData,\n      ...data,\n    }\n    newData.renderAs = this.renderer.modifyElement(id, newData.renderAs)\n    this.elements[id] = newData\n    this.onElementModified(id)\n  }\n\n  /**\n  * @param oldName - The old {@link ElementData.name}\n  * @param newName - The new {@link ElementData.name}\n  *\n  * Adds the name to {@link PixelManipulator.nameAliases}, and ensures no alias\n  * loops are present.\n  */\n  aliasElements(oldName: string, newName: string): void {\n    // Intentionally ignores aliases when checking for duplicate name.\n    if (this.elements.find(elm => elm.name === newName) != null) {\n      throw new Error('The name ' + newName + ' is already in use!')\n    }\n    this.nameAliases.delete(newName)\n    this.nameAliases.set(oldName, newName)\n  }\n\n  /** Respecting aliases, convert an element name into its number.\n  * @param name - name of element\n  * @returns The number of the element\n  */\n  nameToId(name: string): number {\n    let unaliased: string | undefined = name\n    while (typeof unaliased !== 'undefined') {\n      name = unaliased\n      unaliased = this.nameAliases.get(name)\n    }\n    return this.elements.findIndex(elm => elm.name === name)\n  }\n\n  /**\n  * @param name - Name of the (possibly aliased) element.\n  * @returns The element from {@link PixelManipulator.elements}, respecting\n  * aliases in {@link PixelManipulator.nameAliases}, or {@link undefined} if not found.\n  */\n  getElementByName(name: string): ElementData<T> | undefined {\n    return this.elements[this.nameToId(name)]\n  }\n\n  /**\n  * @param loc - Location of the element.\n  * @returns Name of element at passed-in location. See {@link ElementData.name}\n  */\n  whatIs(loc: Location): string {\n    return this.elements[this.getPixelId(loc)].name\n  }\n\n  /** Start iterations on all of the elements on the canvas.\n  * Sets {@link PixelManipulator.mode} to `\"playing\"`, and requests a new animation\n  * frame, saving it in {@link PixelManipulator.loopint}.\n  *\n  * @param canvasSizes - If {@link PixelManipulator.mode} is already `\"playing\"` then\n  * canvasSizes is passed to {@link PixelManipulator.reset}. Otherwise reset is not\n  * called.\n  */\n  play(canvasSizes?: CanvasSizes): void {\n    if (this.mode === 'playing') this.reset(canvasSizes)\n    this.mode = 'playing'\n    this.loopint = startAnimation(() => {\n      this.iterate()\n    })\n  }\n\n  /** Reset, resize and initialize the canvas(es).\n  * Calls {@link PixelManipulator.pause} then\n  * {@link PixelManipulator.update}. Resets all internal state, excluding the\n  * element definitions.\n  *\n  * @param canvasSizes - Allows one to change the size of the canvases during\n  * the reset.\n  */\n  reset(canvasSizes?: CanvasSizes): void {\n    const CURRENT_FRAME = 0\n    const NEXT_FRAME = 1\n    const MAX_PERCENT = 100\n    if (typeof canvasSizes === 'undefined') { canvasSizes = {} }\n    this.pause()\n    const w = canvasSizes.canvasW ?? this.get_width()\n    const h = canvasSizes.canvasH ?? this.get_height()\n    this.set_width(w)\n    this.set_height(h)\n    this.frames[CURRENT_FRAME] = new Uint32Array(w * h)\n    this.frames[NEXT_FRAME] = new Uint32Array(w * h)\n    this.renderer.reset()\n    this.randomlyFill(this.defaultId, MAX_PERCENT)\n    this.update()\n  }\n\n  /** pause canvas iterations\n  * Sets {@link PixelManipulator.mode} to `\"paused\"` and cancels the animation frame\n  * referenced in {@link PixelManipulator.loopint}\n  */\n  pause(): void {\n    this.mode = 'paused'\n    cancelAnimation(this.loopint)\n  }\n\n  /**\n  * @param loc - Location of the pixel (could be out of bounds).\n  * @returns null if out-of-bounds when loop setting is false, or the location (loop set to false).\n  */\n  locationBoundsCheck(loc: Location): null | Location { // eslint-disable-line complexity -- close enough for me tbh\n    const LEFTMOST = 0\n    const TOPMOST = 0\n\n    const w = this.get_width()\n    const h = this.get_height()\n\n    const overflowLeft = loc.x < LEFTMOST\n    const overflowRight = loc.x >= w\n    const overflowTop = loc.y < TOPMOST\n    const overflowBottom = loc.y >= h\n\n    if (loc.loop ?? true) {\n      loc.x %= w\n      loc.y %= h\n\n      if (overflowLeft) loc.x += w\n      if (overflowTop) loc.y += h\n\n      loc.loop = false\n    } else if (overflowLeft || overflowRight || overflowTop || overflowBottom) {\n      return null\n    }\n    return loc\n  }\n\n  /**\n  * @param loc - Location of the pixel\n  * @returns the element id at a given location\n  */\n  getPixelId(loc: Location): number {\n    const fixedLoc = this.locationBoundsCheck(loc)\n    if (fixedLoc == null) return this.defaultId\n    const w = this.get_width()\n    const CURRENT_FRAME = 0 // TODO: dedupe this const\n    return this.frames[fixedLoc.frame ?? CURRENT_FRAME][_renderers.location2Index(fixedLoc, w)]\n  }\n\n  /**\n  * Applies any changes made with {@link renderers.Renderer.renderPixel} on {@link PixelManipulator.renderer} to the canvas\n  */\n  update(): void {\n    this.renderer.update()\n  }\n\n  /**\n  * @param loc - Where to confirm the element\n  * @param id - The elm you expect it to be\n  * @returns Does the cell at `loc` match `ident`?\n  */\n  confirmElm(loc: Location, id: number | string): boolean {\n    return this.getPixelId(loc) === (typeof id === 'string' ? this.nameToId(id) : id)\n  }\n\n  /** Calculate the total number of elements within an area\n  * @param area - The locations to total up.\n  * @param search - The element to look for\n  * @returns The total\n  */\n  totalWithin(area: Location[], search: number | string): number {\n    return area\n      .filter(loc => this.confirmElm(loc, search))\n      .length\n  }\n\n  private static readonly _moore = _neighborhoods.moore()\n  /** @param name - element to look for\n  * @param center - location of the center of the moore area\n  * @returns Number of matching elements in moore radius */\n  mooreNearbyCounter(center: Location, search: number | string): number {\n    return this.totalWithin(_renderers.transposeLocations(PixelManipulator._moore, center), search)\n  }\n\n  /** @param area - The Area to search within\n  * @param ruleNum - A bitfield of what states a pixel should live or die on.\n  * @param search - The element to search for\n  * @see {@link PixelManipulator.wolframNewState} for higher-level tool\n  * @see {@link PixelManipulator.fundamentalStatesWithin} for lower-level tool\n  * @returns The state that the bitfied says this pixel should be in the next frame.\n  */\n  fundamentalNewState(area: Location[], ruleNum: number, search: number | string): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- 1 is largest binary digit, nonzero if matches\n    return (ruleNum & 1 << this.fundamentalStatesWithin(area, search)) !== 0\n  }\n\n  /** @param area - Locations to look at.\n  * @param search - Locations to mark as a true bit.\n  * @see {@link PixelManipulator.fundamentalNewState} for higher-level tool\n  * @returns number as a bitfied array, in order of the items in area, from left to right.\n  *\n  * That means that `(fundamentalStatesWithin([loc], search) & 1) === boolToNumber(confirmElm(loc, search))`\n  *\n  * You may want to see [this page](https://www.wolframscience.com/nks/notes-5-2--general-rules-for-multidimensional-cellular-automata/)\n  * for more details on how this might be used.\n  */\n  fundamentalStatesWithin(area: Location[], search: number | string): number {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- 1 is the SMALLEST_BINARY_DIGIT\n    return area.map(loc => boolToNumber(this.confirmElm(loc, search))).reduce((res, x) => res << 1 | x)\n  }\n\n  private static readonly _wolfram = _neighborhoods.wolfram()\n\n  /** @param loc - The pixel to change. (Defaults {@link renderers.Location.loop} to false)\n  * @param ruleNum - A bitfield of what states a pixel should live or die on.\n  * @param search - The element to search for\n  * @see {@link PixelManipulator.fundamentalNewState} for more general tool.\n  * @returns The state that the bitfied says this pixel should be in the next frame.\n  */\n  wolframNewState(loc: Location, ruleNum: number, search: number | string): boolean {\n    // one-dimentional detectors by default don't loop around edges\n    loc.loop ??= false\n    return this.fundamentalNewState(\n      _renderers.transposeLocations(PixelManipulator._wolfram, loc),\n      ruleNum,\n      search\n    )\n  }\n\n  /**\n  * @param current - \"Current\" pixel location. (Defaults {@link renderers.Location.loop} to false)\n  * @param search - element to look for\n  * @see {@link PixelManipulator.fundamentalStatesWithin} for lower-level tool\n  * @returns Number used as bit area to indicate occupied cells\n  */\n  wolframNearby(current: Location, search: number | string): number {\n    // one-dimentional detectors by default don't loop around edges\n    current.loop ??= false\n    return this.fundamentalStatesWithin(\n      _renderers.transposeLocations(PixelManipulator._wolfram, current),\n      search\n    )\n  }\n\n  /** Counter tool used in slower wolfram algorithim.\n  * @deprecated Replaced with {@link PixelManipulator.wolframNearby} for use in faster\n  * algorithms\n  * @param current - \"Current\" pixel location\n  * @param name - element to look for\n  * @param bindex - Either a string like `\"001\"` to match to, or the same\n  * encoded as a number.\n  * @returns Number of elements in wolfram radius */\n  wolframNearbyCounter(current: Location, name: number | string, binDex: number | string): boolean {\n    if (typeof binDex === 'string') {\n      // Old format was a string of ones and zeros, three long.\n      binDex = parseInt(binDex, 2)\n    }\n    return this.wolframNearby(current, name) === binDex\n  }\n\n  /** Set a pixel in a given location.\n  *\n  * @param x - X position.\n  * @param y - Y position.\n  * @param ident - Value to identify the element.\n  *\n  * - If a string, it assumes it's an element name.\n  * - If a number, it assumes it's an element ID\n  *\n  * @param loop - Defaults to {@link true}. Wraps `x` and `y` around canvas borders.\n  */\n  setPixel(loc: Location, ident: string | number): void {\n    const NOT_FOUND = -1\n    let id = 0\n    if (typeof ident === 'string') {\n      id = this.nameToId(ident)\n      if (id === NOT_FOUND) {\n        throw new Error(`Element name ${ident} is invalid`)\n      }\n    } else {\n      id = ident\n    }\n    const fixedLoc = this.locationBoundsCheck(loc)\n    if (fixedLoc == null) return\n    this.renderer.renderPixel(fixedLoc, id)\n    const w = this.get_width()\n    const CURRENT_FRAME = 0\n    this.frames[CURRENT_FRAME][_renderers.location2Index(fixedLoc, w)] = id\n  }\n\n  /** Number of pixels per element in the last frame */\n  pixelCounts: Record<number, number> = {}\n\n  /** A single frame of animation. Media functions pass this into\n  * {@link requestAnimationFrame}.\n  *\n  * Be careful! Calling this while {@link PixelManipulator.mode} is `\"playing\"`\n  * might cause two concurrent calls to this function. If any of your automata\n  * have \"hidden state\" - that is they don't represent every detail about\n  * themselves as data within the pixels - it might cause conflicts.\n  */\n  iterate(): void { // eslint-disable-line complexity -- TODO: break this down a bit\n    if (this.onIterate() ?? true) {\n      // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- last item in list\n      for (let frame = this.frames.length - 1; frame >= 0; frame--) {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- nonzero\n        if (frame > 0) {\n          // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- next is minus one\n          const nextFrame = frame - 1\n          this.frames[frame].set(this.frames[nextFrame])\n        }\n      }\n      const w = this.get_width()\n      const h = this.get_height()\n      const typedUpdatedDead = new Array<Uint8Array>(this.elements.length)\n      this.pixelCounts = {}\n      const NEXT_FRAME = 1\n      for (let x = 0; x < w; x++) {\n        for (let y = 0; y < h; y++) { // iterate through x and y\n          const currentPixId = this.getPixelId({ x, y, frame: NEXT_FRAME })\n          if (currentPixId === this.defaultId) continue\n          const { elements: { [currentPixId]: elm } } = this\n          if (typeof elm === \"undefined\") {\n            throw new Error(\n              'This isn\\'t supposed to happen, but the internal pixel buffer was ' +\n              'currupted. This is likely a bug, or a symptom of improper direct ' +\n              'access to the current memory buffer'\n            )\n          }\n          if (typeof elm.liveCell !== \"undefined\") {\n            elm.liveCell({\n              x,\n              y,\n              oldId: currentPixId,\n              thisId: currentPixId\n            })\n          }\n          if (typeof this.pixelCounts[currentPixId] === \"undefined\") {\n            // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- starting at 1\n            this.pixelCounts[currentPixId] = 1\n          } else this.pixelCounts[currentPixId]++\n          if (typeof elm.deadCell !== \"undefined\") {\n            const UPDATED_SIZE = 8 // TODO: this is a guess. document this better, or rewrite this.\n            typedUpdatedDead[currentPixId] ??= new Uint8Array(Math.ceil((w * h) / UPDATED_SIZE));\n            elm.hitbox.forEach(pixel => {\n              // We are looping, so it can't be null. Eslint doesn't like non-null assertions, so we must do this.\n              const hblocStupidFallback: Location = {\n                x: x + pixel.x,\n                y: y + pixel.y\n              }\n              const hbLoc: Location = this.locationBoundsCheck(hblocStupidFallback) ?? hblocStupidFallback;\n              const index = Math.floor(_renderers.location2Index(hbLoc, w) / UPDATED_SIZE)\n              const { [currentPixId]: { [index]: oldValue } } = typedUpdatedDead\n              // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- SMALLEST_BINARY_DIGIT\n              const bitMask = 1 << (hbLoc.x % UPDATED_SIZE)\n              // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- compare to zero\n              if ((oldValue & bitMask) !== 0) { return }\n              // I timed it, and confirmOldElm is slower than all the math above.\n              if (!this.confirmElm({ x: hbLoc.x, y: hbLoc.y, frame: NEXT_FRAME }, this.defaultId)) {\n                return\n              }\n              if (typeof elm.deadCell !== \"undefined\") {\n                elm.deadCell({\n                  x: hbLoc.x,\n                  y: hbLoc.y,\n                  oldId: this.defaultId,\n                  thisId: currentPixId\n                })\n              }\n              typedUpdatedDead[currentPixId][index] = oldValue | bitMask\n            })\n          }\n        }\n      }\n      this.update()\n      this.onAfterIterate()\n    }\n    if (this.mode === 'playing') {\n      this.loopint = resumeAnimation(this.loopint, () => {\n        this.iterate()\n      })\n    }\n  }\n\n  /**\n  * A List of {@link Uint32Array}s each the length of width times height of the\n  * canvas. Frame 0 is the new frame, frame one is the prior, etc. Each item\n  * holds the element id of each element on screen, from left to right, top to\n  * bottom.\n  */\n  frames: Uint32Array[] = [new Uint32Array(0), new Uint32Array(0)] // eslint-disable-line @typescript-eslint/no-magic-numbers -- default values\n}// end class PixelManipulator\n/** Version of library **for logging purposes only**. Uses semver. */\nexport const { version } = package_json\n/** Licence disclaimer for PixelManipulator */\nexport const licence = 'PixelManipulator v' + version + ' Copyright (C) ' +\n  '2018-2024 Nathan Fritzler\\nThis program comes with ABSOLUTELY NO ' +\n  'WARRANTY\\nThis is free software, and you are welcome to redistribute it\\n' +\n  'under certain conditions, as according to the GNU GENERAL PUBLIC LICENSE ' +\n  'version 3 or later.'\n// This is called a \"modeline\". It's a (n)vi(m)|ex thing.\n// vi: tabstop=2 shiftwidth=2 expandtab\n","{\n  \"name\": \"pixelmanipulator\",\n  \"version\": \"5.5.10\",\n  \"description\": \"A super powerful Typescript library for cellular automation.\",\n  \"main\": \"dist/main.js\",\n  \"browser\": \"dist/browser.js\",\n  \"module\": \"dist/module.js\",\n  \"types\": \"dist/types.d.ts\",\n  \"unpkg\": \"dist/bundle.js\",\n  \"targets\": {\n    \"main\": {\n      \"source\": \"./src/pixelmanipulator.ts\"\n    },\n    \"module\": {\n      \"source\": \"src/pixelmanipulator.ts\"\n    },\n    \"browser\": {\n      \"source\": \"src/pixelmanipulator.ts\",\n      \"outputFormat\": \"commonjs\"\n    },\n    \"types\": {\n      \"source\": \"src/pixelmanipulator.ts\"\n    }\n  },\n  \"repository\": \"git@github.com:Lazerbeak12345/pixelmanipulator.git\",\n  \"homepage\": \"https://lazerbeak12345.github.io/pixelmanipulator\",\n  \"author\": \"Nathan Fritzler <nfblaster@live.com>\",\n  \"license\": \"GPL-3.0-or-later\",\n  \"browserslist\": \"defaults\",\n  \"keywords\": [\n    \"cellular automata\",\n    \"game of life\",\n    \"highlife\",\n    \"brians-brain\",\n    \"wireworld\",\n    \"wolfram\",\n    \"rule-30\",\n    \"rule-90\",\n    \"rule-110\",\n    \"rule-184\",\n    \"conway\",\n    \"pixel\",\n    \"game\",\n    \"life\",\n    \"cellular\",\n    \"automata\",\n    \"automaton\",\n    \"gameoflife\",\n    \"gol\",\n    \"brian's-brain\",\n    \"particle\",\n    \"simulation\",\n    \"engine\",\n    \"grid\",\n    \"canvas\"\n  ],\n  \"devDependencies\": {\n    \"@fast-check/ava\": \"catalog:\",\n    \"@parcel/packager-ts\": \"catalog:\",\n    \"@parcel/transformer-typescript-types\": \"catalog:\",\n    \"@rollup/plugin-commonjs\": \"catalog:\",\n    \"@types/eslint\": \"catalog:\",\n    \"@types/node\": \"catalog:\",\n    \"@typescript-eslint/eslint-plugin\": \"catalog:\",\n    \"@typescript-eslint/parser\": \"catalog:\",\n    \"ava\": \"catalog:\",\n    \"c8\": \"catalog:\",\n    \"eslint\": \"catalog:\",\n    \"eslint-config-love\": \"catalog:\",\n    \"eslint-plugin-node\": \"catalog:\",\n    \"eslint-plugin-promise\": \"catalog:\",\n    \"eslint-plugin-tsdoc\": \"catalog:\",\n    \"fast-check\": \"catalog:\",\n    \"gh-pages\": \"^6.2.0\",\n    \"parcel\": \"catalog:\",\n    \"rollup\": \"catalog:\",\n    \"typedoc\": \"catalog:\",\n    \"typedoc-plugin-mdn-links\": \"catalog:\",\n    \"typescript\": \"catalog:\"\n  },\n  \"scripts\": {\n    \"test\": \"pnpm run test:types && pnpm run lint && pnpm run test:test\",\n    \"test:types\": \"rm -r build; tsc --outDir build\",\n    \"lint\": \"eslint . --ignore-pattern dist --ignore-pattern docs --ignore-pattern coverage --ignore-pattern build\",\n    \"test:test\": \"c8 -r text -r text-summary -r lcov -r html --all --include build/src ava\",\n    \"build\": \"pnpm t && pnpm run build:docs && pnpm run build:parcel && pnpm build:readme && pnpm run build:bundle && pnpm run build:prepare-ci\",\n    \"build:docs\": \"typedoc --name PixelManipulator --out docs --includeVersion src/*.ts\",\n    \"build:parcel\": \"parcel build\",\n    \"build:readme\": \"cp ../../README.md .\",\n    \"build:bundle\": \"rollup -c\",\n    \"build:prepare-ci\": \"cp -r ../../.circleci docs && cp -r ../../media/* docs\",\n    \"watch\": \"parcel watch --no-hmr\",\n    \"updatedemo\": \"gh-pages -d docs -m \\\"Update $npm_package_version\\\" -tf\"\n  },\n  \"ava\": {\n    \"timeout\": \"20s\"\n  },\n  \"packageManager\": \"pnpm@9.15.1\"\n}\n","/** Various rendering targets\n *\n *  Copyright (C) 2018-2024  Nathan Fritzler\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see http://www.gnu.org/licenses/\n */\n\n/** The location of a pixel */\nexport interface Location {\n  /** x position */\n  x: number\n  /** y position */\n  y: number\n  /** Should this location loop around screen borders? */\n  loop?: boolean\n  /** Should this location be treated to be on the current frame, previous, or older?\n  *\n  * Current frame is zero. Higher is older - but not guarenteed to be present\n  */\n  frame?: number\n}\n/** Convert a loction to a index to reduce need for 2D arrays\n* @param x - x location\n* @param y - y location\n* @param width - width of the canvas\n*/\nexport function location2Index({ x, y }: Location, width: number): number {\n  return ((width * y) + x)\n}\n/** Transpose a list of locations, using a location.\n* @param locs - Locations to be transposed. If the frame or loop values are\n* absent, they are set to the value in [offset]. If absent from [offset] they\n* are not set.\n* @param offset - Amount to transpose the locations by, represented by a\n* location.\n*/\nexport function transposeLocations(locs: Location[], offset: Location): Location[] {\n  const { x, y, frame, loop } = offset\n  return locs.map(loc => {\n    const newLoc: Location = {\n      x: loc.x + x,\n      y: loc.y + y,\n      frame: loc.frame ?? frame,\n      loop: loc.loop ?? loop\n    }\n    if (newLoc.frame == null) delete newLoc.frame\n    if (newLoc.loop == null) delete newLoc.loop\n    return newLoc\n  })\n}\n/** Abstract rendering type. Used by {@link pixelmanipulator.PixelManipulator} to enable rendering to\n* various targets. */\nexport abstract class Renderer<T> {\n  /** Renders a pixel on a given location on the next call to {@link Renderer.update}\n  * @param location - Where to render the pixel.\n  * @param id - the pixel to render.\n  */\n  abstract renderPixel(location: Location, id: number): void\n  /** Reset the render target. */\n  abstract reset(): void\n  /** Update the render target. Draws all changes queued up by {@link Renderer.renderPixel}. */\n  abstract update(): void\n  /** The {@link pixelmanipulator.ElementData.renderAs} value for the default element */\n  abstract defaultRenderAs: T\n  /** Ordered by ID, the {@link pixelmanipulator.ElementData.renderAs} info for each element. */\n  renderInfo: T[] = []\n  /** Intentionally overridable, called when an element is modified.\n  * @param id - The id of the element to modify.\n  * @param newRenderAs - The new {@link pixelmanipulator.ElementData.renderAs} info.\n  * @returns The value passed upstream to be stored as the actual renderAs info,\n  * allowing for sanitation in this function, or one overriding it.\n  */\n  modifyElement(id: number, newRenderAs: T): T {\n    if (this.renderInfo.length === id) {\n      this.renderInfo.push(newRenderAs)\n    } else if (this.renderInfo.length > id) {\n      this.renderInfo[id] = newRenderAs\n    } else throw new Error('Renderer received elements out of order!')\n    return newRenderAs\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n  private _width = 1\n  /** @param value - The new width of the canvas */\n  set_width(value: number): void {\n    this._width = value\n  }\n\n  /** @returns the width of the canvas */\n  get_width(): number {\n    return this._width\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n  private _height = 1\n  /** @param value - The new height of the canvas */\n  set_height(value: number): void {\n    this._height = value\n  }\n\n  /** @returns the height of the canvas */\n  get_height(): number {\n    return this._height\n  }\n}\n/** The color of an element */\nexport type Color = [number, number, number, number] | [number, number, number] | [number, number] | [number] | []\nconst NUMBER_OF_COLORS = 4\n/** Render onto an {@link HTMLCanvasElement} using a {@link CanvasRenderingContext2D} */\nexport class Ctx2dRenderer extends Renderer<Color> {\n  /** @param canvas - The canvas to render on, and to adjust the size of */\n  constructor(canvas: HTMLCanvasElement) {\n    super()\n    this.canvas = canvas\n    const ctx = canvas.getContext('2d')\n    if (ctx == null) {\n      throw new Error('CanvasRenderingContext2D not supported in enviroment')\n    }\n    this.ctx = ctx\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top-left corner\n    this.imageData = this.ctx.getImageData(0, 0, this.get_width(), this.get_height())\n  }\n\n  /** The last known image data from {@link Ctx2dRenderer.ctx} */\n  imageData: ImageData\n  /** The rendering context for the canvas */\n  ctx: CanvasRenderingContext2D\n  /** The canvas */\n  canvas: HTMLCanvasElement\n  /** Default color is solid black */\n  defaultRenderAs = [0, 0, 0, 255] as Color // eslint-disable-line @typescript-eslint/no-magic-numbers -- top-left corner\n\n  /** In addition to calling {@link Renderer.modifyElement}, this leftpads colors\n  * with `255` and checks for dupicates.\n  * @param id - Id of element\n  * @param newRenderAs - The proposed color of the element.\n  * @returns the actual color of the element. Always 4 long.\n  */\n  override modifyElement(id: number, newRenderAs: Color): Color {\n    // allows for arrays that are too small\n    while (newRenderAs.length < NUMBER_OF_COLORS) {\n      // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default values to 255\n      (newRenderAs as number[]).push(255)\n    }\n    const NOT_FOUND = -1\n    const indexOfColor = this.renderInfo.indexOf(newRenderAs)\n    if (!(indexOfColor === id || indexOfColor === NOT_FOUND)) {\n      throw new Error(`The color ${JSON.stringify(newRenderAs)} is already in use!`)\n    }\n    return super.modifyElement(id, newRenderAs)\n  }\n\n  /** @param loc - location of the pixel to render. Ignores {@link Location.frame} and {@link Location.loop}\n  * @param id - The id of the pixel to render.\n  */\n  renderPixel(loc: Location, id: number): void {\n    const { renderInfo: { [id]: color } } = this\n    if (typeof color === \"undefined\") {\n      throw new Error(`Invalid ID ${id}`)\n    }\n    // allows for arrays that are too small\n    // TODO: unify this code (duplicate in above function)\n    while (color.length < NUMBER_OF_COLORS) {\n      // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default values to 255\n      (color as number[]).push(255)\n    }\n    const w = this.get_width()\n    const pixelOffset = location2Index(loc, w) * NUMBER_OF_COLORS\n    for (let i = 0; i < NUMBER_OF_COLORS; ++i) {\n      // eslint-disable-next-line @typescript-eslint/prefer-destructuring -- destructuring is more messy here\n      this.imageData.data[pixelOffset + i] = color[i]\n    }\n  }\n\n  reset(): void {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top left corner\n    this.imageData = this.ctx.getImageData(0, 0, this.get_width(), this.get_height())\n    this.ctx.imageSmoothingEnabled = false\n  }\n\n  update(): void {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- top left corner\n    this.ctx.putImageData(this.imageData, 0, 0)\n  }\n\n  override set_width(value: number): void {\n    this.canvas.width = value\n    super.set_width(value)\n  }\n\n  override set_height(value: number): void {\n    this.canvas.height = value\n    super.set_height(value)\n  }\n}\n/** Render to a string */\nexport class StringRenderer extends Renderer<string> {\n  defaultRenderAs = ' '\n  private _chars: string[][] = []\n  /** The callback function passed to the constructor. Called on {@link StringRenderer.update} */\n  readonly _callback: (string: string) => void\n  /** @param callback - A function called on {@link StringRenderer.update}. Passed a\n  * string with the renderable state of the {@link pixelmanipulator.PixelManipulator} */\n  constructor(callback: (string: string) => void) {\n    super()\n    this._callback = callback\n  }\n\n  /** @param newRenderAs - The proposed character to use. Must be 1 char long and unique */\n  override modifyElement(id: number, newRenderAs: string): string {\n    if (this.renderInfo.includes(newRenderAs)) {\n      throw new Error(`Element ${id} must have a unique renderAs`)\n    }\n    return super.modifyElement(id, newRenderAs)\n  }\n\n  reset(): void {\n    const w = this.get_width()\n    const h = this.get_height()\n    this._chars = new Array(h)\n      .fill([])\n      .map(() => new Array<string>(w).fill(this.defaultRenderAs))\n  }\n\n  /** @param x - X location of pixel\n  * @param y - y location of pixel\n  * @param id - The id of the pixel\n  */\n  renderPixel({ x, y }: Location, id: number): void {\n    const { renderInfo: { [id]: char } } = this\n    this._chars[y][x] = char\n  }\n\n  update(): void {\n    this._callback(this._chars.map(l => l.join('')).join('\\n'))\n  }\n}\n/** render on two different targets (which may also be {@link SplitRenderer}) */\nexport class SplitRenderer<A, B> extends Renderer<{ a: A, b: B }> {\n  defaultRenderAs: { a: A, b: B }\n  a: Renderer<A>\n  b: Renderer<B>\n  constructor(a: Renderer<A>, b: Renderer<B>) {\n    super()\n    this.a = a\n    this.b = b\n    this.defaultRenderAs = {\n      a: a.defaultRenderAs,\n      b: b.defaultRenderAs\n    }\n  }\n\n  renderPixel(loc: Location, id: number): void {\n    this.a.renderPixel(loc, id)\n    this.b.renderPixel(loc, id)\n  }\n\n  reset(): void {\n    this.a.reset()\n    this.b.reset()\n  }\n\n  update(): void {\n    this.a.update()\n    this.b.update()\n  }\n\n  override modifyElement(id: number, { a, b }: { a: A, b: B }): { a: A, b: B } {\n    return super.modifyElement(id, {\n      a: this.a.modifyElement(id, a),\n      b: this.b.modifyElement(id, b)\n    })\n  }\n}\n// This is called a \"modeline\". It's a (n)vi(m)|ex thing.\n// vi: tabstop=2 shiftwidth=2 expandtab\n","/** Several functions to generate lists of relative positions\n *  for a neighborhood hitbox.\n *\n *  Copyright (C) 2018-2024  Nathan Fritzler\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see http://www.gnu.org/licenses/\n */\nimport type { Location } from './renderers'\n/** A list of locations, usually relative around a pixel. */\nexport type Hitbox = Location[]\n/** A rect between two points\n* @param topLeft - The top left corner\n* @param bottomRight - The bottom right corner\n* @returns A hitbox shaped like a rectangle between the corners.\n*/\nexport function rect(topLeft: Location, bottomRight: Location): Location[] {\n  const output: Hitbox = []\n  for (let { x } = topLeft; x <= bottomRight.x; x++) {\n    for (let { y } = topLeft; y <= bottomRight.y; y++) {\n      output.push({ x, y })\n    }\n  }\n  return output\n}\n/** Makes a wolfram neighborhood.\n*\n* Locations intentionally ordered to reflect use in higher-order functions.\n*\n* Area is f(x)=2x+1\n*\n* @param radius - Count of how many to the right and left to include. Defaults\n* @param y - Count of how many to offset the y value by. Defaults to -1.\n* @param includeSelf - Should this include the center pixel? Defaults to true.\n* @returns A hitbox shaped like this under defaults:\n*\n* ```\n* XXX\n*  O\n* ```\n*/\nexport function wolfram(radius?: number, y?: number, includeSelf?: boolean): Hitbox { // eslint-disable-line complexity -- can't reasonably simplify\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n  radius ??= 1;\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n  y ??= -1;\n  const output: Hitbox = []\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- reverse iterated\n  for (let i = radius; i > 0; i--) {\n    output.push({ x: -i, y })\n  }\n  if (includeSelf == null || includeSelf) {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- center\n    output.push({ x: 0, y })\n  }\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- reverse iterated\n  for (let i = radius; i > 0; i--) {\n    output.push({ x: i, y })\n  }\n  return output\n}\n/** Makes a moore neighborhood.\n*\n* Area is f(x)=-1+(2r+1)^2 if `includeSelf` is `false` or undefined, f(x)=(2r+1)^2 if it is `true`\n*\n* @param radius - Count of how many rings around the center to include defaults\n* to 1.\n* @param includeSelf - Should this include the center pixel? Defaults to false.\n* @returns A hitbox shaped like this under defaults:\n*\n* ```\n* XXX\n* XOX\n* XXX\n* ```\n*/\nexport function moore(radius?: number, includeSelf?: boolean): Hitbox {\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- default value\n  radius ??= 1\n  includeSelf ??= false\n  // Note: no need to calculate the Chebyshev distance. All pixels in this\n  // range are \"magically\" within.\n  const r = rect({\n    x: -radius,\n    y: -radius\n  }, {\n    x: radius,\n    y: radius\n  })\n  if (includeSelf) return r\n  return r.filter(({ x, y }) => !(x === 0 && y === 0)) // eslint-disable-line @typescript-eslint/no-magic-numbers -- center is zeros\n  // And to think that this used to be hard... Perhaps they had a different\n  // goal? Or just weren't using higher-order algorithims?\n}\n/** Makes a vonNeumann neighborhood.\n*\n* Area is f(x)=r^2+(r+1)^2 assuming `includeSelf` is true\n*\n* @param radius - Count of how many rings around the center to include. defaults\n* to 1.\n* @param includeSelf - Should this include the center pixel? Defaults to false.\n* @returns A hitbox shaped like this under defaults:\n*\n* ```\n*  X\n* XOX\n*  X\n* ```\n*\n* if `radius` is `2` it looks like this:\n*\n* ```\n*   X\n*  XXX\n* XXOXX\n*  XXX\n*   X\n* ```\n*/\nexport function vonNeumann(radius?: number, includeSelf?: boolean): Hitbox {\n  // A Von Neumann neighborhood of a given distance always fits inside of a\n  // Moore neighborhood of the same. (This is a bit brute-force)\n  const DEFAULT_RADIUS = 1\n  radius ??= DEFAULT_RADIUS\n  return moore(radius, includeSelf).filter(({ x, y }) =>\n    (Math.abs(x) + Math.abs(y) <= radius)) // Taxicab distance\n}\n/** Makes a euclidean neighborhood.\n*\n* Area is not quite that of a circle. TODO find math for exact value.\n*\n* @param radius - Count of how many rings around the center to include. defaults\n* to 1.\n* @param includeSelf - Should this include the center pixel? Defaults to false.\n* @returns A hitbox where all pixels fit within a circle of the given\n* radius, where the precise euclidean distance is `<=` the radias.\n*/\nexport function euclidean(radius?: number, includeSelf?: boolean): Hitbox {\n  // A circle of a given diameter always fits inside of a square of the same\n  // side-length. (This is a bit brute-force)\n  const DEFAULT_RADIUS = 1\n  return moore(radius, includeSelf).filter(({ x, y }) =>\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers -- pythagorean theorum\n    (Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) <= (radius ?? DEFAULT_RADIUS))) // Euclidean distance\n}\n// TODO https://www.npmjs.com/package/compute-minkowski-distance ?\n// TODO Non-Euclidean distance algorithim?\n// This is called a \"modeline\". It's a (n)vi(m)|ex thing.\n// vi: tabstop=2 shiftwidth=2 expandtab\n","/*!\n  * Bootstrap collapse.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./base-component.js'), require('./dom/event-handler.js'), require('./dom/selector-engine.js'), require('./util/index.js')) :\n  typeof define === 'function' && define.amd ? define(['./base-component', './dom/event-handler', './dom/selector-engine', './util/index'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Collapse = factory(global.BaseComponent, global.EventHandler, global.SelectorEngine, global.Index));\n})(this, (function (BaseComponent, EventHandler, SelectorEngine, index_js) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap collapse.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  /**\n   * Constants\n   */\n\n  const NAME = 'collapse';\n  const DATA_KEY = 'bs.collapse';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const EVENT_SHOW = `show${EVENT_KEY}`;\n  const EVENT_SHOWN = `shown${EVENT_KEY}`;\n  const EVENT_HIDE = `hide${EVENT_KEY}`;\n  const EVENT_HIDDEN = `hidden${EVENT_KEY}`;\n  const EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\n  const CLASS_NAME_SHOW = 'show';\n  const CLASS_NAME_COLLAPSE = 'collapse';\n  const CLASS_NAME_COLLAPSING = 'collapsing';\n  const CLASS_NAME_COLLAPSED = 'collapsed';\n  const CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`;\n  const CLASS_NAME_HORIZONTAL = 'collapse-horizontal';\n  const WIDTH = 'width';\n  const HEIGHT = 'height';\n  const SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing';\n  const SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"collapse\"]';\n  const Default = {\n    parent: null,\n    toggle: true\n  };\n  const DefaultType = {\n    parent: '(null|element)',\n    toggle: 'boolean'\n  };\n\n  /**\n   * Class definition\n   */\n\n  class Collapse extends BaseComponent {\n    constructor(element, config) {\n      super(element, config);\n      this._isTransitioning = false;\n      this._triggerArray = [];\n      const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE);\n      for (const elem of toggleList) {\n        const selector = SelectorEngine.getSelectorFromElement(elem);\n        const filterElement = SelectorEngine.find(selector).filter(foundElement => foundElement === this._element);\n        if (selector !== null && filterElement.length) {\n          this._triggerArray.push(elem);\n        }\n      }\n      this._initializeChildren();\n      if (!this._config.parent) {\n        this._addAriaAndCollapsedClass(this._triggerArray, this._isShown());\n      }\n      if (this._config.toggle) {\n        this.toggle();\n      }\n    }\n\n    // Getters\n    static get Default() {\n      return Default;\n    }\n    static get DefaultType() {\n      return DefaultType;\n    }\n    static get NAME() {\n      return NAME;\n    }\n\n    // Public\n    toggle() {\n      if (this._isShown()) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    show() {\n      if (this._isTransitioning || this._isShown()) {\n        return;\n      }\n      let activeChildren = [];\n\n      // find active children\n      if (this._config.parent) {\n        activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES).filter(element => element !== this._element).map(element => Collapse.getOrCreateInstance(element, {\n          toggle: false\n        }));\n      }\n      if (activeChildren.length && activeChildren[0]._isTransitioning) {\n        return;\n      }\n      const startEvent = EventHandler.trigger(this._element, EVENT_SHOW);\n      if (startEvent.defaultPrevented) {\n        return;\n      }\n      for (const activeInstance of activeChildren) {\n        activeInstance.hide();\n      }\n      const dimension = this._getDimension();\n      this._element.classList.remove(CLASS_NAME_COLLAPSE);\n      this._element.classList.add(CLASS_NAME_COLLAPSING);\n      this._element.style[dimension] = 0;\n      this._addAriaAndCollapsedClass(this._triggerArray, true);\n      this._isTransitioning = true;\n      const complete = () => {\n        this._isTransitioning = false;\n        this._element.classList.remove(CLASS_NAME_COLLAPSING);\n        this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW);\n        this._element.style[dimension] = '';\n        EventHandler.trigger(this._element, EVENT_SHOWN);\n      };\n      const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n      const scrollSize = `scroll${capitalizedDimension}`;\n      this._queueCallback(complete, this._element, true);\n      this._element.style[dimension] = `${this._element[scrollSize]}px`;\n    }\n    hide() {\n      if (this._isTransitioning || !this._isShown()) {\n        return;\n      }\n      const startEvent = EventHandler.trigger(this._element, EVENT_HIDE);\n      if (startEvent.defaultPrevented) {\n        return;\n      }\n      const dimension = this._getDimension();\n      this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;\n      index_js.reflow(this._element);\n      this._element.classList.add(CLASS_NAME_COLLAPSING);\n      this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW);\n      for (const trigger of this._triggerArray) {\n        const element = SelectorEngine.getElementFromSelector(trigger);\n        if (element && !this._isShown(element)) {\n          this._addAriaAndCollapsedClass([trigger], false);\n        }\n      }\n      this._isTransitioning = true;\n      const complete = () => {\n        this._isTransitioning = false;\n        this._element.classList.remove(CLASS_NAME_COLLAPSING);\n        this._element.classList.add(CLASS_NAME_COLLAPSE);\n        EventHandler.trigger(this._element, EVENT_HIDDEN);\n      };\n      this._element.style[dimension] = '';\n      this._queueCallback(complete, this._element, true);\n    }\n    _isShown(element = this._element) {\n      return element.classList.contains(CLASS_NAME_SHOW);\n    }\n\n    // Private\n    _configAfterMerge(config) {\n      config.toggle = Boolean(config.toggle); // Coerce string values\n      config.parent = index_js.getElement(config.parent);\n      return config;\n    }\n    _getDimension() {\n      return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT;\n    }\n    _initializeChildren() {\n      if (!this._config.parent) {\n        return;\n      }\n      const children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE);\n      for (const element of children) {\n        const selected = SelectorEngine.getElementFromSelector(element);\n        if (selected) {\n          this._addAriaAndCollapsedClass([element], this._isShown(selected));\n        }\n      }\n    }\n    _getFirstLevelChildren(selector) {\n      const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent);\n      // remove children if greater depth\n      return SelectorEngine.find(selector, this._config.parent).filter(element => !children.includes(element));\n    }\n    _addAriaAndCollapsedClass(triggerArray, isOpen) {\n      if (!triggerArray.length) {\n        return;\n      }\n      for (const element of triggerArray) {\n        element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen);\n        element.setAttribute('aria-expanded', isOpen);\n      }\n    }\n\n    // Static\n    static jQueryInterface(config) {\n      const _config = {};\n      if (typeof config === 'string' && /show|hide/.test(config)) {\n        _config.toggle = false;\n      }\n      return this.each(function () {\n        const data = Collapse.getOrCreateInstance(this, _config);\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(`No method named \"${config}\"`);\n          }\n          data[config]();\n        }\n      });\n    }\n  }\n\n  /**\n   * Data API implementation\n   */\n\n  EventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n    if (event.target.tagName === 'A' || event.delegateTarget && event.delegateTarget.tagName === 'A') {\n      event.preventDefault();\n    }\n    for (const element of SelectorEngine.getMultipleElementsFromSelector(this)) {\n      Collapse.getOrCreateInstance(element, {\n        toggle: false\n      }).toggle();\n    }\n  });\n\n  /**\n   * jQuery\n   */\n\n  index_js.defineJQueryPlugin(Collapse);\n\n  return Collapse;\n\n}));\n//# sourceMappingURL=collapse.js.map\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport {\n  defineJQueryPlugin,\n  getElement,\n  reflow\n} from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'collapse'\nconst DATA_KEY = 'bs.collapse'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_COLLAPSE = 'collapse'\nconst CLASS_NAME_COLLAPSING = 'collapsing'\nconst CLASS_NAME_COLLAPSED = 'collapsed'\nconst CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`\nconst CLASS_NAME_HORIZONTAL = 'collapse-horizontal'\n\nconst WIDTH = 'width'\nconst HEIGHT = 'height'\n\nconst SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"collapse\"]'\n\nconst Default = {\n  parent: null,\n  toggle: true\n}\n\nconst DefaultType = {\n  parent: '(null|element)',\n  toggle: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Collapse extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._isTransitioning = false\n    this._triggerArray = []\n\n    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE)\n\n    for (const elem of toggleList) {\n      const selector = SelectorEngine.getSelectorFromElement(elem)\n      const filterElement = SelectorEngine.find(selector)\n        .filter(foundElement => foundElement === this._element)\n\n      if (selector !== null && filterElement.length) {\n        this._triggerArray.push(elem)\n      }\n    }\n\n    this._initializeChildren()\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._triggerArray, this._isShown())\n    }\n\n    if (this._config.toggle) {\n      this.toggle()\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    if (this._isShown()) {\n      this.hide()\n    } else {\n      this.show()\n    }\n  }\n\n  show() {\n    if (this._isTransitioning || this._isShown()) {\n      return\n    }\n\n    let activeChildren = []\n\n    // find active children\n    if (this._config.parent) {\n      activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES)\n        .filter(element => element !== this._element)\n        .map(element => Collapse.getOrCreateInstance(element, { toggle: false }))\n    }\n\n    if (activeChildren.length && activeChildren[0]._isTransitioning) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    for (const activeInstance of activeChildren) {\n      activeInstance.hide()\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.classList.remove(CLASS_NAME_COLLAPSE)\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n\n    this._element.style[dimension] = 0\n\n    this._addAriaAndCollapsedClass(this._triggerArray, true)\n    this._isTransitioning = true\n\n    const complete = () => {\n      this._isTransitioning = false\n\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n      this._element.style[dimension] = ''\n\n      EventHandler.trigger(this._element, EVENT_SHOWN)\n    }\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n\n    this._queueCallback(complete, this._element, true)\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n    if (this._isTransitioning || !this._isShown()) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    reflow(this._element)\n\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n    for (const trigger of this._triggerArray) {\n      const element = SelectorEngine.getElementFromSelector(trigger)\n\n      if (element && !this._isShown(element)) {\n        this._addAriaAndCollapsedClass([trigger], false)\n      }\n    }\n\n    this._isTransitioning = true\n\n    const complete = () => {\n      this._isTransitioning = false\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE)\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._element.style[dimension] = ''\n\n    this._queueCallback(complete, this._element, true)\n  }\n\n  _isShown(element = this._element) {\n    return element.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    config.toggle = Boolean(config.toggle) // Coerce string values\n    config.parent = getElement(config.parent)\n    return config\n  }\n\n  _getDimension() {\n    return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT\n  }\n\n  _initializeChildren() {\n    if (!this._config.parent) {\n      return\n    }\n\n    const children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE)\n\n    for (const element of children) {\n      const selected = SelectorEngine.getElementFromSelector(element)\n\n      if (selected) {\n        this._addAriaAndCollapsedClass([element], this._isShown(selected))\n      }\n    }\n  }\n\n  _getFirstLevelChildren(selector) {\n    const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent)\n    // remove children if greater depth\n    return SelectorEngine.find(selector, this._config.parent).filter(element => !children.includes(element))\n  }\n\n  _addAriaAndCollapsedClass(triggerArray, isOpen) {\n    if (!triggerArray.length) {\n      return\n    }\n\n    for (const element of triggerArray) {\n      element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen)\n      element.setAttribute('aria-expanded', isOpen)\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    const _config = {}\n    if (typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false\n    }\n\n    return this.each(function () {\n      const data = Collapse.getOrCreateInstance(this, _config)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A' || (event.delegateTarget && event.delegateTarget.tagName === 'A')) {\n    event.preventDefault()\n  }\n\n  for (const element of SelectorEngine.getMultipleElementsFromSelector(this)) {\n    Collapse.getOrCreateInstance(element, { toggle: false }).toggle()\n  }\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Collapse)\n\nexport default Collapse\n","'use strict';\n\nmodule.exports = FPSControl;\nfunction FPSControl(framerate) {\n    this.setFPS(framerate);\n    this.then = Date.now();\n}\n\nFPSControl.prototype.setFPS = function(value) {\n    this.framerate = 1000 / value;\n};\n\nFPSControl.prototype.check = function() {\n    var now = Date.now();\n    var elapsed = now - this.then;\n\n    if (elapsed > this.framerate) {\n        this.then = now - (elapsed % this.framerate);\n        return true;\n    }\n\n    return false;\n};\n"],"names":["a","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","factory","Data","EventHandler","Config","index_js","constructor","element","config","getElement","_element","_config","_getConfig","set","DATA_KEY","dispose","propertyName","remove","off","EVENT_KEY","Object","getOwnPropertyNames","_queueCallback","callback","isAnimated","executeAfterTransition","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","getInstance","get","getOrCreateInstance","VERSION","NAME","eventName","name","elementMap","Map","key","instance","has","instanceMap","size","console","error","Array","from","keys","delete","namespaceRegex","stripNameRegex","stripUidRegex","eventRegistry","uidEvent","customEvents","mouseenter","mouseleave","nativeEvents","Set","makeEventUid","uid","getElementEvents","findHandler","events","callable","delegationSelector","values","find","event","normalizeParameters","originalTypeEvent","handler","delegationFunction","isDelegated","typeEvent","getTypeEvent","addHandler","oneOff","fn","relatedTarget","delegateTarget","contains","handlers","previousFunction","replace","domElements","querySelectorAll","target","parentNode","domElement","hydrateObj","type","apply","addEventListener","removeHandler","removeEventListener","Boolean","on","one","inNamespace","storeElementEvent","isNamespace","startsWith","length","elementEvent","removeNamespacedHandlers","namespace","handlerKey","entries","includes","slice","keyHandlers","trigger","args","$","getjQuery","jQueryEvent","bubbles","nativeDispatch","defaultPrevented","Event","isPropagationStopped","isImmediatePropagationStopped","isDefaultPrevented","evt","cancelable","preventDefault","dispatchEvent","obj","meta","value","_unused","defineProperty","configurable","exports1","TRANSITION_END","parseSelector","selector","window","CSS","escape","match","getTransitionDurationFromElement","transitionDuration","transitionDelay","getComputedStyle","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","split","triggerTransitionEnd","isElement","object","jquery","nodeType","findShadowRoot","document","documentElement","attachShadow","getRootNode","root","ShadowRoot","jQuery","body","hasAttribute","DOMContentLoadedCallbacks","onDOMContentLoaded","readyState","push","execute","possibleCallback","defaultValue","defineJQueryPlugin","plugin","JQUERY_NO_CONFLICT","jQueryInterface","Constructor","noConflict","transitionElement","waitForTransition","emulatedDuration","called","setTimeout","querySelector","getNextActiveElement","list","activeElement","shouldGetNext","isCycleAllowed","listLength","index","indexOf","Math","max","min","getUID","prefix","floor","random","getElementById","isDisabled","Node","ELEMENT_NODE","classList","disabled","getAttribute","isRTL","dir","isVisible","getClientRects","elementIsVisible","getPropertyValue","closedDetails","closest","summary","noop","reflow","offsetHeight","toType","prototype","toString","toLowerCase","Symbol","toStringTag","Manipulator","Default","DefaultType","jsonConfig","getDataAttribute","getDataAttributes","configTypes","property","expectedTypes","valueType","RegExp","test","TypeError","toUpperCase","normalizeData","JSON","parse","decodeURIComponent","normalizeDataKey","chr","setDataAttribute","setAttribute","removeDataAttribute","removeAttribute","attributes","dataset","filter","pureKey","charAt","getSelector","hrefAttribute","trim","map","sel","join","SelectorEngine","concat","Element","findOne","children","child","matches","parents","ancestor","prev","previous","previousElementSibling","next","nextElementSibling","focusableChildren","focusables","el","getSelectorFromElement","getElementFromSelector","getMultipleElementsFromSelector","$060f52fa64169c81$exports","$060f52fa64169c81$var$$parcel$export","e","n","v","s","enumerable","$060f52fa64169c81$var$$1b908a5c4ca6a102$export$354076178bdef094","$060f52fa64169c81$var$$1b908a5c4ca6a102$export$b2b53dd543b26a90","$060f52fa64169c81$var$$1b908a5c4ca6a102$export$b3b7c4718d5d9517","$060f52fa64169c81$var$$1b908a5c4ca6a102$export$83d89fbfd8236492","$060f52fa64169c81$var$$37714ef34a3d49de$exports","$060f52fa64169c81$var$$9c5137925c0f6dd6$exports","$060f52fa64169c81$var$$2fc64e2ac0a12983$exports","$060f52fa64169c81$var$$2fc64e2ac0a12983$export$b6f174f59b684b34","x","y","width","$060f52fa64169c81$var$$2fc64e2ac0a12983$export$e27e751a5b1946e3","locs","offset","frame","loop","loc","newLoc","$060f52fa64169c81$var$$2fc64e2ac0a12983$export$88530751e3977073","$060f52fa64169c81$var$$2fc64e2ac0a12983$export$95ab700cf10a487","$060f52fa64169c81$var$$2fc64e2ac0a12983$export$446eec980ee5a157","$060f52fa64169c81$var$$2fc64e2ac0a12983$export$5482513c57691790","modifyElement","newRenderAs","renderInfo","set_width","_width","get_width","set_height","_height","get_height","canvas","defaultRenderAs","ctx","getContext","imageData","getImageData","indexOfColor","stringify","renderPixel","color","pixelOffset","i","data","reset","imageSmoothingEnabled","update","putImageData","height","_chars","_callback","w","h","fill","char","l","b","$060f52fa64169c81$var$$37714ef34a3d49de$export$4b409e53cf4df6e6","topLeft","bottomRight","output","$060f52fa64169c81$var$$37714ef34a3d49de$export$570c5686df7a3a74","radius","includeSelf","$060f52fa64169c81$var$$37714ef34a3d49de$export$dfd711383a0d1c21","r","$060f52fa64169c81$var$$37714ef34a3d49de$export$6d4d43aa0229d23f","abs","$060f52fa64169c81$var$$37714ef34a3d49de$export$d7ea5b7fe202bfa1","sqrt","pow","$060f52fa64169c81$var$$1b908a5c4ca6a102$var$_convertNumListToBf","nl","out","item","parseInt","lifelike","p","pattern","numbers","bfdie","bflive","madeWithRule","hitbox","liveCell","thisId","SMALLEST_BINARY_DIGIT","mooreNearbyCounter","setPixel","defaultId","deadCell","wolfram","binStates","wolframNewState","renderer","loopint","elements","nameAliases","mode","onIterate","undefined","onAfterIterate","onElementModified","pixelCounts","frames","Uint32Array","log","addElement","renderAs","canvasW","canvasH","randomlyFill","pr","addMultipleElements","forEach","oldData","aliasElements","newData","oldName","newName","elm","nameToId","unaliased","findIndex","getElementByName","whatIs","getPixelId","play","canvasSizes","iterate","requestAnimationFrame","setInterval","pause","num","cancelAnimationFrame","clearInterval","locationBoundsCheck","overflowLeft","overflowRight","overflowTop","overflowBottom","fixedLoc","confirmElm","totalWithin","area","search","_moore","center","fundamentalNewState","ruleNum","fundamentalStatesWithin","bool","reduce","res","_wolfram","wolframNearby","current","wolframNearbyCounter","binDex","ident","nextFrame","typedUpdatedDead","currentPixId","oldId","Uint8Array","ceil","pixel","hblocStupidFallback","hbLoc","oldValue","bitMask","version","hasOwnProperty","source","BaseComponent","EVENT_SHOW","EVENT_SHOWN","EVENT_HIDE","EVENT_HIDDEN","EVENT_CLICK_DATA_API","CLASS_NAME_SHOW","CLASS_NAME_COLLAPSE","CLASS_NAME_COLLAPSING","CLASS_NAME_DEEPER_CHILDREN","SELECTOR_DATA_TOGGLE","parent","toggle","Collapse","elem","_isTransitioning","_triggerArray","filterElement","foundElement","_initializeChildren","_addAriaAndCollapsedClass","_isShown","hide","show","activeChildren","_getFirstLevelChildren","startEvent","activeInstance","dimension","_getDimension","add","style","capitalizedDimension","scrollSize","getBoundingClientRect","selected","triggerArray","isOpen","each","tagName","$f7129f53a7a8651e$exports","$f7129f53a7a8651e$var$FPSControl","framerate","setFPS","then","Date","now","check","elapsed","$beec290f9d261ad4$var$zoomX","$beec290f9d261ad4$var$zoomY","$beec290f9d261ad4$var$targeterLoc","$beec290f9d261ad4$var$targeterX","$beec290f9d261ad4$var$targeterY","$beec290f9d261ad4$var$targeterStats","$beec290f9d261ad4$var$oldZoom","$beec290f9d261ad4$var$zoomctx","cctx","$beec290f9d261ad4$var$renderer","strokeStyle","fillStyle","$beec290f9d261ad4$var$shtargeter","checked","fillRect","$beec290f9d261ad4$var$canvas","innerText","clearRect","$beec290f9d261ad4$var$zoom","drawImage","$beec290f9d261ad4$var$zoomScaleFactor","$beec290f9d261ad4$var$shfocusbox","fbw","fbh","fbx","$beec290f9d261ad4$var$ZOOM_SCALE_RAD_FACTOR","fby","strokeRect","beginPath","moveTo","lineTo","stroke","$beec290f9d261ad4$var$updateSmallLines","offsetX","offsetY","$beec290f9d261ad4$var$p","$beec290f9d261ad4$var$fpsc","__esModule","default","$beec290f9d261ad4$var$fps","$beec290f9d261ad4$var$fpsMax","$beec290f9d261ad4$var$fpsUnlimited","$beec290f9d261ad4$var$fpsAmount","$beec290f9d261ad4$var$framecount","$beec290f9d261ad4$var$lasttime","performance","$beec290f9d261ad4$var$frames","$beec290f9d261ad4$var$pixelRatio","Ctx2dRenderer","PixelManipulator","$beec290f9d261ad4$var$updateCustomizer","$beec290f9d261ad4$var$customSelect","$beec290f9d261ad4$var$customizeColor","dot","padStart","alphaVal","$beec290f9d261ad4$var$customizeColorAlpha","$beec290f9d261ad4$var$customizeColorAlphaText","$beec290f9d261ad4$var$customizeName","$beec290f9d261ad4$var$changeColor","exec","$beec290f9d261ad4$var$zoomClick","zoomPos","active","ctrlKey","$beec290f9d261ad4$var$ctrlSelect","altKey","$beec290f9d261ad4$var$altSelect","$beec290f9d261ad4$var$normalSelect","$beec290f9d261ad4$var$convertPauseToPlay","$beec290f9d261ad4$var$playBtn","title","playIcon","$beec290f9d261ad4$var$resetBtn","$beec290f9d261ad4$var$widthE","$beec290f9d261ad4$var$heightE","zoomW","$beec290f9d261ad4$var$zoomWidthElm","zoomH","$beec290f9d261ad4$var$zoomHeightElm","isNaN","$beec290f9d261ad4$var$oneFrameAtATime","$beec290f9d261ad4$var$convertPlayToPause","$beec290f9d261ad4$var$normalFill","fillP","$beec290f9d261ad4$var$normalFillP","$beec290f9d261ad4$var$ctrlFill","$beec290f9d261ad4$var$ctrlFillP","$beec290f9d261ad4$var$altFill","$beec290f9d261ad4$var$altFillP","$beec290f9d261ad4$var$pixelCounterT","$beec290f9d261ad4$var$pixelCounterBox","$beec290f9d261ad4$var$backendversion","$beec290f9d261ad4$var$pixelCounter","$beec290f9d261ad4$var$elmdrops","getElementsByClassName","nsv","csv","asv","cusv","htmlElm","innerHTML","newElement","createElement","appendChild","Acid","randsAcid","crypto","getRandomValues","xRand","yRand","disapearRand","Blocks","rules","Seeds","conductorNearbyTotal","allowedNums","Highlife","Water","randsWater","$beec290f9d261ad4$var$beforeIterate","toFixed","$beec290f9d261ad4$var$afterIterate","background","idStr","count","percent","li","icon","createTextNode","span","unit","round","ratioE","backgroundColor","click","bootstrapHandler","bootstrapDelegationHandler","wrapFunction","MAX_UID","MILLISECONDS_MULTIPLIER","durationPadding","bsKeys","DATA_API_KEY","CLASS_NAME_COLLAPSED","CLASS_NAME_HORIZONTAL","WIDTH","HEIGHT","SELECTOR_ACTIVES","toggleList","complete"],"version":3,"file":"pixelmanipulator.2b555b87.js.map"}